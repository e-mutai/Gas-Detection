2025-03-27 17:32:23,939 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:32:24,174 - WARNING:  * Debugger is active!
2025-03-27 17:32:24,203 - INFO:  * Debugger PIN: 106-521-103
2025-03-27 17:32:33,955 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:32:43,957 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:32:53,958 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:33:03,960 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:33:13,962 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:33:23,962 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:33:33,963 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:33:43,964 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:33:53,965 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:34:03,967 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:34:13,967 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:34:23,968 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:34:33,969 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:34:43,971 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:34:53,971 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:35:03,972 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:35:13,973 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:35:23,974 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:35:33,975 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:35:43,976 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:35:53,978 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:36:03,978 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:36:13,979 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:36:23,980 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:36:33,981 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:36:43,983 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:36:53,984 - ERROR: Data retrieval error: 'ArduinoCloudAPI' object has no attribute 'get_latest_property_values'
2025-03-27 17:37:01,283 - INFO:  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-27 18:58:44,034 - INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 18:58:44,035 - INFO: [33mPress CTRL+C to quit[0m
2025-03-27 18:58:44,039 - INFO:  * Restarting with stat
2025-03-27 18:58:45,233 - WARNING:  * Debugger is active!
2025-03-27 18:58:45,249 - INFO:  * Debugger PIN: 106-521-103
2025-03-27 18:58:49,260 - ERROR: Data processing error: (sqlite3.OperationalError) table alert has no column named message
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 15:58:49.254915')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 18:58:49,376 - ERROR: Data processing error: (sqlite3.OperationalError) table alert has no column named message
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 15:58:49.375525')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 18:59:03,889 - ERROR: Data processing error: (sqlite3.OperationalError) table alert has no column named message
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 15:59:03.888491')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 18:59:03,937 - ERROR: Data processing error: (sqlite3.OperationalError) table alert has no column named message
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 15:59:03.937111')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 18:59:18,961 - ERROR: Data processing error: (sqlite3.OperationalError) table alert has no column named message
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 15:59:18.961386')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 18:59:19,077 - ERROR: Data processing error: (sqlite3.OperationalError) table alert has no column named message
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 15:59:19.076808')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:27:50,260 - INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 19:27:50,260 - INFO: [33mPress CTRL+C to quit[0m
2025-03-27 19:27:50,263 - INFO:  * Restarting with stat
2025-03-27 19:27:51,516 - WARNING:  * Debugger is active!
2025-03-27 19:27:51,558 - INFO:  * Debugger PIN: 106-521-103
2025-03-27 19:27:55,366 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:27:55.365498')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:27:56,049 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:27:56.048846')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:28:10,592 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:28:10.591781')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:28:10,723 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:28:10.722774')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:28:26,114 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:28:26.113387')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:28:26,408 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:28:26.407762')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:28:43,041 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:28:43.040826')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:28:43,245 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:28:43.244678')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:29:00,465 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:29:00.464377')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:29:00,748 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:29:00.747652')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:29:17,847 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:29:17.846344')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:29:18,539 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:29:18.538416')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:29:31,916 - INFO:  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\models\\gas_readings.py', reloading
2025-03-27 19:29:32,358 - INFO:  * Restarting with stat
2025-03-27 19:29:35,773 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:29:35.772608')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:29:35,992 - WARNING:  * Debugger is active!
2025-03-27 19:29:36,057 - INFO:  * Debugger PIN: 106-521-103
2025-03-27 19:29:41,444 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:29:41.442122')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:30:59,699 - INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 19:30:59,700 - INFO: [33mPress CTRL+C to quit[0m
2025-03-27 19:30:59,702 - INFO:  * Restarting with stat
2025-03-27 19:31:00,988 - WARNING:  * Debugger is active!
2025-03-27 19:31:01,003 - INFO:  * Debugger PIN: 106-521-103
2025-03-27 19:31:04,545 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:31:04.543232')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:31:06,002 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:31:06.001045')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:31:20,179 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:31:20.178536')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:31:20,451 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:31:20.450997')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:31:35,160 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:31:35.159143')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:31:35,437 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:31:35.437268')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:31:51,379 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:31:51.379152')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:31:51,762 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:31:51.761546')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:32:08,006 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:32:08.006000')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:32:08,572 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:32:08.571785')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:32:23,812 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:32:23.811853')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:32:24,390 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:32:24.389287')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:32:34,148 - INFO:  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\models\\gas_readings.py', reloading
2025-03-27 19:32:34,420 - INFO:  * Restarting with stat
2025-03-27 19:32:36,870 - WARNING:  * Debugger is active!
2025-03-27 19:32:36,890 - INFO:  * Debugger PIN: 106-521-103
2025-03-27 19:32:41,022 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:32:41.021359')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:32:41,942 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 19:32:41,954 - INFO: Created alert: <Alert info at None>
2025-03-27 19:32:41,961 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:32:41.959928')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:32:54,243 - INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 19:32:54,253 - INFO: [33mPress CTRL+C to quit[0m
2025-03-27 19:32:54,256 - INFO:  * Restarting with stat
2025-03-27 19:32:55,507 - WARNING:  * Debugger is active!
2025-03-27 19:32:55,522 - INFO:  * Debugger PIN: 106-521-103
2025-03-27 19:32:58,718 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 19:32:58,750 - INFO: Created alert: <Alert info at None>
2025-03-27 19:32:58,758 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:32:58.756851')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:32:59,673 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 19:32:59,681 - INFO: Created alert: <Alert info at None>
2025-03-27 19:32:59,687 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:32:59.685863')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:33:13,636 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 19:33:13,642 - INFO: Created alert: <Alert info at None>
2025-03-27 19:33:13,644 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:33:13.643425')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 19:33:14,344 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 19:33:14,349 - INFO: Created alert: <Alert info at None>
2025-03-27 19:33:14,351 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 16:33:14.350547')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:18:03,124 - INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 20:18:03,125 - INFO: [33mPress CTRL+C to quit[0m
2025-03-27 20:18:03,128 - INFO:  * Restarting with stat
2025-03-27 20:18:04,225 - WARNING:  * Debugger is active!
2025-03-27 20:18:04,239 - INFO:  * Debugger PIN: 106-521-103
2025-03-27 20:18:07,940 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:18:07.932735'}
2025-03-27 20:18:07,942 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:18:07,943 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:18:07.932735'}
2025-03-27 20:18:07,943 - INFO: Created alert: <Alert info at None>
2025-03-27 20:18:07,947 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:18:07.946565')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:18:07.946565')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:18:08,566 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:18:08.565634'}
2025-03-27 20:18:08,569 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:18:08,570 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:18:08.565634'}
2025-03-27 20:18:08,570 - INFO: Created alert: <Alert info at None>
2025-03-27 20:18:08,575 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:18:08.574090')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:18:08.574090')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:18:22,534 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:18:22.530060'}
2025-03-27 20:18:22,534 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:18:22,535 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:18:22.530060'}
2025-03-27 20:18:22,535 - INFO: Created alert: <Alert info at None>
2025-03-27 20:18:22,538 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:18:22.537337')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:18:22.537337')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:18:22,990 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:18:22.989688'}
2025-03-27 20:18:22,991 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:18:22,992 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:18:22.989688'}
2025-03-27 20:18:22,992 - INFO: Created alert: <Alert info at None>
2025-03-27 20:18:22,994 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:18:22.993603')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:18:22.993603')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:18:37,638 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:18:37.633589'}
2025-03-27 20:18:37,639 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:18:37,640 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:18:37.633589'}
2025-03-27 20:18:37,641 - INFO: Created alert: <Alert info at None>
2025-03-27 20:18:37,643 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:18:37.642342')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:18:37.642342')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:18:38,223 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:18:38.221333'}
2025-03-27 20:18:38,224 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:18:38,225 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:18:38.221333'}
2025-03-27 20:18:38,225 - INFO: Created alert: <Alert info at None>
2025-03-27 20:18:38,226 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:18:38.226351')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:18:38.226351')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:18:54,011 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:18:54.008452'}
2025-03-27 20:18:54,013 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:18:54,014 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:18:54.008452'}
2025-03-27 20:18:54,015 - INFO: Created alert: <Alert info at None>
2025-03-27 20:18:54,017 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:18:54.016503')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:18:54.016503')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:18:55,222 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:18:55.219414'}
2025-03-27 20:18:55,223 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:18:55,223 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:18:55.219414'}
2025-03-27 20:18:55,224 - INFO: Created alert: <Alert info at None>
2025-03-27 20:18:55,228 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:18:55.226810')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:18:55.226810')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:19:09,772 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:19:09.770690'}
2025-03-27 20:19:09,773 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:19:09,773 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:19:09.770690'}
2025-03-27 20:19:09,774 - INFO: Created alert: <Alert info at None>
2025-03-27 20:19:09,775 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:19:09.775341')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:19:09.775341')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:19:10,795 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:19:10.792827'}
2025-03-27 20:19:10,796 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:19:10,797 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:19:10.792827'}
2025-03-27 20:19:10,797 - INFO: Created alert: <Alert info at None>
2025-03-27 20:19:10,804 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:19:10.803271')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:19:10.803271')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:19:25,953 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:19:25.949600'}
2025-03-27 20:19:25,954 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:19:25,955 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:19:25.949600'}
2025-03-27 20:19:25,956 - INFO: Created alert: <Alert info at None>
2025-03-27 20:19:25,958 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:19:25.957340')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:19:25.957340')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:19:26,998 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:19:26.995909'}
2025-03-27 20:19:26,999 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:19:27,000 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:19:26.995909'}
2025-03-27 20:19:27,002 - INFO: Created alert: <Alert info at None>
2025-03-27 20:19:27,004 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:19:27.003728')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:19:27.003728')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:19:43,287 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:19:43.284215'}
2025-03-27 20:19:43,288 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:19:43,289 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:19:43.284215'}
2025-03-27 20:19:43,290 - INFO: Created alert: <Alert info at None>
2025-03-27 20:19:43,291 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:19:43.291205')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:19:43.291205')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:19:44,765 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:19:44.761951'}
2025-03-27 20:19:44,766 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:19:44,766 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:19:44.761951'}
2025-03-27 20:19:44,767 - INFO: Created alert: <Alert info at None>
2025-03-27 20:19:44,769 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:19:44.768458')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:19:44.768458')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:20:00,221 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:20:00.218514'}
2025-03-27 20:20:00,222 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:20:00,224 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:20:00.218514'}
2025-03-27 20:20:00,225 - INFO: Created alert: <Alert info at None>
2025-03-27 20:20:00,229 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:20:00.227942')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:20:00.227942')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:20:00,742 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:20:00.741030'}
2025-03-27 20:20:00,743 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:20:00,743 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:20:00.741030'}
2025-03-27 20:20:00,744 - INFO: Created alert: <Alert info at None>
2025-03-27 20:20:00,745 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:20:00.745149')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:20:00.745149')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:20:16,458 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:20:16.445039'}
2025-03-27 20:20:16,487 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:20:16,500 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:20:16.445039'}
2025-03-27 20:20:16,501 - INFO: Created alert: <Alert info at None>
2025-03-27 20:20:16,507 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:20:16.505675')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:20:16.505675')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:20:17,347 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:20:17.344832'}
2025-03-27 20:20:17,348 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:20:17,349 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:20:17.344832'}
2025-03-27 20:20:17,350 - INFO: Created alert: <Alert info at None>
2025-03-27 20:20:17,354 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:20:17.353478')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:20:17.353478')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:20:32,642 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:20:32.639548'}
2025-03-27 20:20:32,643 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:20:32,644 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:20:32.639548'}
2025-03-27 20:20:32,645 - INFO: Created alert: <Alert info at None>
2025-03-27 20:20:32,650 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:20:32.649018')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:20:32.649018')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:20:33,169 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:20:33.167222'}
2025-03-27 20:20:33,170 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:20:33,171 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:20:33.167222'}
2025-03-27 20:20:33,171 - INFO: Created alert: <Alert info at None>
2025-03-27 20:20:33,173 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:20:33.172675')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:20:33.172675')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:20:47,746 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:20:47.743795'}
2025-03-27 20:20:47,747 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:20:47,747 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:20:47.743795'}
2025-03-27 20:20:47,748 - INFO: Created alert: <Alert info at None>
2025-03-27 20:20:47,749 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:20:47.749194')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:20:47.749194')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:20:48,677 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:20:48.674838'}
2025-03-27 20:20:48,678 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:20:48,679 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:20:48.674838'}
2025-03-27 20:20:48,679 - INFO: Created alert: <Alert info at None>
2025-03-27 20:20:48,681 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:20:48.680586')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:20:48.680586')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:21:03,106 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:21:03.103854'}
2025-03-27 20:21:03,106 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:21:03,107 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:21:03.103854'}
2025-03-27 20:21:03,108 - INFO: Created alert: <Alert info at None>
2025-03-27 20:21:03,109 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:21:03.109046')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:21:03.109046')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:21:04,277 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:21:04.275328'}
2025-03-27 20:21:04,277 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:21:04,278 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:21:04.275328'}
2025-03-27 20:21:04,278 - INFO: Created alert: <Alert info at None>
2025-03-27 20:21:04,280 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:21:04.279814')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:21:04.279814')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:21:19,375 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:21:19.372882'}
2025-03-27 20:21:19,376 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:21:19,376 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:21:19.372882'}
2025-03-27 20:21:19,377 - INFO: Created alert: <Alert info at None>
2025-03-27 20:21:19,380 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:21:19.379560')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:21:19.379560')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:21:20,362 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:21:20.360307'}
2025-03-27 20:21:20,363 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:21:20,363 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:21:20.360307'}
2025-03-27 20:21:20,364 - INFO: Created alert: <Alert info at None>
2025-03-27 20:21:20,365 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:21:20.364921')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:21:20.364921')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:21:35,006 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:21:35.003773'}
2025-03-27 20:21:35,007 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:21:35,007 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:21:35.003773'}
2025-03-27 20:21:35,008 - INFO: Created alert: <Alert info at None>
2025-03-27 20:21:35,009 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:21:35.009148')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:21:35.009148')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:21:35,730 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:21:35.728299'}
2025-03-27 20:21:35,730 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:21:35,731 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:21:35.728299'}
2025-03-27 20:21:35,731 - INFO: Created alert: <Alert info at None>
2025-03-27 20:21:35,733 - ERROR: Data processing error: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:21:35.732566')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 217, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:21:35.732566')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:25:38,278 - INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 20:25:38,279 - INFO: [33mPress CTRL+C to quit[0m
2025-03-27 20:25:38,281 - INFO:  * Restarting with stat
2025-03-27 20:25:39,397 - WARNING:  * Debugger is active!
2025-03-27 20:25:39,411 - INFO:  * Debugger PIN: 106-521-103
2025-03-27 20:25:43,083 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:25:43.080982'}
2025-03-27 20:25:43,085 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:25:43,086 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:25:43.080982'}
2025-03-27 20:25:43,086 - INFO: Created alert: <Alert info at None>
2025-03-27 20:25:43,091 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:25:43.090197')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:25:43.090197')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:25:43,878 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:25:43.877267'}
2025-03-27 20:25:43,881 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:25:43,892 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:25:43.877267'}
2025-03-27 20:25:43,893 - INFO: Created alert: <Alert info at None>
2025-03-27 20:25:43,897 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:25:43.896813')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:25:43.896813')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:25:53,613 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:25:53.612207'}
2025-03-27 20:25:53,614 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:25:53,615 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:25:53.612207'}
2025-03-27 20:25:53,615 - INFO: Created alert: <Alert info at None>
2025-03-27 20:25:53,617 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:25:53.616805')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:25:53.616805')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:25:54,553 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:25:54.551545'}
2025-03-27 20:25:54,554 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:25:54,554 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:25:54.551545'}
2025-03-27 20:25:54,555 - INFO: Created alert: <Alert info at None>
2025-03-27 20:25:54,556 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:25:54.555948')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:25:54.555948')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:26:03,657 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:03.655033'}
2025-03-27 20:26:03,658 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:26:03,659 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:03.655033'}
2025-03-27 20:26:03,659 - INFO: Created alert: <Alert info at None>
2025-03-27 20:26:03,661 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:03.660834')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:03.660834')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:26:04,401 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:04.398881'}
2025-03-27 20:26:04,402 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:26:04,402 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:04.398881'}
2025-03-27 20:26:04,403 - INFO: Created alert: <Alert info at None>
2025-03-27 20:26:04,404 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:04.404251')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:04.404251')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:26:14,594 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:14.588475'}
2025-03-27 20:26:14,605 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:26:14,608 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:14.588475'}
2025-03-27 20:26:14,629 - INFO: Created alert: <Alert info at None>
2025-03-27 20:26:14,658 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:14.655571')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:14.655571')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:26:15,338 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:15.336789'}
2025-03-27 20:26:15,339 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:26:15,340 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:15.336789'}
2025-03-27 20:26:15,340 - INFO: Created alert: <Alert info at None>
2025-03-27 20:26:15,342 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:15.341872')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:15.341872')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:26:24,976 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:24.974059'}
2025-03-27 20:26:24,977 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:26:24,977 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:24.974059'}
2025-03-27 20:26:24,978 - INFO: Created alert: <Alert info at None>
2025-03-27 20:26:24,979 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:24.979305')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:24.979305')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:26:25,233 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:25.231241'}
2025-03-27 20:26:25,234 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:26:25,234 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:25.231241'}
2025-03-27 20:26:25,235 - INFO: Created alert: <Alert info at None>
2025-03-27 20:26:25,237 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:25.236782')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:25.236782')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:26:34,798 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:34.797124'}
2025-03-27 20:26:34,799 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:26:34,799 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:34.797124'}
2025-03-27 20:26:34,800 - INFO: Created alert: <Alert info at None>
2025-03-27 20:26:34,801 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:34.801116')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:34.801116')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:26:41,511 - INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 20:26:41,511 - INFO: [33mPress CTRL+C to quit[0m
2025-03-27 20:26:41,514 - INFO:  * Restarting with stat
2025-03-27 20:26:42,768 - WARNING:  * Debugger is active!
2025-03-27 20:26:42,784 - INFO:  * Debugger PIN: 106-521-103
2025-03-27 20:26:46,643 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:46.641595'}
2025-03-27 20:26:46,645 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:26:46,646 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:46.641595'}
2025-03-27 20:26:46,646 - INFO: Created alert: <Alert info at None>
2025-03-27 20:26:46,653 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:46.651576')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:46.651576')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:26:46,944 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:46.942356'}
2025-03-27 20:26:46,946 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:26:46,947 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:46.942356'}
2025-03-27 20:26:46,947 - INFO: Created alert: <Alert info at None>
2025-03-27 20:26:46,953 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:46.952675')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:46.952675')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:26:56,829 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:56.827692'}
2025-03-27 20:26:56,830 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:26:56,830 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:56.827692'}
2025-03-27 20:26:56,831 - INFO: Created alert: <Alert info at None>
2025-03-27 20:26:56,832 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:56.832292')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:56.832292')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:26:57,100 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:57.099156'}
2025-03-27 20:26:57,101 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:26:57,102 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:26:57.099156'}
2025-03-27 20:26:57,102 - INFO: Created alert: <Alert info at None>
2025-03-27 20:26:57,103 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:57.103487')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:26:57.103487')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:27:08,046 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:08.044078'}
2025-03-27 20:27:08,047 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:27:08,048 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:08.044078'}
2025-03-27 20:27:08,048 - INFO: Created alert: <Alert info at None>
2025-03-27 20:27:08,050 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:08.049926')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:08.049926')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:27:08,641 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:08.638348'}
2025-03-27 20:27:08,642 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:27:08,643 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:08.638348'}
2025-03-27 20:27:08,644 - INFO: Created alert: <Alert info at None>
2025-03-27 20:27:08,647 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:08.646534')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:08.646534')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:27:19,064 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:19.063115'}
2025-03-27 20:27:19,065 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:27:19,066 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:19.063115'}
2025-03-27 20:27:19,067 - INFO: Created alert: <Alert info at None>
2025-03-27 20:27:19,069 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:19.068394')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:19.068394')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:27:19,681 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:19.677012'}
2025-03-27 20:27:19,682 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:27:19,683 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:19.677012'}
2025-03-27 20:27:19,684 - INFO: Created alert: <Alert info at None>
2025-03-27 20:27:19,687 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:19.686074')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:19.686074')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:27:33,005 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:32.999488'}
2025-03-27 20:27:33,006 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:27:33,008 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:32.999488'}
2025-03-27 20:27:33,009 - INFO: Created alert: <Alert info at None>
2025-03-27 20:27:33,012 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:33.011116')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:33.011116')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:27:34,507 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:34.502967'}
2025-03-27 20:27:34,509 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:27:34,513 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:34.502967'}
2025-03-27 20:27:34,514 - INFO: Created alert: <Alert info at None>
2025-03-27 20:27:34,516 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:34.515642')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:34.515642')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:27:46,287 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:46.281518'}
2025-03-27 20:27:46,289 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:27:46,291 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:46.281518'}
2025-03-27 20:27:46,292 - INFO: Created alert: <Alert info at None>
2025-03-27 20:27:46,294 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:46.293961')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:46.293961')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:27:47,274 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:47.271008'}
2025-03-27 20:27:47,275 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:27:47,276 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:47.271008'}
2025-03-27 20:27:47,276 - INFO: Created alert: <Alert info at None>
2025-03-27 20:27:47,279 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:47.278336')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:47.278336')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:27:58,174 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:58.171380'}
2025-03-27 20:27:58,175 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:27:58,176 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:58.171380'}
2025-03-27 20:27:58,177 - INFO: Created alert: <Alert info at None>
2025-03-27 20:27:58,181 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:58.179840')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:58.179840')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:27:58,313 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:58.307868'}
2025-03-27 20:27:58,314 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:27:58,315 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:27:58.307868'}
2025-03-27 20:27:58,315 - INFO: Created alert: <Alert info at None>
2025-03-27 20:27:58,318 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:58.317161')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:27:58.317161')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:28:08,928 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:08.926815'}
2025-03-27 20:28:08,929 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:28:08,930 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:08.926815'}
2025-03-27 20:28:08,930 - INFO: Created alert: <Alert info at None>
2025-03-27 20:28:08,932 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:08.931555')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:08.931555')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:28:09,394 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:09.393180'}
2025-03-27 20:28:09,395 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:28:09,396 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:09.393180'}
2025-03-27 20:28:09,396 - INFO: Created alert: <Alert info at None>
2025-03-27 20:28:09,398 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:09.397557')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:09.397557')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:28:20,077 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:20.074529'}
2025-03-27 20:28:20,078 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:28:20,107 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:20.074529'}
2025-03-27 20:28:20,108 - INFO: Created alert: <Alert info at None>
2025-03-27 20:28:20,113 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:20.112498')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:20.112498')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:28:20,138 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:20.133671'}
2025-03-27 20:28:20,141 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:28:20,142 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:20.133671'}
2025-03-27 20:28:20,143 - INFO: Created alert: <Alert info at None>
2025-03-27 20:28:20,148 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:20.147764')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:20.147764')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:28:31,238 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:31.236467'}
2025-03-27 20:28:31,239 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:28:31,239 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:31.236467'}
2025-03-27 20:28:31,240 - INFO: Created alert: <Alert info at None>
2025-03-27 20:28:31,241 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:31.241402')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:31.241402')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:28:31,769 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:31.767651'}
2025-03-27 20:28:31,770 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:28:31,770 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:31.767651'}
2025-03-27 20:28:31,771 - INFO: Created alert: <Alert info at None>
2025-03-27 20:28:31,773 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:31.772435')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:31.772435')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:28:41,868 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:41.865809'}
2025-03-27 20:28:41,869 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:28:41,870 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:41.865809'}
2025-03-27 20:28:41,870 - INFO: Created alert: <Alert info at None>
2025-03-27 20:28:41,872 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:41.871928')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:41.871928')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:28:42,335 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:42.333722'}
2025-03-27 20:28:42,336 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:28:42,337 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:42.333722'}
2025-03-27 20:28:42,337 - INFO: Created alert: <Alert info at None>
2025-03-27 20:28:42,339 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:42.338531')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:42.338531')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:28:52,322 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:52.320057'}
2025-03-27 20:28:52,323 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:28:52,324 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:52.320057'}
2025-03-27 20:28:52,325 - INFO: Created alert: <Alert info at None>
2025-03-27 20:28:52,327 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:52.326802')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:52.326802')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:28:53,096 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:53.094843'}
2025-03-27 20:28:53,097 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:28:53,098 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:28:53.094843'}
2025-03-27 20:28:53,098 - INFO: Created alert: <Alert info at None>
2025-03-27 20:28:53,100 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:53.099578')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:28:53.099578')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:29:02,648 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:02.646582'}
2025-03-27 20:29:02,649 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:29:02,649 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:02.646582'}
2025-03-27 20:29:02,650 - INFO: Created alert: <Alert info at None>
2025-03-27 20:29:02,652 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:02.651514')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:02.651514')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:29:03,936 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:03.934525'}
2025-03-27 20:29:03,937 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:29:03,939 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:03.934525'}
2025-03-27 20:29:03,939 - INFO: Created alert: <Alert info at None>
2025-03-27 20:29:03,941 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:03.940869')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:03.940869')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:29:12,577 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:12.575750'}
2025-03-27 20:29:12,578 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:29:12,578 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:12.575750'}
2025-03-27 20:29:12,579 - INFO: Created alert: <Alert info at None>
2025-03-27 20:29:12,580 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:12.580331')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:12.580331')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:29:14,424 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:14.422228'}
2025-03-27 20:29:14,424 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:29:14,425 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:14.422228'}
2025-03-27 20:29:14,426 - INFO: Created alert: <Alert info at None>
2025-03-27 20:29:14,427 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:14.426938')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:14.426938')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:29:22,926 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:22.920783'}
2025-03-27 20:29:22,927 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:29:22,928 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:22.920783'}
2025-03-27 20:29:22,929 - INFO: Created alert: <Alert info at None>
2025-03-27 20:29:22,931 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:22.930551')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:22.930551')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:29:26,856 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:26.853943'}
2025-03-27 20:29:26,857 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:29:26,858 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:26.853943'}
2025-03-27 20:29:26,859 - INFO: Created alert: <Alert info at None>
2025-03-27 20:29:26,860 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:26.860248')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:26.860248')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:29:34,187 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:34.185156'}
2025-03-27 20:29:34,188 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:29:34,189 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:34.185156'}
2025-03-27 20:29:34,190 - INFO: Created alert: <Alert info at None>
2025-03-27 20:29:34,191 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:34.191021')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:34.191021')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:29:37,210 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:37.208567'}
2025-03-27 20:29:37,211 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:29:37,211 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:37.208567'}
2025-03-27 20:29:37,212 - INFO: Created alert: <Alert info at None>
2025-03-27 20:29:37,213 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:37.213105')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:37.213105')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:29:45,907 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:45.904524'}
2025-03-27 20:29:45,908 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:29:45,908 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:45.904524'}
2025-03-27 20:29:45,909 - INFO: Created alert: <Alert info at None>
2025-03-27 20:29:45,910 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:45.910082')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:45.910082')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:29:47,417 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:47.416499'}
2025-03-27 20:29:47,418 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:29:47,419 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:47.416499'}
2025-03-27 20:29:47,419 - INFO: Created alert: <Alert info at None>
2025-03-27 20:29:47,420 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:47.420395')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    logger.info("Database tables created successfully")
                ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:47.420395')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:29:47,887 - INFO:  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-27 20:29:48,104 - INFO:  * Restarting with stat
2025-03-27 20:29:49,611 - INFO: Database tables created successfully
2025-03-27 20:29:49,654 - WARNING:  * Debugger is active!
2025-03-27 20:29:49,674 - INFO:  * Debugger PIN: 106-521-103
2025-03-27 20:29:54,680 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:54.670725'}
2025-03-27 20:29:54,691 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:29:54,694 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:54.670725'}
2025-03-27 20:29:54,695 - INFO: Created alert: <Alert info at None>
2025-03-27 20:29:54,706 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:54.703444')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:54.703444')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:29:56,283 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:56.281807'}
2025-03-27 20:29:56,283 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:29:56,284 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:29:56.281807'}
2025-03-27 20:29:56,284 - INFO: Created alert: <Alert info at None>
2025-03-27 20:29:56,286 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:56.285694')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    logger.info("Database tables created successfully")
                ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:29:56.285694')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:30:05,293 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:05.290397'}
2025-03-27 20:30:05,294 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:30:05,294 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:05.290397'}
2025-03-27 20:30:05,295 - INFO: Created alert: <Alert info at None>
2025-03-27 20:30:05,297 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:05.296649')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:05.296649')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:30:06,523 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:06.522096'}
2025-03-27 20:30:06,524 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:30:06,524 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:06.522096'}
2025-03-27 20:30:06,525 - INFO: Created alert: <Alert info at None>
2025-03-27 20:30:06,526 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:06.525823')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 218, in process_arduino_data
    logger.info("Database tables created successfully")
                ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:06.525823')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:30:14,615 - INFO: Database tables created successfully
2025-03-27 20:30:14,677 - INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 20:30:14,678 - INFO: [33mPress CTRL+C to quit[0m
2025-03-27 20:30:14,680 - INFO:  * Restarting with stat
2025-03-27 20:30:16,168 - INFO: Database tables created successfully
2025-03-27 20:30:16,212 - WARNING:  * Debugger is active!
2025-03-27 20:30:16,236 - INFO:  * Debugger PIN: 106-521-103
2025-03-27 20:30:20,373 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:20.368746'}
2025-03-27 20:30:20,378 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:30:20,380 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:20.368746'}
2025-03-27 20:30:20,382 - INFO: Created alert: <Alert info at None>
2025-03-27 20:30:20,394 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:20.389641')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:20.389641')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:30:22,035 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:22.033401'}
2025-03-27 20:30:22,039 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:30:22,039 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:22.033401'}
2025-03-27 20:30:22,040 - INFO: Created alert: <Alert info at None>
2025-03-27 20:30:22,046 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:22.044660')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:22.044660')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:30:31,693 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:31.690634'}
2025-03-27 20:30:31,694 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:30:31,695 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:31.690634'}
2025-03-27 20:30:31,696 - INFO: Created alert: <Alert info at None>
2025-03-27 20:30:31,698 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:31.697166')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:31.697166')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:30:33,026 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:33.023267'}
2025-03-27 20:30:33,032 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:30:33,032 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:33.023267'}
2025-03-27 20:30:33,033 - INFO: Created alert: <Alert info at None>
2025-03-27 20:30:33,036 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:33.035334')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:33.035334')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:30:42,112 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:42.110312'}
2025-03-27 20:30:42,113 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:30:42,114 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:42.110312'}
2025-03-27 20:30:42,114 - INFO: Created alert: <Alert info at None>
2025-03-27 20:30:42,116 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:42.116035')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:42.116035')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:30:42,802 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:42.800493'}
2025-03-27 20:30:42,803 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:30:42,804 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:42.800493'}
2025-03-27 20:30:42,805 - INFO: Created alert: <Alert info at None>
2025-03-27 20:30:42,807 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:42.806816')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:42.806816')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:30:53,047 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:53.045967'}
2025-03-27 20:30:53,048 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:30:53,049 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:53.045967'}
2025-03-27 20:30:53,049 - INFO: Created alert: <Alert info at None>
2025-03-27 20:30:53,053 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:53.050818')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:53.050818')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:30:53,476 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:53.474940'}
2025-03-27 20:30:53,477 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:30:53,477 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:30:53.474940'}
2025-03-27 20:30:53,478 - INFO: Created alert: <Alert info at None>
2025-03-27 20:30:53,481 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:53.479356')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:30:53.479356')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:31:04,505 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:04.502373'}
2025-03-27 20:31:04,506 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:31:04,507 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:04.502373'}
2025-03-27 20:31:04,507 - INFO: Created alert: <Alert info at None>
2025-03-27 20:31:04,509 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:04.508843')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:04.508843')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:31:04,884 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:04.880672'}
2025-03-27 20:31:04,885 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:31:04,886 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:04.880672'}
2025-03-27 20:31:04,886 - INFO: Created alert: <Alert info at None>
2025-03-27 20:31:04,888 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:04.887753')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:04.887753')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:31:15,852 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:15.850066'}
2025-03-27 20:31:15,853 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:31:15,853 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:15.850066'}
2025-03-27 20:31:15,854 - INFO: Created alert: <Alert info at None>
2025-03-27 20:31:15,865 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:15.861504'}
2025-03-27 20:31:15,866 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:31:15,867 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:15.861504'}
2025-03-27 20:31:15,868 - INFO: Created alert: <Alert info at None>
2025-03-27 20:31:15,856 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:15.855349')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:15.855349')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:31:15,871 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:15.869843')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:15.869843')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:31:26,427 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:26.424823'}
2025-03-27 20:31:26,428 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:31:26,428 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:26.424823'}
2025-03-27 20:31:26,429 - INFO: Created alert: <Alert info at None>
2025-03-27 20:31:26,430 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:26.430146')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:26.430146')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:31:26,776 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:26.773063'}
2025-03-27 20:31:26,777 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:31:26,777 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:26.773063'}
2025-03-27 20:31:26,778 - INFO: Created alert: <Alert info at None>
2025-03-27 20:31:26,780 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:26.779507')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:26.779507')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:31:37,390 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:37.388159'}
2025-03-27 20:31:37,390 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:31:37,391 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:37.388159'}
2025-03-27 20:31:37,391 - INFO: Created alert: <Alert info at None>
2025-03-27 20:31:37,393 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:37.392715')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:37.392715')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:31:37,457 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:37.454796'}
2025-03-27 20:31:37,457 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:31:37,458 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:37.454796'}
2025-03-27 20:31:37,459 - INFO: Created alert: <Alert info at None>
2025-03-27 20:31:37,460 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:37.460064')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:37.460064')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:31:48,825 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:48.822519'}
2025-03-27 20:31:48,826 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:31:48,827 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:48.822519'}
2025-03-27 20:31:48,828 - INFO: Created alert: <Alert info at None>
2025-03-27 20:31:48,830 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:48.829777')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:48.829777')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:31:49,396 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:49.391575'}
2025-03-27 20:31:49,397 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:31:49,398 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:31:49.391575'}
2025-03-27 20:31:49,399 - INFO: Created alert: <Alert info at None>
2025-03-27 20:31:49,403 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:49.402317')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:31:49.402317')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:32:00,344 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:00.341845'}
2025-03-27 20:32:00,345 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:32:00,345 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:00.341845'}
2025-03-27 20:32:00,347 - INFO: Created alert: <Alert info at None>
2025-03-27 20:32:00,349 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:00.348842')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:00.348842')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:32:00,597 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:00.595235'}
2025-03-27 20:32:00,598 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:32:00,599 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:00.595235'}
2025-03-27 20:32:00,599 - INFO: Created alert: <Alert info at None>
2025-03-27 20:32:00,601 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:00.600845')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:00.600845')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:32:11,899 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:11.897787'}
2025-03-27 20:32:11,900 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:32:11,901 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:11.897787'}
2025-03-27 20:32:11,902 - INFO: Created alert: <Alert info at None>
2025-03-27 20:32:11,903 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:11.903039')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:11.903039')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:32:12,078 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:12.076243'}
2025-03-27 20:32:12,078 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:32:12,079 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:12.076243'}
2025-03-27 20:32:12,079 - INFO: Created alert: <Alert info at None>
2025-03-27 20:32:12,081 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:12.080961')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:12.080961')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:32:22,923 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:22.921974'}
2025-03-27 20:32:22,924 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:32:22,924 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:22.921974'}
2025-03-27 20:32:22,952 - INFO: Created alert: <Alert info at None>
2025-03-27 20:32:22,954 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:22.953222')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:22.953222')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:32:23,102 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:23.100607'}
2025-03-27 20:32:23,103 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:32:23,104 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:23.100607'}
2025-03-27 20:32:23,105 - INFO: Created alert: <Alert info at None>
2025-03-27 20:32:23,106 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:23.106039')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:23.106039')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:32:33,612 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:33.610322'}
2025-03-27 20:32:33,613 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:32:33,613 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:33.610322'}
2025-03-27 20:32:33,614 - INFO: Created alert: <Alert info at None>
2025-03-27 20:32:33,615 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:33.615251')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:33.615251')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:32:34,241 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:34.239479'}
2025-03-27 20:32:34,242 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:32:34,242 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:34.239479'}
2025-03-27 20:32:34,243 - INFO: Created alert: <Alert info at None>
2025-03-27 20:32:34,244 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:34.243942')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:34.243942')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:32:44,218 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:44.215673'}
2025-03-27 20:32:44,218 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:32:44,219 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:44.215673'}
2025-03-27 20:32:44,220 - INFO: Created alert: <Alert info at None>
2025-03-27 20:32:44,221 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:44.220842')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:44.220842')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:32:44,616 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:44.615122'}
2025-03-27 20:32:44,617 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:32:44,644 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:44.615122'}
2025-03-27 20:32:44,645 - INFO: Created alert: <Alert info at None>
2025-03-27 20:32:44,647 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:44.646541')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:44.646541')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:32:55,053 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:55.050284'}
2025-03-27 20:32:55,054 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:32:55,055 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:55.050284'}
2025-03-27 20:32:55,055 - INFO: Created alert: <Alert info at None>
2025-03-27 20:32:55,057 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:55.056734')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:55.056734')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:32:56,114 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:56.107619'}
2025-03-27 20:32:56,115 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:32:56,116 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:32:56.107619'}
2025-03-27 20:32:56,118 - INFO: Created alert: <Alert info at None>
2025-03-27 20:32:56,122 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:56.121188')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:32:56.121188')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:33:05,504 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:05.502900'}
2025-03-27 20:33:05,505 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:33:05,506 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:05.502900'}
2025-03-27 20:33:05,507 - INFO: Created alert: <Alert info at None>
2025-03-27 20:33:05,510 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:05.508669')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:05.508669')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:33:06,143 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:06.141911'}
2025-03-27 20:33:06,143 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:33:06,144 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:06.141911'}
2025-03-27 20:33:06,144 - INFO: Created alert: <Alert info at None>
2025-03-27 20:33:06,145 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:06.145469')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:06.145469')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:33:17,215 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:17.213900'}
2025-03-27 20:33:17,216 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:33:17,216 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:17.213900'}
2025-03-27 20:33:17,217 - INFO: Created alert: <Alert info at None>
2025-03-27 20:33:17,218 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:17.217841')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:17.217841')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:33:17,346 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:17.345116'}
2025-03-27 20:33:17,347 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:33:17,348 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:17.345116'}
2025-03-27 20:33:17,348 - INFO: Created alert: <Alert info at None>
2025-03-27 20:33:17,349 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:17.349351')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:17.349351')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:33:28,088 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:28.087028'}
2025-03-27 20:33:28,089 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:33:28,090 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:28.087028'}
2025-03-27 20:33:28,090 - INFO: Created alert: <Alert info at None>
2025-03-27 20:33:28,092 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:28.091909')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:28.091909')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:33:28,104 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:28.101732'}
2025-03-27 20:33:28,105 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:33:28,105 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:28.101732'}
2025-03-27 20:33:28,106 - INFO: Created alert: <Alert info at None>
2025-03-27 20:33:28,108 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:28.107516')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:28.107516')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:33:38,377 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:38.374440'}
2025-03-27 20:33:38,378 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:33:38,379 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:38.374440'}
2025-03-27 20:33:38,379 - INFO: Created alert: <Alert info at None>
2025-03-27 20:33:38,381 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:38.381035')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:38.381035')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:33:38,991 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:38.988823'}
2025-03-27 20:33:38,991 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:33:39,000 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:38.988823'}
2025-03-27 20:33:39,001 - INFO: Created alert: <Alert info at None>
2025-03-27 20:33:39,003 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:39.002405')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:39.002405')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:33:49,016 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:49.013923'}
2025-03-27 20:33:49,016 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:33:49,017 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:49.013923'}
2025-03-27 20:33:49,017 - INFO: Created alert: <Alert info at None>
2025-03-27 20:33:49,019 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:49.018779')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:49.018779')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:33:49,927 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:49.925627'}
2025-03-27 20:33:49,928 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:33:49,956 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:49.925627'}
2025-03-27 20:33:49,957 - INFO: Created alert: <Alert info at None>
2025-03-27 20:33:49,960 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:49.959267')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:49.959267')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:33:59,520 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:59.517967'}
2025-03-27 20:33:59,521 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:33:59,522 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:59.517967'}
2025-03-27 20:33:59,523 - INFO: Created alert: <Alert info at None>
2025-03-27 20:33:59,524 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:59.524135')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:59.524135')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:33:59,960 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:59.959120'}
2025-03-27 20:33:59,961 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:33:59,962 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:33:59.959120'}
2025-03-27 20:33:59,962 - INFO: Created alert: <Alert info at None>
2025-03-27 20:33:59,963 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:59.963217')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:33:59.963217')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:34:10,769 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:10.767691'}
2025-03-27 20:34:10,770 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:34:10,770 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:10.767691'}
2025-03-27 20:34:10,771 - INFO: Created alert: <Alert info at None>
2025-03-27 20:34:10,772 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:10.772289')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:10.772289')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:34:12,082 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:12.080651'}
2025-03-27 20:34:12,083 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:34:12,084 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:12.080651'}
2025-03-27 20:34:12,085 - INFO: Created alert: <Alert info at None>
2025-03-27 20:34:12,087 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:12.086255')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:12.086255')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:34:21,698 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:21.694966'}
2025-03-27 20:34:21,699 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:34:21,699 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:21.694966'}
2025-03-27 20:34:21,700 - INFO: Created alert: <Alert info at None>
2025-03-27 20:34:21,702 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:21.701434')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:21.701434')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:34:23,389 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:23.387620'}
2025-03-27 20:34:23,389 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:34:23,390 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:23.387620'}
2025-03-27 20:34:23,390 - INFO: Created alert: <Alert info at None>
2025-03-27 20:34:23,392 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:23.391625')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:23.391625')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:34:32,354 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:32.351331'}
2025-03-27 20:34:32,355 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:34:32,355 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:32.351331'}
2025-03-27 20:34:32,356 - INFO: Created alert: <Alert info at None>
2025-03-27 20:34:32,357 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:32.357210')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:32.357210')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:34:33,790 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:33.788828'}
2025-03-27 20:34:33,790 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:34:33,791 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:33.788828'}
2025-03-27 20:34:33,791 - INFO: Created alert: <Alert info at None>
2025-03-27 20:34:33,793 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:33.792921')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:33.792921')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:34:42,212 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:42.210401'}
2025-03-27 20:34:42,213 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:34:42,213 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:42.210401'}
2025-03-27 20:34:42,214 - INFO: Created alert: <Alert info at None>
2025-03-27 20:34:42,215 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:42.214805')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:42.214805')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:34:43,859 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:43.856785'}
2025-03-27 20:34:43,860 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:34:43,860 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:43.856785'}
2025-03-27 20:34:43,861 - INFO: Created alert: <Alert info at None>
2025-03-27 20:34:43,862 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:43.861777')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:43.861777')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:34:52,998 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:52.996021'}
2025-03-27 20:34:52,999 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:34:52,999 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:52.996021'}
2025-03-27 20:34:53,000 - INFO: Created alert: <Alert info at None>
2025-03-27 20:34:53,001 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:53.001154')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:53.001154')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:34:54,432 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:54.430819'}
2025-03-27 20:34:54,433 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:34:54,433 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:34:54.430819'}
2025-03-27 20:34:54,434 - INFO: Created alert: <Alert info at None>
2025-03-27 20:34:54,436 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:54.435603')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:34:54.435603')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:35:04,405 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:04.402818'}
2025-03-27 20:35:04,406 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:35:04,406 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:04.402818'}
2025-03-27 20:35:04,407 - INFO: Created alert: <Alert info at None>
2025-03-27 20:35:04,409 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:04.408382')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:04.408382')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:35:05,669 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:05.667568'}
2025-03-27 20:35:05,670 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:35:05,670 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:05.667568'}
2025-03-27 20:35:05,671 - INFO: Created alert: <Alert info at None>
2025-03-27 20:35:05,672 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:05.672288')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:05.672288')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:35:15,720 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:15.717526'}
2025-03-27 20:35:15,721 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:35:15,722 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:15.717526'}
2025-03-27 20:35:15,722 - INFO: Created alert: <Alert info at None>
2025-03-27 20:35:15,726 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:15.725280')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:15.725280')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:35:17,419 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:17.415097'}
2025-03-27 20:35:17,420 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:35:17,421 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:17.415097'}
2025-03-27 20:35:17,422 - INFO: Created alert: <Alert info at None>
2025-03-27 20:35:17,428 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:17.426471')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:17.426471')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:35:26,520 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:26.517958'}
2025-03-27 20:35:26,520 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:35:26,521 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:26.517958'}
2025-03-27 20:35:26,522 - INFO: Created alert: <Alert info at None>
2025-03-27 20:35:26,523 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:26.522824')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:26.522824')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:35:27,474 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:27.472555'}
2025-03-27 20:35:27,475 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:35:27,475 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:27.472555'}
2025-03-27 20:35:27,476 - INFO: Created alert: <Alert info at None>
2025-03-27 20:35:27,477 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:27.477064')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:27.477064')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:35:37,353 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:37.352155'}
2025-03-27 20:35:37,354 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:35:37,355 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:37.352155'}
2025-03-27 20:35:37,355 - INFO: Created alert: <Alert info at None>
2025-03-27 20:35:37,357 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:37.356700')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:37.356700')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:35:37,507 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:37.505723'}
2025-03-27 20:35:37,508 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:35:37,508 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:37.505723'}
2025-03-27 20:35:37,509 - INFO: Created alert: <Alert info at None>
2025-03-27 20:35:37,510 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:37.509931')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:37.509931')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:35:47,943 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:47.941851'}
2025-03-27 20:35:47,944 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:35:47,945 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:47.941851'}
2025-03-27 20:35:47,945 - INFO: Created alert: <Alert info at None>
2025-03-27 20:35:47,947 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:47.946635')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:47.946635')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:35:48,233 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:48.231495'}
2025-03-27 20:35:48,233 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:35:48,234 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:48.231495'}
2025-03-27 20:35:48,235 - INFO: Created alert: <Alert info at None>
2025-03-27 20:35:48,236 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:48.236358')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:48.236358')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:35:58,645 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:58.643816'}
2025-03-27 20:35:58,646 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:35:58,647 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:58.643816'}
2025-03-27 20:35:58,648 - INFO: Created alert: <Alert info at None>
2025-03-27 20:35:58,649 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:58.649307')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:58.649307')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:35:58,872 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:58.870056'}
2025-03-27 20:35:58,872 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:35:58,873 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:35:58.870056'}
2025-03-27 20:35:58,873 - INFO: Created alert: <Alert info at None>
2025-03-27 20:35:58,875 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:58.874621')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:35:58.874621')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:36:08,684 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:08.682310'}
2025-03-27 20:36:08,684 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:36:08,685 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:08.682310'}
2025-03-27 20:36:08,686 - INFO: Created alert: <Alert info at None>
2025-03-27 20:36:08,687 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:08.686857')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:08.686857')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:36:09,737 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:09.735267'}
2025-03-27 20:36:09,738 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:36:09,738 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:09.735267'}
2025-03-27 20:36:09,739 - INFO: Created alert: <Alert info at None>
2025-03-27 20:36:09,740 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:09.740007')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:09.740007')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:36:19,095 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:19.093541'}
2025-03-27 20:36:19,096 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:36:19,096 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:19.093541'}
2025-03-27 20:36:19,097 - INFO: Created alert: <Alert info at None>
2025-03-27 20:36:19,098 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:19.097981')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:19.097981')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:36:19,732 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:19.730283'}
2025-03-27 20:36:19,732 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:36:19,733 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:19.730283'}
2025-03-27 20:36:19,733 - INFO: Created alert: <Alert info at None>
2025-03-27 20:36:19,735 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:19.734761')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:19.734761')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:36:29,062 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:29.060903'}
2025-03-27 20:36:29,063 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:36:29,063 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:29.060903'}
2025-03-27 20:36:29,064 - INFO: Created alert: <Alert info at None>
2025-03-27 20:36:29,065 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:29.065124')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:29.065124')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:36:30,154 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:30.152519'}
2025-03-27 20:36:30,155 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:36:30,156 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:30.152519'}
2025-03-27 20:36:30,156 - INFO: Created alert: <Alert info at None>
2025-03-27 20:36:30,157 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:30.157368')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:30.157368')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:36:39,982 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:39.979645'}
2025-03-27 20:36:39,983 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:36:39,984 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:39.979645'}
2025-03-27 20:36:39,984 - INFO: Created alert: <Alert info at None>
2025-03-27 20:36:39,986 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:39.985411')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:39.985411')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:36:40,639 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:40.638020'}
2025-03-27 20:36:40,640 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:36:40,640 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:40.638020'}
2025-03-27 20:36:40,641 - INFO: Created alert: <Alert info at None>
2025-03-27 20:36:40,642 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:40.641862')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:40.641862')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:36:50,887 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:50.884529'}
2025-03-27 20:36:50,887 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:36:50,888 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:50.884529'}
2025-03-27 20:36:50,889 - INFO: Created alert: <Alert info at None>
2025-03-27 20:36:50,891 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:50.890529')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:50.890529')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:36:51,419 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:51.417530'}
2025-03-27 20:36:51,420 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:36:51,420 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:36:51.417530'}
2025-03-27 20:36:51,421 - INFO: Created alert: <Alert info at None>
2025-03-27 20:36:51,422 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:51.422013')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:36:51.422013')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:37:01,336 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:01.333765'}
2025-03-27 20:37:01,337 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:37:01,338 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:01.333765'}
2025-03-27 20:37:01,338 - INFO: Created alert: <Alert info at None>
2025-03-27 20:37:01,340 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:01.339774')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:01.339774')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:37:02,055 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:02.053838'}
2025-03-27 20:37:02,055 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:37:02,056 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:02.053838'}
2025-03-27 20:37:02,056 - INFO: Created alert: <Alert info at None>
2025-03-27 20:37:02,058 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:02.057703')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:02.057703')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:37:12,709 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:12.706834'}
2025-03-27 20:37:12,710 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:37:12,710 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:12.706834'}
2025-03-27 20:37:12,711 - INFO: Created alert: <Alert info at None>
2025-03-27 20:37:12,713 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:12.712489')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:12.712489')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:37:12,974 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:12.971407'}
2025-03-27 20:37:12,975 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:37:12,976 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:12.971407'}
2025-03-27 20:37:12,976 - INFO: Created alert: <Alert info at None>
2025-03-27 20:37:12,978 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:12.977854')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:12.977854')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:37:23,032 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:23.029827'}
2025-03-27 20:37:23,032 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:37:23,033 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:23.029827'}
2025-03-27 20:37:23,034 - INFO: Created alert: <Alert info at None>
2025-03-27 20:37:23,036 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:23.035048')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:23.035048')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:37:23,524 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:23.522258'}
2025-03-27 20:37:23,524 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:37:23,525 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:23.522258'}
2025-03-27 20:37:23,525 - INFO: Created alert: <Alert info at None>
2025-03-27 20:37:23,526 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:23.526486')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:23.526486')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:37:33,490 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:33.489085'}
2025-03-27 20:37:33,491 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:37:33,491 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:33.489085'}
2025-03-27 20:37:33,492 - INFO: Created alert: <Alert info at None>
2025-03-27 20:37:33,493 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:33.492866')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:33.492866')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:37:34,045 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:34.044433'}
2025-03-27 20:37:34,046 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:37:34,047 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:34.044433'}
2025-03-27 20:37:34,047 - INFO: Created alert: <Alert info at None>
2025-03-27 20:37:34,049 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:34.048685')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:34.048685')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:37:44,041 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:44.038380'}
2025-03-27 20:37:44,041 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:37:44,042 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:44.038380'}
2025-03-27 20:37:44,042 - INFO: Created alert: <Alert info at None>
2025-03-27 20:37:44,044 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:44.043858')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:44.043858')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:37:44,496 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:44.494352'}
2025-03-27 20:37:44,497 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:37:44,497 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:44.494352'}
2025-03-27 20:37:44,498 - INFO: Created alert: <Alert info at None>
2025-03-27 20:37:44,499 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:44.498972')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:44.498972')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:37:54,540 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:54.539272'}
2025-03-27 20:37:54,541 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:37:54,542 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:54.539272'}
2025-03-27 20:37:54,543 - INFO: Created alert: <Alert info at None>
2025-03-27 20:37:54,544 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:54.543866')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:54.543866')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:37:54,581 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:54.579830'}
2025-03-27 20:37:54,581 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:37:54,582 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:37:54.579830'}
2025-03-27 20:37:54,582 - INFO: Created alert: <Alert info at None>
2025-03-27 20:37:54,584 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:54.583567')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:37:54.583567')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:38:05,238 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:05.236119'}
2025-03-27 20:38:05,239 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:38:05,239 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:05.236119'}
2025-03-27 20:38:05,240 - INFO: Created alert: <Alert info at None>
2025-03-27 20:38:05,241 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:05.241054')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:05.241054')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:38:06,132 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:06.131184'}
2025-03-27 20:38:06,133 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:38:06,134 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:06.131184'}
2025-03-27 20:38:06,134 - INFO: Created alert: <Alert info at None>
2025-03-27 20:38:06,135 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:06.135426')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:06.135426')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:38:15,994 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:15.992398'}
2025-03-27 20:38:15,995 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:38:15,995 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:15.992398'}
2025-03-27 20:38:15,996 - INFO: Created alert: <Alert info at None>
2025-03-27 20:38:15,997 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:15.997047')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:15.997047')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:38:16,585 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:16.583830'}
2025-03-27 20:38:16,586 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:38:16,587 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:16.583830'}
2025-03-27 20:38:16,587 - INFO: Created alert: <Alert info at None>
2025-03-27 20:38:16,588 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:16.588342')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:16.588342')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:38:26,853 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:26.852522'}
2025-03-27 20:38:26,854 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:38:26,855 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:26.852522'}
2025-03-27 20:38:26,855 - INFO: Created alert: <Alert info at None>
2025-03-27 20:38:26,857 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:26.856762')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:26.856762')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:38:26,983 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:26.980849'}
2025-03-27 20:38:26,983 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:38:26,984 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:26.980849'}
2025-03-27 20:38:26,985 - INFO: Created alert: <Alert info at None>
2025-03-27 20:38:26,986 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:26.985829')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:26.985829')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:38:37,392 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:37.389978'}
2025-03-27 20:38:37,393 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:38:37,394 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:37.389978'}
2025-03-27 20:38:37,395 - INFO: Created alert: <Alert info at None>
2025-03-27 20:38:37,396 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:37.396108')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:37.396108')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:38:37,692 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:37.690930'}
2025-03-27 20:38:37,693 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:38:37,694 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:37.690930'}
2025-03-27 20:38:37,695 - INFO: Created alert: <Alert info at None>
2025-03-27 20:38:37,696 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:37.695963')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:37.695963')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:38:48,045 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:48.043207'}
2025-03-27 20:38:48,046 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:38:48,046 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:48.043207'}
2025-03-27 20:38:48,047 - INFO: Created alert: <Alert info at None>
2025-03-27 20:38:48,048 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:48.048332')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:48.048332')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:38:48,425 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:48.422894'}
2025-03-27 20:38:48,426 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:38:48,426 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:48.422894'}
2025-03-27 20:38:48,427 - INFO: Created alert: <Alert info at None>
2025-03-27 20:38:48,428 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:48.428170')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:48.428170')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:38:58,563 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:58.560420'}
2025-03-27 20:38:58,563 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:38:58,564 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:58.560420'}
2025-03-27 20:38:58,564 - INFO: Created alert: <Alert info at None>
2025-03-27 20:38:58,566 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:58.565933')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:58.565933')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:38:58,830 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:58.829274'}
2025-03-27 20:38:58,831 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:38:58,831 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:38:58.829274'}
2025-03-27 20:38:58,832 - INFO: Created alert: <Alert info at None>
2025-03-27 20:38:58,833 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:58.833360')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:38:58.833360')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:39:09,219 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:09.217223'}
2025-03-27 20:39:09,219 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:39:09,220 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:09.217223'}
2025-03-27 20:39:09,220 - INFO: Created alert: <Alert info at None>
2025-03-27 20:39:09,222 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:09.221702')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:09.221702')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:39:09,595 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:09.593276'}
2025-03-27 20:39:09,595 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:39:09,596 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:09.593276'}
2025-03-27 20:39:09,596 - INFO: Created alert: <Alert info at None>
2025-03-27 20:39:09,598 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:09.597618')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:09.597618')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:39:20,196 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:20.194177'}
2025-03-27 20:39:20,197 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:39:20,198 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:20.194177'}
2025-03-27 20:39:20,198 - INFO: Created alert: <Alert info at None>
2025-03-27 20:39:20,200 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:20.199566')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:20.199566')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:39:20,568 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:20.566606'}
2025-03-27 20:39:20,569 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:39:20,569 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:20.566606'}
2025-03-27 20:39:20,569 - INFO: Created alert: <Alert info at None>
2025-03-27 20:39:20,571 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:20.570696')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:20.570696')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:39:30,684 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:30.681706'}
2025-03-27 20:39:30,685 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:39:30,685 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:30.681706'}
2025-03-27 20:39:30,686 - INFO: Created alert: <Alert info at None>
2025-03-27 20:39:30,688 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:30.687353')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:30.687353')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:39:31,074 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:31.073361'}
2025-03-27 20:39:31,075 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:39:31,076 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:31.073361'}
2025-03-27 20:39:31,077 - INFO: Created alert: <Alert info at None>
2025-03-27 20:39:31,078 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:31.078080')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:31.078080')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:39:41,089 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:41.086678'}
2025-03-27 20:39:41,090 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:39:41,091 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:41.086678'}
2025-03-27 20:39:41,091 - INFO: Created alert: <Alert info at None>
2025-03-27 20:39:41,092 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:41.092325')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:41.092325')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:39:41,627 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:41.625291'}
2025-03-27 20:39:41,628 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:39:41,628 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:41.625291'}
2025-03-27 20:39:41,629 - INFO: Created alert: <Alert info at None>
2025-03-27 20:39:41,630 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:41.630185')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:41.630185')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:39:52,163 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:52.161965'}
2025-03-27 20:39:52,164 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:39:52,165 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:52.161965'}
2025-03-27 20:39:52,165 - INFO: Created alert: <Alert info at None>
2025-03-27 20:39:52,166 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:52.166346')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:52.166346')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:39:52,426 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:52.424985'}
2025-03-27 20:39:52,426 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:39:52,427 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:39:52.424985'}
2025-03-27 20:39:52,428 - INFO: Created alert: <Alert info at None>
2025-03-27 20:39:52,429 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:52.428767')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:39:52.428767')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:40:02,512 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:02.509467'}
2025-03-27 20:40:02,513 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:40:02,513 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:02.509467'}
2025-03-27 20:40:02,514 - INFO: Created alert: <Alert info at None>
2025-03-27 20:40:02,516 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:02.515505')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:02.515505')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:40:03,443 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:03.442021'}
2025-03-27 20:40:03,444 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:40:03,445 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:03.442021'}
2025-03-27 20:40:03,445 - INFO: Created alert: <Alert info at None>
2025-03-27 20:40:03,447 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:03.446855')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:03.446855')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:40:13,347 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:13.344886'}
2025-03-27 20:40:13,348 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:40:13,348 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:13.344886'}
2025-03-27 20:40:13,349 - INFO: Created alert: <Alert info at None>
2025-03-27 20:40:13,350 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:13.350253')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:13.350253')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:40:13,891 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:13.889593'}
2025-03-27 20:40:13,892 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:40:13,892 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:13.889593'}
2025-03-27 20:40:13,893 - INFO: Created alert: <Alert info at None>
2025-03-27 20:40:13,895 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:13.894467')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:13.894467')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:40:24,131 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:24.128042'}
2025-03-27 20:40:24,131 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:40:24,132 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:24.128042'}
2025-03-27 20:40:24,132 - INFO: Created alert: <Alert info at None>
2025-03-27 20:40:24,134 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:24.133779')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:24.133779')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:40:25,262 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:25.259964'}
2025-03-27 20:40:25,263 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:40:25,263 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:25.259964'}
2025-03-27 20:40:25,264 - INFO: Created alert: <Alert info at None>
2025-03-27 20:40:25,265 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:25.265180')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:25.265180')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:40:34,855 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:34.852167'}
2025-03-27 20:40:34,855 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:40:34,856 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:34.852167'}
2025-03-27 20:40:34,857 - INFO: Created alert: <Alert info at None>
2025-03-27 20:40:34,858 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:34.857864')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:34.857864')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:40:35,462 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:35.460901'}
2025-03-27 20:40:35,463 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:40:35,464 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:35.460901'}
2025-03-27 20:40:35,464 - INFO: Created alert: <Alert info at None>
2025-03-27 20:40:35,466 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:35.465652')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:35.465652')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:40:46,681 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:46.679306'}
2025-03-27 20:40:46,682 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:40:46,682 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:46.679306'}
2025-03-27 20:40:46,683 - INFO: Created alert: <Alert info at None>
2025-03-27 20:40:46,685 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:46.684571')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:46.684571')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:40:47,029 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:47.027833'}
2025-03-27 20:40:47,029 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:40:47,030 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:47.027833'}
2025-03-27 20:40:47,030 - INFO: Created alert: <Alert info at None>
2025-03-27 20:40:47,032 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:47.031702')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:47.031702')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:40:57,420 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:57.418347'}
2025-03-27 20:40:57,420 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:40:57,421 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:57.418347'}
2025-03-27 20:40:57,421 - INFO: Created alert: <Alert info at None>
2025-03-27 20:40:57,422 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:57.422515')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:57.422515')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:40:57,822 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:57.820956'}
2025-03-27 20:40:57,823 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:40:57,823 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:40:57.820956'}
2025-03-27 20:40:57,824 - INFO: Created alert: <Alert info at None>
2025-03-27 20:40:57,825 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:57.824795')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:40:57.824795')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:41:08,589 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:08.586967'}
2025-03-27 20:41:08,590 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:41:08,590 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:08.586967'}
2025-03-27 20:41:08,591 - INFO: Created alert: <Alert info at None>
2025-03-27 20:41:08,593 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:08.592483')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:08.592483')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:41:09,765 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:09.759363'}
2025-03-27 20:41:09,766 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:41:09,767 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:09.759363'}
2025-03-27 20:41:09,768 - INFO: Created alert: <Alert info at None>
2025-03-27 20:41:09,770 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:09.769540')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:09.769540')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:41:19,641 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:19.637838'}
2025-03-27 20:41:19,642 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:41:19,643 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:19.637838'}
2025-03-27 20:41:19,643 - INFO: Created alert: <Alert info at None>
2025-03-27 20:41:19,645 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:19.644986')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:19.644986')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:41:20,447 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:20.445794'}
2025-03-27 20:41:20,448 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:41:20,449 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:20.445794'}
2025-03-27 20:41:20,449 - INFO: Created alert: <Alert info at None>
2025-03-27 20:41:20,451 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:20.450964')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:20.450964')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:41:29,990 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:29.988487'}
2025-03-27 20:41:29,991 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:41:29,992 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:29.988487'}
2025-03-27 20:41:29,992 - INFO: Created alert: <Alert info at None>
2025-03-27 20:41:29,993 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:29.993326')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:29.993326')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:41:30,932 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:30.931444'}
2025-03-27 20:41:30,933 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:41:30,934 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:30.931444'}
2025-03-27 20:41:30,934 - INFO: Created alert: <Alert info at None>
2025-03-27 20:41:30,936 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:30.935602')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:30.935602')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:41:40,306 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:40.303856'}
2025-03-27 20:41:40,307 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:41:40,307 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:40.303856'}
2025-03-27 20:41:40,308 - INFO: Created alert: <Alert info at None>
2025-03-27 20:41:40,310 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:40.309513')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:40.309513')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:41:41,453 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:41.451930'}
2025-03-27 20:41:41,454 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:41:41,454 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:41.451930'}
2025-03-27 20:41:41,455 - INFO: Created alert: <Alert info at None>
2025-03-27 20:41:41,456 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:41.455973')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:41.455973')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:41:51,794 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:51.793067'}
2025-03-27 20:41:51,795 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:41:51,796 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:51.793067'}
2025-03-27 20:41:51,796 - INFO: Created alert: <Alert info at None>
2025-03-27 20:41:51,798 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:51.797464')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:51.797464')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:41:52,194 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:52.192856'}
2025-03-27 20:41:52,195 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:41:52,196 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:41:52.192856'}
2025-03-27 20:41:52,196 - INFO: Created alert: <Alert info at None>
2025-03-27 20:41:52,197 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:52.197459')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:41:52.197459')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:42:04,144 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:04.142720'}
2025-03-27 20:42:04,145 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:42:04,146 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:04.142720'}
2025-03-27 20:42:04,146 - INFO: Created alert: <Alert info at None>
2025-03-27 20:42:04,148 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:04.147495')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:04.147495')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:42:04,550 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:04.549179'}
2025-03-27 20:42:04,551 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:42:04,552 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:04.549179'}
2025-03-27 20:42:04,552 - INFO: Created alert: <Alert info at None>
2025-03-27 20:42:04,554 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:04.553482')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:04.553482')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:42:14,380 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:14.378263'}
2025-03-27 20:42:14,380 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:42:14,381 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:14.378263'}
2025-03-27 20:42:14,382 - INFO: Created alert: <Alert info at None>
2025-03-27 20:42:14,383 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:14.382922')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:14.382922')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:42:15,014 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:15.012616'}
2025-03-27 20:42:15,015 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:42:15,016 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:15.012616'}
2025-03-27 20:42:15,016 - INFO: Created alert: <Alert info at None>
2025-03-27 20:42:15,018 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:15.017590')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:15.017590')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:42:26,137 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:26.135055'}
2025-03-27 20:42:26,138 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:42:26,138 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:26.135055'}
2025-03-27 20:42:26,139 - INFO: Created alert: <Alert info at None>
2025-03-27 20:42:26,140 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:26.140207')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:26.140207')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:42:27,451 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:27.448034'}
2025-03-27 20:42:27,452 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:42:27,452 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:27.448034'}
2025-03-27 20:42:27,453 - INFO: Created alert: <Alert info at None>
2025-03-27 20:42:27,455 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:27.454559')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:27.454559')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:42:37,404 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:37.402465'}
2025-03-27 20:42:37,404 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:42:37,405 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:37.402465'}
2025-03-27 20:42:37,405 - INFO: Created alert: <Alert info at None>
2025-03-27 20:42:37,406 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:37.406576')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:37.406576')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:42:38,525 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:38.523648'}
2025-03-27 20:42:38,525 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:42:38,526 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:38.523648'}
2025-03-27 20:42:38,527 - INFO: Created alert: <Alert info at None>
2025-03-27 20:42:38,528 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:38.527797')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:38.527797')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:42:49,517 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:49.516205'}
2025-03-27 20:42:49,518 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:42:49,519 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:49.516205'}
2025-03-27 20:42:49,519 - INFO: Created alert: <Alert info at None>
2025-03-27 20:42:49,520 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:49.520315')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:49.520315')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:42:49,731 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:49.729761'}
2025-03-27 20:42:49,732 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:42:49,732 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:42:49.729761'}
2025-03-27 20:42:49,733 - INFO: Created alert: <Alert info at None>
2025-03-27 20:42:49,734 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:49.734031')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:42:49.734031')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:43:00,646 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:00.645140'}
2025-03-27 20:43:00,647 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:43:00,648 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:00.645140'}
2025-03-27 20:43:00,648 - INFO: Created alert: <Alert info at None>
2025-03-27 20:43:00,649 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:00.649404')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:00.649404')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:43:01,187 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:01.185888'}
2025-03-27 20:43:01,188 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:43:01,189 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:01.185888'}
2025-03-27 20:43:01,189 - INFO: Created alert: <Alert info at None>
2025-03-27 20:43:01,190 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:01.190421')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:01.190421')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:43:10,702 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:10.699821'}
2025-03-27 20:43:10,702 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:43:10,703 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:10.699821'}
2025-03-27 20:43:10,704 - INFO: Created alert: <Alert info at None>
2025-03-27 20:43:10,705 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:10.704853')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:10.704853')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:43:11,088 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:11.087514'}
2025-03-27 20:43:11,089 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:43:11,090 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:11.087514'}
2025-03-27 20:43:11,090 - INFO: Created alert: <Alert info at None>
2025-03-27 20:43:11,091 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:11.091227')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:11.091227')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:43:21,529 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:21.527296'}
2025-03-27 20:43:21,529 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:43:21,530 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:21.527296'}
2025-03-27 20:43:21,531 - INFO: Created alert: <Alert info at None>
2025-03-27 20:43:21,532 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:21.532308')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:21.532308')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:43:21,967 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:21.965851'}
2025-03-27 20:43:21,968 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:43:21,968 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:21.965851'}
2025-03-27 20:43:21,969 - INFO: Created alert: <Alert info at None>
2025-03-27 20:43:21,970 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:21.970099')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:21.970099')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:43:31,685 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:31.683326'}
2025-03-27 20:43:31,686 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:43:31,686 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:31.683326'}
2025-03-27 20:43:31,687 - INFO: Created alert: <Alert info at None>
2025-03-27 20:43:31,688 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:31.687842')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:31.687842')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:43:32,630 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:32.628323'}
2025-03-27 20:43:32,630 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:43:32,631 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:32.628323'}
2025-03-27 20:43:32,631 - INFO: Created alert: <Alert info at None>
2025-03-27 20:43:32,633 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:32.632582')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:32.632582')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:43:41,674 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:41.672723'}
2025-03-27 20:43:41,675 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:43:41,676 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:41.672723'}
2025-03-27 20:43:41,676 - INFO: Created alert: <Alert info at None>
2025-03-27 20:43:41,678 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:41.677735')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:41.677735')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:43:43,240 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:43.239170'}
2025-03-27 20:43:43,241 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:43:43,242 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:43.239170'}
2025-03-27 20:43:43,242 - INFO: Created alert: <Alert info at None>
2025-03-27 20:43:43,243 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:43.243315')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:43.243315')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:43:52,250 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:52.248756'}
2025-03-27 20:43:52,250 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:43:52,251 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:52.248756'}
2025-03-27 20:43:52,252 - INFO: Created alert: <Alert info at None>
2025-03-27 20:43:52,253 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:52.252964')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:52.252964')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:43:53,733 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:53.731503'}
2025-03-27 20:43:53,733 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:43:53,734 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:43:53.731503'}
2025-03-27 20:43:53,734 - INFO: Created alert: <Alert info at None>
2025-03-27 20:43:53,736 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:53.735530')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:43:53.735530')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:44:02,788 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:02.786064'}
2025-03-27 20:44:02,789 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:44:02,790 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:02.786064'}
2025-03-27 20:44:02,790 - INFO: Created alert: <Alert info at None>
2025-03-27 20:44:02,792 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:02.791437')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:02.791437')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:44:04,322 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:04.320155'}
2025-03-27 20:44:04,322 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:44:04,323 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:04.320155'}
2025-03-27 20:44:04,323 - INFO: Created alert: <Alert info at None>
2025-03-27 20:44:04,325 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:04.324653')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:04.324653')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:44:13,256 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:13.254086'}
2025-03-27 20:44:13,256 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:44:13,257 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:13.254086'}
2025-03-27 20:44:13,257 - INFO: Created alert: <Alert info at None>
2025-03-27 20:44:13,259 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:13.258708')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:13.258708')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:44:15,110 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:15.109476'}
2025-03-27 20:44:15,111 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:44:15,112 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:15.109476'}
2025-03-27 20:44:15,112 - INFO: Created alert: <Alert info at None>
2025-03-27 20:44:15,114 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:15.113959')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:15.113959')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:44:23,546 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:23.544618'}
2025-03-27 20:44:23,547 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:44:23,547 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:23.544618'}
2025-03-27 20:44:23,548 - INFO: Created alert: <Alert info at None>
2025-03-27 20:44:23,551 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:23.549495')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:23.549495')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:44:25,457 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:25.455569'}
2025-03-27 20:44:25,458 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:44:25,458 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:25.455569'}
2025-03-27 20:44:25,459 - INFO: Created alert: <Alert info at None>
2025-03-27 20:44:25,461 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:25.460348')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:25.460348')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:44:34,082 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:34.080164'}
2025-03-27 20:44:34,082 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:44:34,083 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:34.080164'}
2025-03-27 20:44:34,084 - INFO: Created alert: <Alert info at None>
2025-03-27 20:44:34,085 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:34.084754')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:34.084754')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:44:35,461 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:35.459389'}
2025-03-27 20:44:35,461 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:44:35,462 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:35.459389'}
2025-03-27 20:44:35,462 - INFO: Created alert: <Alert info at None>
2025-03-27 20:44:35,463 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:35.463467')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:35.463467')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:44:45,411 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:45.409576'}
2025-03-27 20:44:45,412 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:44:45,413 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:45.409576'}
2025-03-27 20:44:45,413 - INFO: Created alert: <Alert info at None>
2025-03-27 20:44:45,415 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:45.414639')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:45.414639')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:44:46,325 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:46.322930'}
2025-03-27 20:44:46,325 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:44:46,326 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:46.322930'}
2025-03-27 20:44:46,327 - INFO: Created alert: <Alert info at None>
2025-03-27 20:44:46,328 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:46.327945')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:46.327945')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:44:58,588 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:58.584589'}
2025-03-27 20:44:58,589 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:44:58,589 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:58.584589'}
2025-03-27 20:44:58,590 - INFO: Created alert: <Alert info at None>
2025-03-27 20:44:58,591 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:58.591129')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:58.591129')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:44:59,659 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:59.657308'}
2025-03-27 20:44:59,660 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:44:59,660 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:44:59.657308'}
2025-03-27 20:44:59,661 - INFO: Created alert: <Alert info at None>
2025-03-27 20:44:59,662 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:59.662109')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:44:59.662109')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:45:09,006 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:09.004418'}
2025-03-27 20:45:09,007 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:45:09,007 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:09.004418'}
2025-03-27 20:45:09,008 - INFO: Created alert: <Alert info at None>
2025-03-27 20:45:09,009 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:09.009142')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:09.009142')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:45:10,110 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:10.109223'}
2025-03-27 20:45:10,111 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:45:10,112 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:10.109223'}
2025-03-27 20:45:10,113 - INFO: Created alert: <Alert info at None>
2025-03-27 20:45:10,114 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:10.114353')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:10.114353')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:45:21,280 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:21.278432'}
2025-03-27 20:45:21,281 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:45:21,282 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:21.278432'}
2025-03-27 20:45:21,282 - INFO: Created alert: <Alert info at None>
2025-03-27 20:45:21,284 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:21.283472')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:21.283472')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:45:21,498 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:21.496520'}
2025-03-27 20:45:21,499 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:45:21,499 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:21.496520'}
2025-03-27 20:45:21,500 - INFO: Created alert: <Alert info at None>
2025-03-27 20:45:21,501 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:21.501318')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:21.501318')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:45:31,881 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:31.878877'}
2025-03-27 20:45:31,881 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:45:31,882 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:31.878877'}
2025-03-27 20:45:31,883 - INFO: Created alert: <Alert info at None>
2025-03-27 20:45:31,884 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:31.884062')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:31.884062')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:45:32,480 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:32.479481'}
2025-03-27 20:45:32,481 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:45:32,482 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:32.479481'}
2025-03-27 20:45:32,482 - INFO: Created alert: <Alert info at None>
2025-03-27 20:45:32,483 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:32.483438')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:32.483438')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:45:42,150 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:42.148064'}
2025-03-27 20:45:42,151 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:45:42,152 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:42.148064'}
2025-03-27 20:45:42,152 - INFO: Created alert: <Alert info at None>
2025-03-27 20:45:42,154 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:42.153455')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:42.153455')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:45:42,736 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:42.734671'}
2025-03-27 20:45:42,736 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:45:42,737 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:42.734671'}
2025-03-27 20:45:42,738 - INFO: Created alert: <Alert info at None>
2025-03-27 20:45:42,739 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:42.738865')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:42.738865')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:45:52,234 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:52.232598'}
2025-03-27 20:45:52,235 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:45:52,235 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:52.232598'}
2025-03-27 20:45:52,236 - INFO: Created alert: <Alert info at None>
2025-03-27 20:45:52,237 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:52.237055')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:52.237055')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:45:53,421 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:53.419974'}
2025-03-27 20:45:53,422 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:45:53,423 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:45:53.419974'}
2025-03-27 20:45:53,423 - INFO: Created alert: <Alert info at None>
2025-03-27 20:45:53,424 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:53.424259')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:45:53.424259')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:46:02,431 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:02.427638'}
2025-03-27 20:46:02,431 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:46:02,432 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:02.427638'}
2025-03-27 20:46:02,433 - INFO: Created alert: <Alert info at None>
2025-03-27 20:46:02,434 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:02.433919')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:02.433919')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:46:03,612 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:03.610333'}
2025-03-27 20:46:03,613 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:46:03,613 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:03.610333'}
2025-03-27 20:46:03,614 - INFO: Created alert: <Alert info at None>
2025-03-27 20:46:03,615 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:03.614931')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:03.614931')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:46:13,276 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:13.274330'}
2025-03-27 20:46:13,277 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:46:13,277 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:13.274330'}
2025-03-27 20:46:13,278 - INFO: Created alert: <Alert info at None>
2025-03-27 20:46:13,279 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:13.279054')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:13.279054')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:46:13,644 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:13.642121'}
2025-03-27 20:46:13,644 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:46:13,645 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:13.642121'}
2025-03-27 20:46:13,645 - INFO: Created alert: <Alert info at None>
2025-03-27 20:46:13,647 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:13.646678')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:13.646678')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:46:23,493 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:23.492175'}
2025-03-27 20:46:23,494 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:46:23,495 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:23.492175'}
2025-03-27 20:46:23,495 - INFO: Created alert: <Alert info at None>
2025-03-27 20:46:23,496 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:23.496367')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:23.496367')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:46:24,686 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:24.684026'}
2025-03-27 20:46:24,686 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:46:24,687 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:24.684026'}
2025-03-27 20:46:24,687 - INFO: Created alert: <Alert info at None>
2025-03-27 20:46:24,689 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:24.688659')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:24.688659')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:46:33,852 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:33.850644'}
2025-03-27 20:46:33,853 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:46:33,853 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:33.850644'}
2025-03-27 20:46:33,854 - INFO: Created alert: <Alert info at None>
2025-03-27 20:46:33,855 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:33.855056')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:33.855056')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:46:35,068 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:35.067345'}
2025-03-27 20:46:35,069 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:46:35,070 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:35.067345'}
2025-03-27 20:46:35,070 - INFO: Created alert: <Alert info at None>
2025-03-27 20:46:35,071 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:35.071183')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:35.071183')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:46:44,790 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:44.788100'}
2025-03-27 20:46:44,791 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:46:44,791 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:44.788100'}
2025-03-27 20:46:44,792 - INFO: Created alert: <Alert info at None>
2025-03-27 20:46:44,795 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:44.793646')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:44.793646')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:46:45,557 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:45.556140'}
2025-03-27 20:46:45,558 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:46:45,558 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:45.556140'}
2025-03-27 20:46:45,559 - INFO: Created alert: <Alert info at None>
2025-03-27 20:46:45,561 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:45.560836')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:45.560836')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:46:55,506 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:55.504692'}
2025-03-27 20:46:55,507 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:46:55,507 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:55.504692'}
2025-03-27 20:46:55,508 - INFO: Created alert: <Alert info at None>
2025-03-27 20:46:55,509 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:55.509036')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:55.509036')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:46:55,990 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:55.989141'}
2025-03-27 20:46:55,991 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:46:55,992 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:46:55.989141'}
2025-03-27 20:46:55,992 - INFO: Created alert: <Alert info at None>
2025-03-27 20:46:55,993 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:55.993570')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:46:55.993570')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:47:05,611 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:05.609916'}
2025-03-27 20:47:05,612 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:47:05,613 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:05.609916'}
2025-03-27 20:47:05,613 - INFO: Created alert: <Alert info at None>
2025-03-27 20:47:05,614 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:05.614245')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:05.614245')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:47:06,337 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:06.335439'}
2025-03-27 20:47:06,337 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:47:06,338 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:06.335439'}
2025-03-27 20:47:06,339 - INFO: Created alert: <Alert info at None>
2025-03-27 20:47:06,340 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:06.340146')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:06.340146')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:47:16,050 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:16.048171'}
2025-03-27 20:47:16,050 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:47:16,051 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:16.048171'}
2025-03-27 20:47:16,051 - INFO: Created alert: <Alert info at None>
2025-03-27 20:47:16,053 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:16.052899')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:16.052899')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:47:16,107 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:16.105682'}
2025-03-27 20:47:16,108 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:47:16,108 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:16.105682'}
2025-03-27 20:47:16,109 - INFO: Created alert: <Alert info at None>
2025-03-27 20:47:16,110 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:16.110332')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:16.110332')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:47:26,355 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:26.353583'}
2025-03-27 20:47:26,356 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:47:26,357 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:26.353583'}
2025-03-27 20:47:26,357 - INFO: Created alert: <Alert info at None>
2025-03-27 20:47:26,358 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:26.358380')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:26.358380')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:47:26,932 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:26.930310'}
2025-03-27 20:47:26,933 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:47:26,934 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:26.930310'}
2025-03-27 20:47:26,934 - INFO: Created alert: <Alert info at None>
2025-03-27 20:47:26,935 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:26.935492')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:26.935492')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:47:36,686 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:36.684577'}
2025-03-27 20:47:36,686 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:47:36,687 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:36.684577'}
2025-03-27 20:47:36,688 - INFO: Created alert: <Alert info at None>
2025-03-27 20:47:36,689 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:36.689051')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:36.689051')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:47:37,964 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:37.962545'}
2025-03-27 20:47:37,964 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:47:37,965 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:37.962545'}
2025-03-27 20:47:37,965 - INFO: Created alert: <Alert info at None>
2025-03-27 20:47:37,966 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:37.966293')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:37.966293')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:47:49,591 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:49.588691'}
2025-03-27 20:47:49,592 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:47:49,593 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:49.588691'}
2025-03-27 20:47:49,593 - INFO: Created alert: <Alert info at None>
2025-03-27 20:47:49,595 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:49.594849')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:49.594849')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:47:50,848 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:50.847511'}
2025-03-27 20:47:50,849 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:47:50,850 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:47:50.847511'}
2025-03-27 20:47:50,850 - INFO: Created alert: <Alert info at None>
2025-03-27 20:47:50,852 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:50.851637')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:47:50.851637')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:48:00,265 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:00.262744'}
2025-03-27 20:48:00,265 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:48:00,266 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:00.262744'}
2025-03-27 20:48:00,267 - INFO: Created alert: <Alert info at None>
2025-03-27 20:48:00,268 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:00.267839')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:00.267839')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:48:01,544 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:01.542369'}
2025-03-27 20:48:01,544 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:48:01,545 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:01.542369'}
2025-03-27 20:48:01,545 - INFO: Created alert: <Alert info at None>
2025-03-27 20:48:01,546 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:01.546440')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:01.546440')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:48:11,564 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:11.561409'}
2025-03-27 20:48:11,565 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:48:11,565 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:11.561409'}
2025-03-27 20:48:11,566 - INFO: Created alert: <Alert info at None>
2025-03-27 20:48:11,568 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:11.567379')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:11.567379')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:48:12,006 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:12.004657'}
2025-03-27 20:48:12,006 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:48:12,007 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:12.004657'}
2025-03-27 20:48:12,007 - INFO: Created alert: <Alert info at None>
2025-03-27 20:48:12,008 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:12.008505')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:12.008505')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:48:21,724 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:21.722187'}
2025-03-27 20:48:21,725 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:48:21,726 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:21.722187'}
2025-03-27 20:48:21,726 - INFO: Created alert: <Alert info at None>
2025-03-27 20:48:21,728 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:21.728096')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:21.728096')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:48:22,546 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:22.545354'}
2025-03-27 20:48:22,547 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:48:22,548 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:22.545354'}
2025-03-27 20:48:22,548 - INFO: Created alert: <Alert info at None>
2025-03-27 20:48:22,549 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:22.549410')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:22.549410')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:48:31,988 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:31.985657'}
2025-03-27 20:48:31,988 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:48:31,989 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:31.985657'}
2025-03-27 20:48:31,989 - INFO: Created alert: <Alert info at None>
2025-03-27 20:48:31,991 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:31.990728')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:31.990728')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:48:32,711 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:32.709843'}
2025-03-27 20:48:32,712 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:48:32,712 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:32.709843'}
2025-03-27 20:48:32,713 - INFO: Created alert: <Alert info at None>
2025-03-27 20:48:32,714 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:32.713754')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:32.713754')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:48:41,997 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:41.995222'}
2025-03-27 20:48:41,998 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:48:41,998 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:41.995222'}
2025-03-27 20:48:41,999 - INFO: Created alert: <Alert info at None>
2025-03-27 20:48:42,000 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:42.000314')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:42.000314')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:48:42,800 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:42.798897'}
2025-03-27 20:48:42,801 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:48:42,802 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:42.798897'}
2025-03-27 20:48:42,802 - INFO: Created alert: <Alert info at None>
2025-03-27 20:48:42,803 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:42.803370')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:42.803370')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:48:53,076 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:53.073545'}
2025-03-27 20:48:53,076 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:48:53,077 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:53.073545'}
2025-03-27 20:48:53,077 - INFO: Created alert: <Alert info at None>
2025-03-27 20:48:53,079 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:53.078765')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:53.078765')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:48:53,434 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:53.432774'}
2025-03-27 20:48:53,434 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:48:53,435 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:48:53.432774'}
2025-03-27 20:48:53,436 - INFO: Created alert: <Alert info at None>
2025-03-27 20:48:53,437 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:53.436962')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:48:53.436962')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:49:03,263 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:03.260713'}
2025-03-27 20:49:03,264 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:49:03,265 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:03.260713'}
2025-03-27 20:49:03,266 - INFO: Created alert: <Alert info at None>
2025-03-27 20:49:03,268 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:03.267307')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:03.267307')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:49:03,719 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:03.718134'}
2025-03-27 20:49:03,720 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:49:03,720 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:03.718134'}
2025-03-27 20:49:03,721 - INFO: Created alert: <Alert info at None>
2025-03-27 20:49:03,722 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:03.721867')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:03.721867')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:49:13,836 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:13.835235'}
2025-03-27 20:49:13,837 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:49:13,837 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:13.835235'}
2025-03-27 20:49:13,838 - INFO: Created alert: <Alert info at None>
2025-03-27 20:49:13,839 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:13.839158')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:13.839158')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:49:13,886 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:13.883840'}
2025-03-27 20:49:13,887 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:49:13,888 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:13.883840'}
2025-03-27 20:49:13,888 - INFO: Created alert: <Alert info at None>
2025-03-27 20:49:13,890 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:13.889493')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:13.889493')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:49:23,945 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:23.943968'}
2025-03-27 20:49:23,946 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:49:23,947 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:23.943968'}
2025-03-27 20:49:23,947 - INFO: Created alert: <Alert info at None>
2025-03-27 20:49:23,949 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:23.948522')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:23.948522')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:49:24,551 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:24.550351'}
2025-03-27 20:49:24,552 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:49:24,553 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:24.550351'}
2025-03-27 20:49:24,553 - INFO: Created alert: <Alert info at None>
2025-03-27 20:49:24,554 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:24.554391')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:24.554391')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:49:34,342 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:34.340454'}
2025-03-27 20:49:34,343 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:49:34,343 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:34.340454'}
2025-03-27 20:49:34,344 - INFO: Created alert: <Alert info at None>
2025-03-27 20:49:34,345 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:34.345360')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:34.345360')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:49:34,683 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:34.681735'}
2025-03-27 20:49:34,683 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:49:34,684 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:34.681735'}
2025-03-27 20:49:34,684 - INFO: Created alert: <Alert info at None>
2025-03-27 20:49:34,686 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:34.685527')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:34.685527')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:49:44,972 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:44.971121'}
2025-03-27 20:49:44,973 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:49:44,973 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:44.971121'}
2025-03-27 20:49:44,974 - INFO: Created alert: <Alert info at None>
2025-03-27 20:49:44,975 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:44.975052')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:44.975052')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:49:44,996 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:44.995064'}
2025-03-27 20:49:44,997 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:49:44,998 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:44.995064'}
2025-03-27 20:49:44,998 - INFO: Created alert: <Alert info at None>
2025-03-27 20:49:45,000 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:44.999492')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:44.999492')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:49:55,521 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:55.519221'}
2025-03-27 20:49:55,521 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:49:55,522 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:55.519221'}
2025-03-27 20:49:55,522 - INFO: Created alert: <Alert info at None>
2025-03-27 20:49:55,524 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:55.523717')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:55.523717')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:49:55,617 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:55.616283'}
2025-03-27 20:49:55,618 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:49:55,619 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:49:55.616283'}
2025-03-27 20:49:55,619 - INFO: Created alert: <Alert info at None>
2025-03-27 20:49:55,620 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:55.620388')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:49:55.620388')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:50:06,175 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:06.173884'}
2025-03-27 20:50:06,176 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:50:06,177 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:06.173884'}
2025-03-27 20:50:06,177 - INFO: Created alert: <Alert info at None>
2025-03-27 20:50:06,179 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:06.178526')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:06.178526')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:50:06,633 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:06.631374'}
2025-03-27 20:50:06,634 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:50:06,634 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:06.631374'}
2025-03-27 20:50:06,635 - INFO: Created alert: <Alert info at None>
2025-03-27 20:50:06,636 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:06.636225')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:06.636225')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:50:17,091 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:17.089058'}
2025-03-27 20:50:17,092 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:50:17,092 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:17.089058'}
2025-03-27 20:50:17,093 - INFO: Created alert: <Alert info at None>
2025-03-27 20:50:17,094 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:17.093975')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:17.093975')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:50:17,925 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:17.923499'}
2025-03-27 20:50:17,926 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:50:17,926 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:17.923499'}
2025-03-27 20:50:17,927 - INFO: Created alert: <Alert info at None>
2025-03-27 20:50:17,928 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:17.928207')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:17.928207')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:50:27,015 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:27.014543'}
2025-03-27 20:50:27,016 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:50:27,017 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:27.014543'}
2025-03-27 20:50:27,017 - INFO: Created alert: <Alert info at None>
2025-03-27 20:50:27,018 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:27.018370')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:27.018370')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:50:28,832 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:28.831433'}
2025-03-27 20:50:28,833 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:50:28,834 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:28.831433'}
2025-03-27 20:50:28,834 - INFO: Created alert: <Alert info at None>
2025-03-27 20:50:28,835 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:28.835381')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:28.835381')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:50:37,914 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:37.913526'}
2025-03-27 20:50:37,915 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:50:37,916 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:37.913526'}
2025-03-27 20:50:37,916 - INFO: Created alert: <Alert info at None>
2025-03-27 20:50:37,918 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:37.917559')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:37.917559')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:50:39,125 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:39.123664'}
2025-03-27 20:50:39,125 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:50:39,126 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:39.123664'}
2025-03-27 20:50:39,126 - INFO: Created alert: <Alert info at None>
2025-03-27 20:50:39,128 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:39.127623')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:39.127623')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:50:48,364 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:48.361837'}
2025-03-27 20:50:48,365 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:50:48,365 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:48.361837'}
2025-03-27 20:50:48,366 - INFO: Created alert: <Alert info at None>
2025-03-27 20:50:48,368 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:48.367382')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:48.367382')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:50:49,631 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:49.629740'}
2025-03-27 20:50:49,632 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:50:49,632 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:49.629740'}
2025-03-27 20:50:49,633 - INFO: Created alert: <Alert info at None>
2025-03-27 20:50:49,634 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:49.633815')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:49.633815')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:50:58,630 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:58.628035'}
2025-03-27 20:50:58,631 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:50:58,631 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:50:58.628035'}
2025-03-27 20:50:58,632 - INFO: Created alert: <Alert info at None>
2025-03-27 20:50:58,633 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:58.632968')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:50:58.632968')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:51:00,015 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:00.012619'}
2025-03-27 20:51:00,016 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:51:00,017 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:00.012619'}
2025-03-27 20:51:00,017 - INFO: Created alert: <Alert info at None>
2025-03-27 20:51:00,019 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:00.018531')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:00.018531')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:51:09,824 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:09.821150'}
2025-03-27 20:51:09,824 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:51:09,825 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:09.821150'}
2025-03-27 20:51:09,825 - INFO: Created alert: <Alert info at None>
2025-03-27 20:51:09,828 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:09.826897')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:09.826897')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:51:10,429 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:10.428169'}
2025-03-27 20:51:10,430 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:51:10,430 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:10.428169'}
2025-03-27 20:51:10,431 - INFO: Created alert: <Alert info at None>
2025-03-27 20:51:10,433 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:10.432018')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:10.432018')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:51:20,573 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:20.571958'}
2025-03-27 20:51:20,574 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:51:20,574 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:20.571958'}
2025-03-27 20:51:20,575 - INFO: Created alert: <Alert info at None>
2025-03-27 20:51:20,576 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:20.576177')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:20.576177')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:51:21,108 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:21.106332'}
2025-03-27 20:51:21,109 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:51:21,109 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:21.106332'}
2025-03-27 20:51:21,110 - INFO: Created alert: <Alert info at None>
2025-03-27 20:51:21,111 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:21.111106')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:21.111106')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:51:30,917 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:30.915463'}
2025-03-27 20:51:30,918 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:51:30,918 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:30.915463'}
2025-03-27 20:51:30,919 - INFO: Created alert: <Alert info at None>
2025-03-27 20:51:30,920 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:30.920311')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:30.920311')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:51:31,474 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:31.472296'}
2025-03-27 20:51:31,474 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:51:31,475 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:31.472296'}
2025-03-27 20:51:31,475 - INFO: Created alert: <Alert info at None>
2025-03-27 20:51:31,477 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:31.476756')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:31.476756')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:51:41,125 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:41.123491'}
2025-03-27 20:51:41,126 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:51:41,127 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:41.123491'}
2025-03-27 20:51:41,127 - INFO: Created alert: <Alert info at None>
2025-03-27 20:51:41,129 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:41.128467')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:41.128467')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:51:42,064 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:42.063657'}
2025-03-27 20:51:42,065 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:51:42,066 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:42.063657'}
2025-03-27 20:51:42,066 - INFO: Created alert: <Alert info at None>
2025-03-27 20:51:42,067 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:42.067439')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:42.067439')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:51:51,004 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:51.002092'}
2025-03-27 20:51:51,005 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:51:51,006 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:51.002092'}
2025-03-27 20:51:51,006 - INFO: Created alert: <Alert info at None>
2025-03-27 20:51:51,008 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:51.007576')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:51.007576')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:51:52,820 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:52.818180'}
2025-03-27 20:51:52,821 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:51:52,822 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:51:52.818180'}
2025-03-27 20:51:52,822 - INFO: Created alert: <Alert info at None>
2025-03-27 20:51:52,824 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:52.823516')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:51:52.823516')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:52:01,412 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:01.410647'}
2025-03-27 20:52:01,413 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:52:01,414 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:01.410647'}
2025-03-27 20:52:01,414 - INFO: Created alert: <Alert info at None>
2025-03-27 20:52:01,415 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:01.415376')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:01.415376')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:52:03,238 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:03.236820'}
2025-03-27 20:52:03,239 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:52:03,240 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:03.236820'}
2025-03-27 20:52:03,240 - INFO: Created alert: <Alert info at None>
2025-03-27 20:52:03,242 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:03.241478')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:03.241478')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:52:11,657 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:11.656129'}
2025-03-27 20:52:11,658 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:52:11,658 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:11.656129'}
2025-03-27 20:52:11,659 - INFO: Created alert: <Alert info at None>
2025-03-27 20:52:11,661 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:11.660397')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:11.660397')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:52:13,852 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:13.850956'}
2025-03-27 20:52:13,853 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:52:13,853 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:13.850956'}
2025-03-27 20:52:13,854 - INFO: Created alert: <Alert info at None>
2025-03-27 20:52:13,855 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:13.855327')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:13.855327')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:52:21,315 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:21.312991'}
2025-03-27 20:52:21,316 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:52:21,317 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:21.312991'}
2025-03-27 20:52:21,318 - INFO: Created alert: <Alert info at None>
2025-03-27 20:52:21,319 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:21.319102')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:21.319102')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:52:24,893 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:24.892288'}
2025-03-27 20:52:24,894 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:52:24,894 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:24.892288'}
2025-03-27 20:52:24,895 - INFO: Created alert: <Alert info at None>
2025-03-27 20:52:24,896 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:24.896219')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:24.896219')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:52:30,839 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:30.837096'}
2025-03-27 20:52:30,840 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:52:30,840 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:30.837096'}
2025-03-27 20:52:30,841 - INFO: Created alert: <Alert info at None>
2025-03-27 20:52:30,842 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:30.842275')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:30.842275')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:52:35,448 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:35.447284'}
2025-03-27 20:52:35,449 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:52:35,450 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:35.447284'}
2025-03-27 20:52:35,450 - INFO: Created alert: <Alert info at None>
2025-03-27 20:52:35,452 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:35.451633')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:35.451633')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:52:41,170 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:41.167320'}
2025-03-27 20:52:41,170 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:52:41,171 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:41.167320'}
2025-03-27 20:52:41,171 - INFO: Created alert: <Alert info at None>
2025-03-27 20:52:41,173 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:41.172586')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:41.172586')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:52:45,035 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:45.033190'}
2025-03-27 20:52:45,036 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:52:45,037 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:45.033190'}
2025-03-27 20:52:45,037 - INFO: Created alert: <Alert info at None>
2025-03-27 20:52:45,039 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:45.038593')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:45.038593')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:52:51,023 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:51.021962'}
2025-03-27 20:52:51,024 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:52:51,024 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:51.021962'}
2025-03-27 20:52:51,025 - INFO: Created alert: <Alert info at None>
2025-03-27 20:52:51,026 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:51.026195')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:51.026195')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:52:55,084 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:55.082930'}
2025-03-27 20:52:55,085 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:52:55,085 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:52:55.082930'}
2025-03-27 20:52:55,086 - INFO: Created alert: <Alert info at None>
2025-03-27 20:52:55,087 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:55.087059')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:52:55.087059')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:53:01,962 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:01.960914'}
2025-03-27 20:53:01,963 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:53:01,963 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:01.960914'}
2025-03-27 20:53:01,964 - INFO: Created alert: <Alert info at None>
2025-03-27 20:53:01,965 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:01.964967')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:01.964967')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:53:05,556 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:05.555507'}
2025-03-27 20:53:05,557 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:53:05,557 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:05.555507'}
2025-03-27 20:53:05,558 - INFO: Created alert: <Alert info at None>
2025-03-27 20:53:05,559 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:05.559141')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:05.559141')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:53:12,105 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:12.104305'}
2025-03-27 20:53:12,106 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:53:12,106 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:12.104305'}
2025-03-27 20:53:12,107 - INFO: Created alert: <Alert info at None>
2025-03-27 20:53:12,108 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:12.108023')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:12.108023')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:53:16,001 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:15.999771'}
2025-03-27 20:53:16,002 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:53:16,002 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:15.999771'}
2025-03-27 20:53:16,003 - INFO: Created alert: <Alert info at None>
2025-03-27 20:53:16,004 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:16.004023')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:16.004023')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:53:21,655 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:21.653593'}
2025-03-27 20:53:21,656 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:53:21,657 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:21.653593'}
2025-03-27 20:53:21,657 - INFO: Created alert: <Alert info at None>
2025-03-27 20:53:21,660 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:21.658579')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:21.658579')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:53:25,993 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:25.991887'}
2025-03-27 20:53:25,993 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:53:25,994 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:25.991887'}
2025-03-27 20:53:25,995 - INFO: Created alert: <Alert info at None>
2025-03-27 20:53:25,997 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:25.997057')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:25.997057')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:53:31,031 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:31.029343'}
2025-03-27 20:53:31,032 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:53:31,032 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:31.029343'}
2025-03-27 20:53:31,033 - INFO: Created alert: <Alert info at None>
2025-03-27 20:53:31,034 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:31.034352')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:31.034352')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:53:35,532 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:35.530555'}
2025-03-27 20:53:35,532 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:53:35,533 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:35.530555'}
2025-03-27 20:53:35,533 - INFO: Created alert: <Alert info at None>
2025-03-27 20:53:35,534 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:35.534484')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:35.534484')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:53:40,463 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:40.461636'}
2025-03-27 20:53:40,463 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:53:40,464 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:40.461636'}
2025-03-27 20:53:40,464 - INFO: Created alert: <Alert info at None>
2025-03-27 20:53:40,466 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:40.465530')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:40.465530')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:53:45,698 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:45.697260'}
2025-03-27 20:53:45,699 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:53:45,700 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:45.697260'}
2025-03-27 20:53:45,700 - INFO: Created alert: <Alert info at None>
2025-03-27 20:53:45,702 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:45.701702')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:45.701702')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:53:50,605 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:50.603177'}
2025-03-27 20:53:50,606 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:53:50,606 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:50.603177'}
2025-03-27 20:53:50,607 - INFO: Created alert: <Alert info at None>
2025-03-27 20:53:50,608 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:50.608077')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:50.608077')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:53:55,346 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:55.345225'}
2025-03-27 20:53:55,347 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:53:55,348 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:53:55.345225'}
2025-03-27 20:53:55,348 - INFO: Created alert: <Alert info at None>
2025-03-27 20:53:55,350 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:55.349453')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:53:55.349453')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:54:00,156 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:00.155030'}
2025-03-27 20:54:00,157 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:54:00,158 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:00.155030'}
2025-03-27 20:54:00,158 - INFO: Created alert: <Alert info at None>
2025-03-27 20:54:00,160 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:00.159430')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:00.159430')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:54:05,731 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:05.729459'}
2025-03-27 20:54:05,732 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:54:05,733 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:05.729459'}
2025-03-27 20:54:05,733 - INFO: Created alert: <Alert info at None>
2025-03-27 20:54:05,735 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:05.734505')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:05.734505')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:54:09,437 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:09.436348'}
2025-03-27 20:54:09,438 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:54:09,438 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:09.436348'}
2025-03-27 20:54:09,439 - INFO: Created alert: <Alert info at None>
2025-03-27 20:54:09,440 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:09.440378')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:09.440378')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:54:15,460 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:15.458525'}
2025-03-27 20:54:15,461 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:54:15,461 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:15.458525'}
2025-03-27 20:54:15,462 - INFO: Created alert: <Alert info at None>
2025-03-27 20:54:15,463 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:15.462834')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:15.462834')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:54:18,991 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:18.989680'}
2025-03-27 20:54:18,992 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:54:18,992 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:18.989680'}
2025-03-27 20:54:18,993 - INFO: Created alert: <Alert info at None>
2025-03-27 20:54:18,994 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:18.994245')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:18.994245')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:54:26,390 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:26.389114'}
2025-03-27 20:54:26,391 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:54:26,392 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:26.389114'}
2025-03-27 20:54:26,392 - INFO: Created alert: <Alert info at None>
2025-03-27 20:54:26,393 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:26.393517')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:26.393517')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:54:28,449 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:28.447893'}
2025-03-27 20:54:28,450 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:54:28,450 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:28.447893'}
2025-03-27 20:54:28,451 - INFO: Created alert: <Alert info at None>
2025-03-27 20:54:28,452 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:28.451944')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:28.451944')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:54:36,534 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:36.532432'}
2025-03-27 20:54:36,535 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:54:36,535 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:36.532432'}
2025-03-27 20:54:36,536 - INFO: Created alert: <Alert info at None>
2025-03-27 20:54:36,537 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:36.537070')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:36.537070')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:54:38,514 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:38.511615'}
2025-03-27 20:54:38,515 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:54:38,516 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:38.511615'}
2025-03-27 20:54:38,517 - INFO: Created alert: <Alert info at None>
2025-03-27 20:54:38,519 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:38.518393')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:38.518393')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:54:47,034 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:47.032864'}
2025-03-27 20:54:47,035 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:54:47,035 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:47.032864'}
2025-03-27 20:54:47,036 - INFO: Created alert: <Alert info at None>
2025-03-27 20:54:47,037 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:47.036815')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:47.036815')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:54:48,477 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:48.476018'}
2025-03-27 20:54:48,478 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:54:48,478 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:48.476018'}
2025-03-27 20:54:48,479 - INFO: Created alert: <Alert info at None>
2025-03-27 20:54:48,480 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:48.479911')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:48.479911')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:54:57,547 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:57.545518'}
2025-03-27 20:54:57,548 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:54:57,548 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:57.545518'}
2025-03-27 20:54:57,549 - INFO: Created alert: <Alert info at None>
2025-03-27 20:54:57,550 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:57.550326')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:57.550326')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:54:59,023 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:59.021845'}
2025-03-27 20:54:59,024 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:54:59,024 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:54:59.021845'}
2025-03-27 20:54:59,024 - INFO: Created alert: <Alert info at None>
2025-03-27 20:54:59,026 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:59.025793')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:54:59.025793')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:55:07,780 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:55:07.778552'}
2025-03-27 20:55:07,780 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:55:07,781 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:55:07.778552'}
2025-03-27 20:55:07,781 - INFO: Created alert: <Alert info at None>
2025-03-27 20:55:07,783 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:55:07.782745')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:55:07.782745')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 20:55:08,808 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:55:08.805773'}
2025-03-27 20:55:08,809 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 20:55:08,809 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T20:55:08.805773'}
2025-03-27 20:55:08,810 - INFO: Created alert: <Alert info at None>
2025-03-27 20:55:08,811 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:55:08.811022')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 17:55:08.811022')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:08:47,425 - ERROR: Error fetching device properties: HTTPSConnectionPool(host='api2.arduino.cc', port=443): Read timed out. (read timeout=None)
2025-03-27 21:08:47,471 - ERROR: Error fetching device properties: HTTPSConnectionPool(host='api2.arduino.cc', port=443): Read timed out. (read timeout=None)
2025-03-27 21:08:58,006 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:08:58.004618'}
2025-03-27 21:08:58,007 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:08:58,007 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:08:58.004618'}
2025-03-27 21:08:58,008 - INFO: Created alert: <Alert info at None>
2025-03-27 21:08:58,009 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:08:58.009247')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:08:58.009247')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:08:58,429 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:08:58.428127'}
2025-03-27 21:08:58,430 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:08:58,431 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:08:58.428127'}
2025-03-27 21:08:58,431 - INFO: Created alert: <Alert info at None>
2025-03-27 21:08:58,463 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:08:58.432509')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:08:58.432509')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:09:08,144 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:09:08.142275'}
2025-03-27 21:09:08,144 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:09:08,145 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:09:08.142275'}
2025-03-27 21:09:08,145 - INFO: Created alert: <Alert info at None>
2025-03-27 21:09:08,151 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:09:08.146776')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:09:08.146776')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:09:08,466 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:09:08.464057'}
2025-03-27 21:09:08,467 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:09:08,468 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:09:08.464057'}
2025-03-27 21:09:08,468 - INFO: Created alert: <Alert info at None>
2025-03-27 21:09:08,470 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:09:08.469818')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:09:08.469818')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:09:18,026 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:09:18.023664'}
2025-03-27 21:09:18,027 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:09:18,027 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:09:18.023664'}
2025-03-27 21:09:18,028 - INFO: Created alert: <Alert info at None>
2025-03-27 21:09:18,030 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:09:18.029411')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:09:18.029411')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:09:19,055 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:09:19.052798'}
2025-03-27 21:09:19,055 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:09:19,056 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:09:19.052798'}
2025-03-27 21:09:19,057 - INFO: Created alert: <Alert info at None>
2025-03-27 21:09:19,058 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:09:19.057943')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:09:19.057943')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:09:28,496 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:09:28.494745'}
2025-03-27 21:09:28,496 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:09:28,497 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:09:28.494745'}
2025-03-27 21:09:28,497 - INFO: Created alert: <Alert info at None>
2025-03-27 21:09:28,499 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:09:28.498871')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:09:28.498871')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:09:29,273 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:09:29.272212'}
2025-03-27 21:09:29,274 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:09:29,275 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:09:29.272212'}
2025-03-27 21:09:29,275 - INFO: Created alert: <Alert info at None>
2025-03-27 21:09:29,277 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:09:29.277050')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:09:29.277050')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:09:37,848 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:09:37.847492'}
2025-03-27 21:09:37,849 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:09:37,849 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:09:37.847492'}
2025-03-27 21:09:37,850 - INFO: Created alert: <Alert info at None>
2025-03-27 21:09:37,851 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:09:37.850925')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:09:37.850925')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:09:39,346 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:09:39.344430'}
2025-03-27 21:09:39,346 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:09:39,347 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:09:39.344430'}
2025-03-27 21:09:39,348 - INFO: Created alert: <Alert info at None>
2025-03-27 21:09:39,350 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:09:39.349299')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:09:39.349299')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:09:56,251 - INFO: Database tables created successfully
2025-03-27 21:09:56,317 - INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 21:09:56,317 - INFO: [33mPress CTRL+C to quit[0m
2025-03-27 21:09:56,320 - INFO:  * Restarting with stat
2025-03-27 21:09:57,392 - INFO: Database tables created successfully
2025-03-27 21:09:57,429 - WARNING:  * Debugger is active!
2025-03-27 21:09:57,445 - INFO:  * Debugger PIN: 106-521-103
2025-03-27 21:10:00,698 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:00.696836'}
2025-03-27 21:10:00,700 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:10:00,701 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:00.696836'}
2025-03-27 21:10:00,701 - INFO: Created alert: <Alert info at None>
2025-03-27 21:10:00,705 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:00.704260')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:00.704260')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:10:01,591 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:01.590047'}
2025-03-27 21:10:01,593 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:10:01,594 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:01.590047'}
2025-03-27 21:10:01,595 - INFO: Created alert: <Alert info at None>
2025-03-27 21:10:01,599 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:01.597441')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:01.597441')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:10:10,469 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:10.468500'}
2025-03-27 21:10:10,470 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:10:10,470 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:10.468500'}
2025-03-27 21:10:10,471 - INFO: Created alert: <Alert info at None>
2025-03-27 21:10:10,472 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:10.472286')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:10.472286')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:10:10,929 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:10.928666'}
2025-03-27 21:10:10,930 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:10:10,931 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:10.928666'}
2025-03-27 21:10:10,931 - INFO: Created alert: <Alert info at None>
2025-03-27 21:10:10,932 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:10.932402')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:10.932402')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:10:19,981 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:19.979360'}
2025-03-27 21:10:19,982 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:10:19,983 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:19.979360'}
2025-03-27 21:10:19,983 - INFO: Created alert: <Alert info at None>
2025-03-27 21:10:19,984 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:19.984411')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:19.984411')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:10:20,021 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:20.018250'}
2025-03-27 21:10:20,022 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:10:20,022 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:20.018250'}
2025-03-27 21:10:20,023 - INFO: Created alert: <Alert info at None>
2025-03-27 21:10:20,025 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:20.024499')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:20.024499')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:10:29,793 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:29.791789'}
2025-03-27 21:10:29,793 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:10:29,794 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:29.791789'}
2025-03-27 21:10:29,795 - INFO: Created alert: <Alert info at None>
2025-03-27 21:10:29,797 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:29.795838')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:29.795838')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:10:30,449 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:30.448432'}
2025-03-27 21:10:30,450 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:10:30,451 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:30.448432'}
2025-03-27 21:10:30,451 - INFO: Created alert: <Alert info at None>
2025-03-27 21:10:30,454 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:30.452687')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:30.452687')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:10:39,793 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:39.791668'}
2025-03-27 21:10:39,794 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:10:39,795 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:39.791668'}
2025-03-27 21:10:39,795 - INFO: Created alert: <Alert info at None>
2025-03-27 21:10:39,796 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:39.796197')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:39.796197')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:10:40,108 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:40.106332'}
2025-03-27 21:10:40,108 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:10:40,109 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:40.106332'}
2025-03-27 21:10:40,109 - INFO: Created alert: <Alert info at None>
2025-03-27 21:10:40,111 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:40.110700')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:40.110700')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:10:49,953 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:49.951347'}
2025-03-27 21:10:49,954 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:10:49,954 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:49.951347'}
2025-03-27 21:10:49,955 - INFO: Created alert: <Alert info at None>
2025-03-27 21:10:49,957 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:49.956951')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:49.956951')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:10:50,585 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:50.584196'}
2025-03-27 21:10:50,586 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:10:50,586 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:50.584196'}
2025-03-27 21:10:50,587 - INFO: Created alert: <Alert info at None>
2025-03-27 21:10:50,588 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:50.588366')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:50.588366')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:10:59,318 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:59.316423'}
2025-03-27 21:10:59,319 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:10:59,319 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:59.316423'}
2025-03-27 21:10:59,320 - INFO: Created alert: <Alert info at None>
2025-03-27 21:10:59,322 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:59.321434')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:59.321434')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:10:59,957 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:59.956329'}
2025-03-27 21:10:59,958 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:10:59,959 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:10:59.956329'}
2025-03-27 21:10:59,959 - INFO: Created alert: <Alert info at None>
2025-03-27 21:10:59,961 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:59.960523')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:10:59.960523')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:11:09,035 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:09.033917'}
2025-03-27 21:11:09,035 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:11:09,036 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:09.033917'}
2025-03-27 21:11:09,036 - INFO: Created alert: <Alert info at None>
2025-03-27 21:11:09,038 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:09.037678')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:09.037678')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:11:09,141 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:09.139900'}
2025-03-27 21:11:09,142 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:11:09,142 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:09.139900'}
2025-03-27 21:11:09,143 - INFO: Created alert: <Alert info at None>
2025-03-27 21:11:09,144 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:09.144188')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:09.144188')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:11:18,145 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:18.144435'}
2025-03-27 21:11:18,146 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:11:18,146 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:18.144435'}
2025-03-27 21:11:18,147 - INFO: Created alert: <Alert info at None>
2025-03-27 21:11:18,148 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:18.147957')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:18.147957')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:11:18,735 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:18.734431'}
2025-03-27 21:11:18,736 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:11:18,736 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:18.734431'}
2025-03-27 21:11:18,737 - INFO: Created alert: <Alert info at None>
2025-03-27 21:11:18,738 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:18.738098')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:18.738098')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:11:28,676 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:28.674712'}
2025-03-27 21:11:28,676 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:11:28,677 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:28.674712'}
2025-03-27 21:11:28,677 - INFO: Created alert: <Alert info at None>
2025-03-27 21:11:28,678 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:28.678499')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:28.678499')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:11:30,116 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:30.114966'}
2025-03-27 21:11:30,117 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:11:30,118 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:30.114966'}
2025-03-27 21:11:30,119 - INFO: Created alert: <Alert info at None>
2025-03-27 21:11:30,121 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:30.120558')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:30.120558')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:11:38,967 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:38.964179'}
2025-03-27 21:11:38,968 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:11:38,969 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:38.964179'}
2025-03-27 21:11:38,970 - INFO: Created alert: <Alert info at None>
2025-03-27 21:11:38,972 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:38.971267')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:38.971267')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:11:39,977 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:39.975587'}
2025-03-27 21:11:39,977 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:11:39,978 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:39.975587'}
2025-03-27 21:11:39,978 - INFO: Created alert: <Alert info at None>
2025-03-27 21:11:39,980 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:39.979909')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:39.979909')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:11:49,152 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:49.149363'}
2025-03-27 21:11:49,153 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:11:49,153 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:49.149363'}
2025-03-27 21:11:49,154 - INFO: Created alert: <Alert info at None>
2025-03-27 21:11:49,155 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:49.154914')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:49.154914')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:11:50,850 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:50.846258'}
2025-03-27 21:11:50,851 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:11:50,853 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:50.846258'}
2025-03-27 21:11:50,854 - INFO: Created alert: <Alert info at None>
2025-03-27 21:11:50,858 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:50.856664')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:50.856664')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:11:59,333 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:59.330261'}
2025-03-27 21:11:59,334 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:11:59,335 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:11:59.330261'}
2025-03-27 21:11:59,336 - INFO: Created alert: <Alert info at None>
2025-03-27 21:11:59,338 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:59.337356')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:11:59.337356')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:12:01,644 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:01.642117'}
2025-03-27 21:12:01,645 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:12:01,646 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:01.642117'}
2025-03-27 21:12:01,646 - INFO: Created alert: <Alert info at None>
2025-03-27 21:12:01,648 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:01.647747')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:01.647747')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:12:08,768 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:08.767543'}
2025-03-27 21:12:08,769 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:12:08,770 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:08.767543'}
2025-03-27 21:12:08,770 - INFO: Created alert: <Alert info at None>
2025-03-27 21:12:08,772 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:08.771863')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:08.771863')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:12:11,476 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:11.474715'}
2025-03-27 21:12:11,477 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:12:11,478 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:11.474715'}
2025-03-27 21:12:11,479 - INFO: Created alert: <Alert info at None>
2025-03-27 21:12:11,481 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:11.480261')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:11.480261')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:12:20,794 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:20.793182'}
2025-03-27 21:12:20,795 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:12:20,796 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:20.793182'}
2025-03-27 21:12:20,797 - INFO: Created alert: <Alert info at None>
2025-03-27 21:12:20,798 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:20.798080')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:20.798080')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:12:22,375 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:22.372298'}
2025-03-27 21:12:22,375 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:12:22,376 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:22.372298'}
2025-03-27 21:12:22,377 - INFO: Created alert: <Alert info at None>
2025-03-27 21:12:22,378 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:22.378080')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:22.378080')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:12:30,398 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:30.396262'}
2025-03-27 21:12:30,399 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:12:30,401 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:30.396262'}
2025-03-27 21:12:30,402 - INFO: Created alert: <Alert info at None>
2025-03-27 21:12:30,406 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:30.405293')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:30.405293')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:12:32,034 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:32.031162'}
2025-03-27 21:12:32,035 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:12:32,035 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:32.031162'}
2025-03-27 21:12:32,036 - INFO: Created alert: <Alert info at None>
2025-03-27 21:12:32,037 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:32.037159')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:32.037159')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:12:41,120 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:41.118625'}
2025-03-27 21:12:41,121 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:12:41,121 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:41.118625'}
2025-03-27 21:12:41,122 - INFO: Created alert: <Alert info at None>
2025-03-27 21:12:41,123 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:41.123053')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:41.123053')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:12:41,473 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:41.471975'}
2025-03-27 21:12:41,474 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:12:41,474 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:41.471975'}
2025-03-27 21:12:41,475 - INFO: Created alert: <Alert info at None>
2025-03-27 21:12:41,476 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:41.475750')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:41.475750')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:12:51,040 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:51.038877'}
2025-03-27 21:12:51,041 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:12:51,041 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:51.038877'}
2025-03-27 21:12:51,042 - INFO: Created alert: <Alert info at None>
2025-03-27 21:12:51,043 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:51.043175')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:51.043175')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:12:51,206 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:51.205031'}
2025-03-27 21:12:51,207 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:12:51,207 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:12:51.205031'}
2025-03-27 21:12:51,208 - INFO: Created alert: <Alert info at None>
2025-03-27 21:12:51,209 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:51.208997')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:12:51.208997')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:13:00,706 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:00.705011'}
2025-03-27 21:13:00,707 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:13:00,707 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:00.705011'}
2025-03-27 21:13:00,708 - INFO: Created alert: <Alert info at None>
2025-03-27 21:13:00,709 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:00.709150')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:00.709150')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:13:01,565 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:01.563911'}
2025-03-27 21:13:01,565 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:13:01,566 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:01.563911'}
2025-03-27 21:13:01,566 - INFO: Created alert: <Alert info at None>
2025-03-27 21:13:01,568 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:01.567603')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:01.567603')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:13:11,521 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:11.519785'}
2025-03-27 21:13:11,521 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:13:11,522 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:11.519785'}
2025-03-27 21:13:11,522 - INFO: Created alert: <Alert info at None>
2025-03-27 21:13:11,523 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:11.523551')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:11.523551')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:13:11,784 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:11.783478'}
2025-03-27 21:13:11,785 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:13:11,785 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:11.783478'}
2025-03-27 21:13:11,786 - INFO: Created alert: <Alert info at None>
2025-03-27 21:13:11,787 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:11.787089')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:11.787089')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:13:21,439 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:21.436358'}
2025-03-27 21:13:21,440 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:13:21,440 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:21.436358'}
2025-03-27 21:13:21,441 - INFO: Created alert: <Alert info at None>
2025-03-27 21:13:21,442 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:21.442406')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:21.442406')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:13:22,244 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:22.243449'}
2025-03-27 21:13:22,245 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:13:22,246 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:22.243449'}
2025-03-27 21:13:22,247 - INFO: Created alert: <Alert info at None>
2025-03-27 21:13:22,249 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:22.248439')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:22.248439')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:13:34,087 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:34.085140'}
2025-03-27 21:13:34,088 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:13:34,089 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:34.085140'}
2025-03-27 21:13:34,090 - INFO: Created alert: <Alert info at None>
2025-03-27 21:13:34,092 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:34.091672')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:34.091672')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:13:34,369 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:34.368008'}
2025-03-27 21:13:34,370 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:13:34,371 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:34.368008'}
2025-03-27 21:13:34,372 - INFO: Created alert: <Alert info at None>
2025-03-27 21:13:34,374 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:34.373819')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:34.373819')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:13:44,609 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:44.608004'}
2025-03-27 21:13:44,610 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:13:44,610 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:44.608004'}
2025-03-27 21:13:44,611 - INFO: Created alert: <Alert info at None>
2025-03-27 21:13:44,612 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:44.612047')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:44.612047')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:13:45,229 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:45.228292'}
2025-03-27 21:13:45,230 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:13:45,231 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:45.228292'}
2025-03-27 21:13:45,231 - INFO: Created alert: <Alert info at None>
2025-03-27 21:13:45,232 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:45.232363')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:45.232363')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:13:55,261 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:55.259259'}
2025-03-27 21:13:55,262 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:13:55,263 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:55.259259'}
2025-03-27 21:13:55,263 - INFO: Created alert: <Alert info at None>
2025-03-27 21:13:55,265 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:55.264607')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:55.264607')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:13:55,681 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:55.679595'}
2025-03-27 21:13:55,681 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:13:55,682 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:13:55.679595'}
2025-03-27 21:13:55,682 - INFO: Created alert: <Alert info at None>
2025-03-27 21:13:55,684 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:55.683823')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:13:55.683823')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:14:07,149 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:07.146258'}
2025-03-27 21:14:07,150 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:14:07,151 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:07.146258'}
2025-03-27 21:14:07,151 - INFO: Created alert: <Alert info at None>
2025-03-27 21:14:07,152 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:07.152437')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:07.152437')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:14:07,163 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:07.161266'}
2025-03-27 21:14:07,164 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:14:07,165 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:07.161266'}
2025-03-27 21:14:07,166 - INFO: Created alert: <Alert info at None>
2025-03-27 21:14:07,168 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:07.167385')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:07.167385')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:14:17,469 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:17.468044'}
2025-03-27 21:14:17,470 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:14:17,471 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:17.468044'}
2025-03-27 21:14:17,471 - INFO: Created alert: <Alert info at None>
2025-03-27 21:14:17,473 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:17.472564')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:17.472564')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:14:17,924 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:17.923729'}
2025-03-27 21:14:17,925 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:14:17,926 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:17.923729'}
2025-03-27 21:14:17,926 - INFO: Created alert: <Alert info at None>
2025-03-27 21:14:17,927 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:17.927341')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:17.927341')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:14:28,469 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:28.468306'}
2025-03-27 21:14:28,470 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:14:28,471 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:28.468306'}
2025-03-27 21:14:28,471 - INFO: Created alert: <Alert info at None>
2025-03-27 21:14:28,473 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:28.472759')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:28.472759')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:14:28,662 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:28.660232'}
2025-03-27 21:14:28,662 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:14:28,663 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:28.660232'}
2025-03-27 21:14:28,663 - INFO: Created alert: <Alert info at None>
2025-03-27 21:14:28,665 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:28.664858')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:28.664858')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:14:39,136 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:39.134737'}
2025-03-27 21:14:39,136 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:14:39,137 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:39.134737'}
2025-03-27 21:14:39,138 - INFO: Created alert: <Alert info at None>
2025-03-27 21:14:39,141 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:39.140776')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:39.140776')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:14:39,589 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:39.587243'}
2025-03-27 21:14:39,590 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:14:39,590 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:39.587243'}
2025-03-27 21:14:39,591 - INFO: Created alert: <Alert info at None>
2025-03-27 21:14:39,592 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:39.592340')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:39.592340')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:14:50,192 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:50.189515'}
2025-03-27 21:14:50,193 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:14:50,193 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:50.189515'}
2025-03-27 21:14:50,194 - INFO: Created alert: <Alert info at None>
2025-03-27 21:14:50,196 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:50.195570')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:50.195570')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:14:51,199 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:51.195907'}
2025-03-27 21:14:51,201 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:14:51,202 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:14:51.195907'}
2025-03-27 21:14:51,204 - INFO: Created alert: <Alert info at None>
2025-03-27 21:14:51,207 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:51.206151')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:14:51.206151')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:15:01,936 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:01.933683'}
2025-03-27 21:15:01,937 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:15:01,938 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:01.933683'}
2025-03-27 21:15:01,939 - INFO: Created alert: <Alert info at None>
2025-03-27 21:15:01,940 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:01.940133')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:01.940133')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:15:02,656 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:02.652393'}
2025-03-27 21:15:02,657 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:15:02,658 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:02.652393'}
2025-03-27 21:15:02,659 - INFO: Created alert: <Alert info at None>
2025-03-27 21:15:02,675 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:02.673756')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:02.673756')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:15:12,160 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:12.157201'}
2025-03-27 21:15:12,160 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:15:12,161 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:12.157201'}
2025-03-27 21:15:12,161 - INFO: Created alert: <Alert info at None>
2025-03-27 21:15:12,163 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:12.162769')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:12.162769')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:15:12,939 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:12.936935'}
2025-03-27 21:15:12,940 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:15:12,940 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:12.936935'}
2025-03-27 21:15:12,941 - INFO: Created alert: <Alert info at None>
2025-03-27 21:15:12,942 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:12.941923')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:12.941923')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:15:22,553 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:22.551747'}
2025-03-27 21:15:22,554 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:15:22,554 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:22.551747'}
2025-03-27 21:15:22,555 - INFO: Created alert: <Alert info at None>
2025-03-27 21:15:22,557 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:22.556483')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:22.556483')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:15:23,081 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:23.079973'}
2025-03-27 21:15:23,082 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:15:23,082 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:23.079973'}
2025-03-27 21:15:23,083 - INFO: Created alert: <Alert info at None>
2025-03-27 21:15:23,084 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:23.084026')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:23.084026')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:15:32,936 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:32.934263'}
2025-03-27 21:15:32,937 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:15:32,937 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:32.934263'}
2025-03-27 21:15:32,938 - INFO: Created alert: <Alert info at None>
2025-03-27 21:15:32,939 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:32.939226')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:32.939226')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:15:33,595 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:33.593790'}
2025-03-27 21:15:33,595 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:15:33,596 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:33.593790'}
2025-03-27 21:15:33,596 - INFO: Created alert: <Alert info at None>
2025-03-27 21:15:33,597 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:33.597442')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:33.597442')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:15:43,244 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:43.241592'}
2025-03-27 21:15:43,244 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:15:43,245 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:43.241592'}
2025-03-27 21:15:43,245 - INFO: Created alert: <Alert info at None>
2025-03-27 21:15:43,247 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:43.246604')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:43.246604')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:15:44,400 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:44.398064'}
2025-03-27 21:15:44,414 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:15:44,417 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:44.398064'}
2025-03-27 21:15:44,418 - INFO: Created alert: <Alert info at None>
2025-03-27 21:15:44,420 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:44.419261')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:44.419261')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:15:53,604 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:53.601419'}
2025-03-27 21:15:53,604 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:15:53,605 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:53.601419'}
2025-03-27 21:15:53,605 - INFO: Created alert: <Alert info at None>
2025-03-27 21:15:53,607 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:53.606747')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:53.606747')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:15:54,953 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:54.951518'}
2025-03-27 21:15:54,953 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:15:54,954 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:15:54.951518'}
2025-03-27 21:15:54,955 - INFO: Created alert: <Alert info at None>
2025-03-27 21:15:54,956 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:54.955906')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:15:54.955906')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:16:04,355 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:04.352405'}
2025-03-27 21:16:04,355 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:16:04,356 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:04.352405'}
2025-03-27 21:16:04,357 - INFO: Created alert: <Alert info at None>
2025-03-27 21:16:04,359 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:04.358150')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:04.358150')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:16:05,037 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:05.035961'}
2025-03-27 21:16:05,037 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:16:05,038 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:05.035961'}
2025-03-27 21:16:05,039 - INFO: Created alert: <Alert info at None>
2025-03-27 21:16:05,040 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:05.039825')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:05.039825')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:16:14,682 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:14.680243'}
2025-03-27 21:16:14,682 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:16:14,683 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:14.680243'}
2025-03-27 21:16:14,683 - INFO: Created alert: <Alert info at None>
2025-03-27 21:16:14,685 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:14.684629')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:14.684629')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:16:15,272 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:15.270756'}
2025-03-27 21:16:15,273 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:16:15,274 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:15.270756'}
2025-03-27 21:16:15,274 - INFO: Created alert: <Alert info at None>
2025-03-27 21:16:15,275 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:15.275234')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:15.275234')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:16:24,809 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:24.807712'}
2025-03-27 21:16:24,809 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:16:24,810 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:24.807712'}
2025-03-27 21:16:24,810 - INFO: Created alert: <Alert info at None>
2025-03-27 21:16:24,812 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:24.811538')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:24.811538')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:16:26,036 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:26.034018'}
2025-03-27 21:16:26,036 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:16:26,037 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:26.034018'}
2025-03-27 21:16:26,037 - INFO: Created alert: <Alert info at None>
2025-03-27 21:16:26,038 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:26.038537')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:26.038537')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:16:35,701 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:35.698864'}
2025-03-27 21:16:35,701 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:16:35,702 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:35.698864'}
2025-03-27 21:16:35,702 - INFO: Created alert: <Alert info at None>
2025-03-27 21:16:35,704 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:35.703758')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:35.703758')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:16:36,278 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:36.277306'}
2025-03-27 21:16:36,279 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:16:36,280 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:36.277306'}
2025-03-27 21:16:36,280 - INFO: Created alert: <Alert info at None>
2025-03-27 21:16:36,282 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:36.281533')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:36.281533')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:16:46,155 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:46.153361'}
2025-03-27 21:16:46,156 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:16:46,157 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:46.153361'}
2025-03-27 21:16:46,157 - INFO: Created alert: <Alert info at None>
2025-03-27 21:16:46,159 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:46.158460')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:46.158460')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:16:46,698 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:46.696310'}
2025-03-27 21:16:46,699 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:16:46,700 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:46.696310'}
2025-03-27 21:16:46,701 - INFO: Created alert: <Alert info at None>
2025-03-27 21:16:46,702 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:46.701901')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:46.701901')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:16:57,883 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:57.881763'}
2025-03-27 21:16:57,884 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:16:57,884 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:57.881763'}
2025-03-27 21:16:57,885 - INFO: Created alert: <Alert info at None>
2025-03-27 21:16:57,886 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:57.886136')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:57.886136')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:16:58,498 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:58.495955'}
2025-03-27 21:16:58,499 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:16:58,499 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:16:58.495955'}
2025-03-27 21:16:58,500 - INFO: Created alert: <Alert info at None>
2025-03-27 21:16:58,501 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:58.501040')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    db.session.commit()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:16:58.501040')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:17:07,166 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:07.163658'}
2025-03-27 21:17:07,166 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:17:07,167 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:07.163658'}
2025-03-27 21:17:07,168 - INFO: Created alert: <Alert info at None>
2025-03-27 21:17:07,169 - ERROR: Database error in data processing: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:17:07.168890')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such table: alert

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 194, in process_arduino_data
    # Commit changes
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\scoping.py", line 599, in commit
    return self._proxied.commit()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4353, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4488, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4449, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\engine\default.py", line 942, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: alert
[SQL: INSERT INTO alert (level, message, is_active, is_acknowledged, timestamp) VALUES (?, ?, ?, ?, ?)]
[parameters: ('info', 'Gas level: 0.004926626570522785 PPM - Gas levels normal', 1, 0, '2025-03-27 18:17:07.168890')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-03-27 21:17:07,653 - INFO:  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-27 21:17:07,885 - INFO:  * Restarting with stat
2025-03-27 21:17:09,896 - INFO: Database tables created successfully
2025-03-27 21:17:09,936 - WARNING:  * Debugger is active!
2025-03-27 21:17:09,957 - INFO:  * Debugger PIN: 106-521-103
2025-03-27 21:17:15,190 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:15.186748'}
2025-03-27 21:17:15,194 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:17:15,196 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:15.186748'}
2025-03-27 21:17:15,197 - INFO: Created alert: <Alert info at None>
2025-03-27 21:17:16,638 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:16.636688'}
2025-03-27 21:17:16,638 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:17:16,639 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:16.636688'}
2025-03-27 21:17:16,639 - INFO: Created alert: <Alert info at None>
2025-03-27 21:17:25,623 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:25.622450'}
2025-03-27 21:17:25,624 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:17:25,625 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:25.622450'}
2025-03-27 21:17:25,625 - INFO: Created alert: <Alert info at None>
2025-03-27 21:17:26,203 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:26.202445'}
2025-03-27 21:17:26,204 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:17:26,205 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:26.202445'}
2025-03-27 21:17:26,205 - INFO: Created alert: <Alert info at None>
2025-03-27 21:17:36,201 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:36.200163'}
2025-03-27 21:17:36,202 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:17:36,203 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:36.200163'}
2025-03-27 21:17:36,203 - INFO: Created alert: <Alert info at None>
2025-03-27 21:17:36,396 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:36.394624'}
2025-03-27 21:17:36,397 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:17:36,397 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:36.394624'}
2025-03-27 21:17:36,398 - INFO: Created alert: <Alert info at None>
2025-03-27 21:17:46,547 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:46.545593'}
2025-03-27 21:17:46,548 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:17:46,548 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:46.545593'}
2025-03-27 21:17:46,549 - INFO: Created alert: <Alert info at None>
2025-03-27 21:17:46,908 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:46.906981'}
2025-03-27 21:17:46,909 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:17:46,910 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:46.906981'}
2025-03-27 21:17:46,910 - INFO: Created alert: <Alert info at None>
2025-03-27 21:17:56,872 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:56.870878'}
2025-03-27 21:17:56,873 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:17:56,873 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:56.870878'}
2025-03-27 21:17:56,874 - INFO: Created alert: <Alert info at None>
2025-03-27 21:17:57,324 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:57.323226'}
2025-03-27 21:17:57,325 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:17:57,326 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:17:57.323226'}
2025-03-27 21:17:57,326 - INFO: Created alert: <Alert info at None>
2025-03-27 21:18:07,225 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:07.222653'}
2025-03-27 21:18:07,225 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:18:07,226 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:07.222653'}
2025-03-27 21:18:07,227 - INFO: Created alert: <Alert info at None>
2025-03-27 21:18:07,781 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:07.779845'}
2025-03-27 21:18:07,782 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:18:07,783 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:07.779845'}
2025-03-27 21:18:07,783 - INFO: Created alert: <Alert info at None>
2025-03-27 21:18:18,569 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:18.566543'}
2025-03-27 21:18:18,569 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:18:18,570 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:18.566543'}
2025-03-27 21:18:18,571 - INFO: Created alert: <Alert info at None>
2025-03-27 21:18:18,700 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:18.698081'}
2025-03-27 21:18:18,701 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:18:18,701 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:18.698081'}
2025-03-27 21:18:18,702 - INFO: Created alert: <Alert info at None>
2025-03-27 21:18:29,452 - INFO: Database tables created successfully
2025-03-27 21:18:29,513 - INFO: [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 21:18:29,513 - INFO: [33mPress CTRL+C to quit[0m
2025-03-27 21:18:29,515 - INFO:  * Restarting with stat
2025-03-27 21:18:30,697 - INFO: Database tables created successfully
2025-03-27 21:18:30,739 - WARNING:  * Debugger is active!
2025-03-27 21:18:30,763 - INFO:  * Debugger PIN: 106-521-103
2025-03-27 21:18:34,204 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:34.202724'}
2025-03-27 21:18:34,207 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:18:34,208 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:34.202724'}
2025-03-27 21:18:34,209 - INFO: Created alert: <Alert info at None>
2025-03-27 21:18:35,391 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:35.388318'}
2025-03-27 21:18:35,395 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:18:35,396 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:35.388318'}
2025-03-27 21:18:35,396 - INFO: Created alert: <Alert info at None>
2025-03-27 21:18:43,303 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:43.301712'}
2025-03-27 21:18:43,303 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:18:43,304 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:43.301712'}
2025-03-27 21:18:43,305 - INFO: Created alert: <Alert info at None>
2025-03-27 21:18:45,162 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:45.155690'}
2025-03-27 21:18:45,163 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:18:45,164 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:45.155690'}
2025-03-27 21:18:45,165 - INFO: Created alert: <Alert info at None>
2025-03-27 21:18:54,771 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:54.769729'}
2025-03-27 21:18:54,772 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:18:54,772 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:54.769729'}
2025-03-27 21:18:54,773 - INFO: Created alert: <Alert info at None>
2025-03-27 21:18:55,944 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:55.940983'}
2025-03-27 21:18:55,945 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:18:55,946 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:18:55.940983'}
2025-03-27 21:18:55,947 - INFO: Created alert: <Alert info at None>
2025-03-27 21:19:03,869 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:03.866054'}
2025-03-27 21:19:03,869 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:19:03,870 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:03.866054'}
2025-03-27 21:19:03,871 - INFO: Created alert: <Alert info at None>
2025-03-27 21:19:05,440 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:05.437140'}
2025-03-27 21:19:05,441 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:19:05,441 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:05.437140'}
2025-03-27 21:19:05,442 - INFO: Created alert: <Alert info at None>
2025-03-27 21:19:13,525 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:13.524410'}
2025-03-27 21:19:13,526 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:19:13,527 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:13.524410'}
2025-03-27 21:19:13,527 - INFO: Created alert: <Alert info at None>
2025-03-27 21:19:15,231 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:15.230627'}
2025-03-27 21:19:15,232 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:19:15,233 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:15.230627'}
2025-03-27 21:19:15,233 - INFO: Created alert: <Alert info at None>
2025-03-27 21:19:18,161 - INFO: 127.0.0.1 - - [27/Mar/2025 21:19:18] "[33mGET / HTTP/1.1[0m" 404 -
2025-03-27 21:19:23,897 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:23.895721'}
2025-03-27 21:19:23,898 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:19:23,899 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:23.895721'}
2025-03-27 21:19:23,899 - INFO: Created alert: <Alert info at None>
2025-03-27 21:19:24,123 - INFO: 127.0.0.1 - - [27/Mar/2025 21:19:24] "[33mGET / HTTP/1.1[0m" 404 -
2025-03-27 21:19:25,231 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:25.230103'}
2025-03-27 21:19:25,232 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:19:25,232 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:25.230103'}
2025-03-27 21:19:25,233 - INFO: Created alert: <Alert info at None>
2025-03-27 21:19:25,752 - INFO: 127.0.0.1 - - [27/Mar/2025 21:19:25] "[33mGET / HTTP/1.1[0m" 404 -
2025-03-27 21:19:34,827 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:34.823386'}
2025-03-27 21:19:34,828 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:19:34,828 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:34.823386'}
2025-03-27 21:19:34,829 - INFO: Created alert: <Alert info at None>
2025-03-27 21:19:36,010 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:36.008710'}
2025-03-27 21:19:36,010 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:19:36,011 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:36.008710'}
2025-03-27 21:19:36,011 - INFO: Created alert: <Alert info at None>
2025-03-27 21:19:44,965 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:44.962337'}
2025-03-27 21:19:44,966 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:19:44,967 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:44.962337'}
2025-03-27 21:19:44,967 - INFO: Created alert: <Alert info at None>
2025-03-27 21:19:45,643 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:45.642637'}
2025-03-27 21:19:45,644 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:19:45,645 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:45.642637'}
2025-03-27 21:19:45,645 - INFO: Created alert: <Alert info at None>
2025-03-27 21:19:55,747 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:55.744570'}
2025-03-27 21:19:55,748 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:19:55,749 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:55.744570'}
2025-03-27 21:19:55,750 - INFO: Created alert: <Alert info at None>
2025-03-27 21:19:56,219 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:56.218029'}
2025-03-27 21:19:56,220 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:19:56,221 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:19:56.218029'}
2025-03-27 21:19:56,221 - INFO: Created alert: <Alert info at None>
2025-03-27 21:20:05,626 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:05.624975'}
2025-03-27 21:20:05,628 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:20:05,629 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:05.624975'}
2025-03-27 21:20:05,629 - INFO: Created alert: <Alert info at None>
2025-03-27 21:20:06,077 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:06.075945'}
2025-03-27 21:20:06,078 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:20:06,079 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:06.075945'}
2025-03-27 21:20:06,079 - INFO: Created alert: <Alert info at None>
2025-03-27 21:20:15,327 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:15.325525'}
2025-03-27 21:20:15,327 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:20:15,328 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:15.325525'}
2025-03-27 21:20:15,329 - INFO: Created alert: <Alert info at None>
2025-03-27 21:20:16,061 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:16.059956'}
2025-03-27 21:20:16,062 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:20:16,063 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:16.059956'}
2025-03-27 21:20:16,063 - INFO: Created alert: <Alert info at None>
2025-03-27 21:20:25,590 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:25.588989'}
2025-03-27 21:20:25,591 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:20:25,592 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:25.588989'}
2025-03-27 21:20:25,592 - INFO: Created alert: <Alert info at None>
2025-03-27 21:20:27,147 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:27.146531'}
2025-03-27 21:20:27,148 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:20:27,148 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:27.146531'}
2025-03-27 21:20:27,149 - INFO: Created alert: <Alert info at None>
2025-03-27 21:20:37,264 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:37.220910'}
2025-03-27 21:20:37,289 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:20:37,299 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:37.220910'}
2025-03-27 21:20:37,321 - INFO: Created alert: <Alert info at None>
2025-03-27 21:20:38,222 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:38.220114'}
2025-03-27 21:20:38,222 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:20:38,223 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:38.220114'}
2025-03-27 21:20:38,224 - INFO: Created alert: <Alert info at None>
2025-03-27 21:20:47,975 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:47.970516'}
2025-03-27 21:20:47,978 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:20:47,981 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:47.970516'}
2025-03-27 21:20:47,982 - INFO: Created alert: <Alert info at None>
2025-03-27 21:20:49,661 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:49.659825'}
2025-03-27 21:20:49,662 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:20:49,664 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:49.659825'}
2025-03-27 21:20:49,665 - INFO: Created alert: <Alert info at None>
2025-03-27 21:20:59,251 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:59.250218'}
2025-03-27 21:20:59,252 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:20:59,252 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:20:59.250218'}
2025-03-27 21:20:59,253 - INFO: Created alert: <Alert info at None>
2025-03-27 21:21:00,481 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:00.479563'}
2025-03-27 21:21:00,482 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:21:00,483 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:00.479563'}
2025-03-27 21:21:00,483 - INFO: Created alert: <Alert info at None>
2025-03-27 21:21:09,951 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:09.948834'}
2025-03-27 21:21:09,951 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:21:09,952 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:09.948834'}
2025-03-27 21:21:09,953 - INFO: Created alert: <Alert info at None>
2025-03-27 21:21:10,858 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:10.855952'}
2025-03-27 21:21:10,859 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:21:10,859 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:10.855952'}
2025-03-27 21:21:10,860 - INFO: Created alert: <Alert info at None>
2025-03-27 21:21:22,065 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:22.063005'}
2025-03-27 21:21:22,066 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:21:22,066 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:22.063005'}
2025-03-27 21:21:22,067 - INFO: Created alert: <Alert info at None>
2025-03-27 21:21:22,319 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:22.317019'}
2025-03-27 21:21:22,321 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:21:22,322 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:22.317019'}
2025-03-27 21:21:22,322 - INFO: Created alert: <Alert info at None>
2025-03-27 21:21:32,654 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:32.649610'}
2025-03-27 21:21:32,654 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:21:32,655 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:32.649610'}
2025-03-27 21:21:32,656 - INFO: Created alert: <Alert info at None>
2025-03-27 21:21:33,005 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:33.002625'}
2025-03-27 21:21:33,006 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:21:33,007 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:33.002625'}
2025-03-27 21:21:33,008 - INFO: Created alert: <Alert info at None>
2025-03-27 21:21:42,719 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:42.715724'}
2025-03-27 21:21:42,719 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:21:42,720 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:42.715724'}
2025-03-27 21:21:42,721 - INFO: Created alert: <Alert info at None>
2025-03-27 21:21:43,364 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:43.362197'}
2025-03-27 21:21:43,365 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:21:43,366 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:43.362197'}
2025-03-27 21:21:43,366 - INFO: Created alert: <Alert info at None>
2025-03-27 21:21:52,966 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:52.963536'}
2025-03-27 21:21:52,968 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:21:52,968 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:52.963536'}
2025-03-27 21:21:52,969 - INFO: Created alert: <Alert info at None>
2025-03-27 21:21:54,522 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:54.521205'}
2025-03-27 21:21:54,523 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:21:54,524 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:21:54.521205'}
2025-03-27 21:21:54,525 - INFO: Created alert: <Alert info at None>
2025-03-27 21:22:03,307 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:03.306485'}
2025-03-27 21:22:03,308 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:22:03,309 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:03.306485'}
2025-03-27 21:22:03,309 - INFO: Created alert: <Alert info at None>
2025-03-27 21:22:03,773 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:03.772569'}
2025-03-27 21:22:03,774 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:22:03,775 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:03.772569'}
2025-03-27 21:22:03,775 - INFO: Created alert: <Alert info at None>
2025-03-27 21:22:13,063 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:13.062427'}
2025-03-27 21:22:13,064 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:22:13,065 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:13.062427'}
2025-03-27 21:22:13,065 - INFO: Created alert: <Alert info at None>
2025-03-27 21:22:13,559 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:13.557117'}
2025-03-27 21:22:13,559 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:22:13,560 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:13.557117'}
2025-03-27 21:22:13,560 - INFO: Created alert: <Alert info at None>
2025-03-27 21:22:23,809 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:23.807164'}
2025-03-27 21:22:23,810 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:22:23,810 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:23.807164'}
2025-03-27 21:22:23,811 - INFO: Created alert: <Alert info at None>
2025-03-27 21:22:24,037 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:24.035476'}
2025-03-27 21:22:24,038 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:22:24,038 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:24.035476'}
2025-03-27 21:22:24,039 - INFO: Created alert: <Alert info at None>
2025-03-27 21:22:34,562 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:34.559244'}
2025-03-27 21:22:34,563 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:22:34,564 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:34.559244'}
2025-03-27 21:22:34,565 - INFO: Created alert: <Alert info at None>
2025-03-27 21:22:35,170 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:35.168502'}
2025-03-27 21:22:35,171 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:22:35,172 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:35.168502'}
2025-03-27 21:22:35,172 - INFO: Created alert: <Alert info at None>
2025-03-27 21:22:45,752 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:45.750033'}
2025-03-27 21:22:45,752 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:22:45,753 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:45.750033'}
2025-03-27 21:22:45,754 - INFO: Created alert: <Alert info at None>
2025-03-27 21:22:45,949 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:45.947123'}
2025-03-27 21:22:45,949 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:22:45,950 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:45.947123'}
2025-03-27 21:22:45,951 - INFO: Created alert: <Alert info at None>
2025-03-27 21:22:56,844 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:56.842811'}
2025-03-27 21:22:56,845 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:22:56,845 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:56.842811'}
2025-03-27 21:22:56,846 - INFO: Created alert: <Alert info at None>
2025-03-27 21:22:57,319 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:57.317472'}
2025-03-27 21:22:57,320 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:22:57,320 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:22:57.317472'}
2025-03-27 21:22:57,321 - INFO: Created alert: <Alert info at None>
2025-03-27 21:23:06,299 - INFO:  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-27 21:23:06,724 - INFO:  * Restarting with stat
2025-03-27 21:23:08,453 - INFO: Database tables created successfully
2025-03-27 21:23:08,494 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:08.490316'}
2025-03-27 21:23:08,495 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:23:08,496 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:08.490316'}
2025-03-27 21:23:08,496 - INFO: Created alert: <Alert info at None>
2025-03-27 21:23:08,500 - WARNING:  * Debugger is active!
2025-03-27 21:23:08,547 - INFO:  * Debugger PIN: 106-521-103
2025-03-27 21:23:13,670 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:13.668743'}
2025-03-27 21:23:13,673 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:23:13,674 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:13.668743'}
2025-03-27 21:23:13,674 - INFO: Created alert: <Alert info at None>
2025-03-27 21:23:18,701 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:18.700387'}
2025-03-27 21:23:18,702 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:23:18,703 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:18.700387'}
2025-03-27 21:23:18,703 - INFO: Created alert: <Alert info at None>
2025-03-27 21:23:22,858 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:22.857103'}
2025-03-27 21:23:22,859 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:23:22,859 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:22.857103'}
2025-03-27 21:23:22,860 - INFO: Created alert: <Alert info at None>
2025-03-27 21:23:28,658 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:28.656969'}
2025-03-27 21:23:28,659 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:23:28,660 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:28.656969'}
2025-03-27 21:23:28,660 - INFO: Created alert: <Alert info at None>
2025-03-27 21:23:32,691 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:32.687371'}
2025-03-27 21:23:32,692 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:23:32,693 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:32.687371'}
2025-03-27 21:23:32,695 - INFO: Created alert: <Alert info at None>
2025-03-27 21:23:38,151 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:38.149260'}
2025-03-27 21:23:38,151 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:23:38,152 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:38.149260'}
2025-03-27 21:23:38,152 - INFO: Created alert: <Alert info at None>
2025-03-27 21:23:43,009 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:43.007683'}
2025-03-27 21:23:43,010 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:23:43,010 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:43.007683'}
2025-03-27 21:23:43,011 - INFO: Created alert: <Alert info at None>
2025-03-27 21:23:47,916 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:47.914324'}
2025-03-27 21:23:47,917 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:23:47,917 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:47.914324'}
2025-03-27 21:23:47,918 - INFO: Created alert: <Alert info at None>
2025-03-27 21:23:52,688 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:52.685671'}
2025-03-27 21:23:52,689 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:23:52,689 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:52.685671'}
2025-03-27 21:23:52,690 - INFO: Created alert: <Alert info at None>
2025-03-27 21:23:57,649 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:57.647686'}
2025-03-27 21:23:57,649 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:23:57,650 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:23:57.647686'}
2025-03-27 21:23:57,651 - INFO: Created alert: <Alert info at None>
2025-03-27 21:24:03,654 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:03.652361'}
2025-03-27 21:24:03,655 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:24:03,656 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:03.652361'}
2025-03-27 21:24:03,656 - INFO: Created alert: <Alert info at None>
2025-03-27 21:24:08,414 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:08.412660'}
2025-03-27 21:24:08,414 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:24:08,415 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:08.412660'}
2025-03-27 21:24:08,415 - INFO: Created alert: <Alert info at None>
2025-03-27 21:24:14,257 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:14.255372'}
2025-03-27 21:24:14,258 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:24:14,259 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:14.255372'}
2025-03-27 21:24:14,260 - INFO: Created alert: <Alert info at None>
2025-03-27 21:24:19,737 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:19.733371'}
2025-03-27 21:24:19,738 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:24:19,741 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:19.733371'}
2025-03-27 21:24:19,741 - INFO: Created alert: <Alert info at None>
2025-03-27 21:24:24,921 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:24.918104'}
2025-03-27 21:24:24,922 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:24:24,923 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:24.918104'}
2025-03-27 21:24:24,923 - INFO: Created alert: <Alert info at None>
2025-03-27 21:24:30,002 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:30.000684'}
2025-03-27 21:24:30,003 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:24:30,004 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:30.000684'}
2025-03-27 21:24:30,005 - INFO: Created alert: <Alert info at None>
2025-03-27 21:24:30,041 - INFO: 127.0.0.1 - - [27/Mar/2025 21:24:30] "[33mGET / HTTP/1.1[0m" 404 -
2025-03-27 21:24:31,103 - INFO: 127.0.0.1 - - [27/Mar/2025 21:24:31] "[33mGET / HTTP/1.1[0m" 404 -
2025-03-27 21:24:34,863 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:34.860630'}
2025-03-27 21:24:34,864 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:24:34,865 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:34.860630'}
2025-03-27 21:24:34,866 - INFO: Created alert: <Alert info at None>
2025-03-27 21:24:40,253 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:40.249311'}
2025-03-27 21:24:40,263 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:24:40,264 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:40.249311'}
2025-03-27 21:24:40,265 - INFO: Created alert: <Alert info at None>
2025-03-27 21:24:45,690 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:45.687062'}
2025-03-27 21:24:45,690 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:24:45,691 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:45.687062'}
2025-03-27 21:24:45,692 - INFO: Created alert: <Alert info at None>
2025-03-27 21:24:50,035 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:50.034064'}
2025-03-27 21:24:50,036 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:24:50,036 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:50.034064'}
2025-03-27 21:24:50,037 - INFO: Created alert: <Alert info at None>
2025-03-27 21:24:54,592 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:54.591510'}
2025-03-27 21:24:54,593 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:24:54,594 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:54.591510'}
2025-03-27 21:24:54,594 - INFO: Created alert: <Alert info at None>
2025-03-27 21:24:59,263 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:59.260516'}
2025-03-27 21:24:59,264 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:24:59,266 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:24:59.260516'}
2025-03-27 21:24:59,267 - INFO: Created alert: <Alert info at None>
2025-03-27 21:25:05,179 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:05.178136'}
2025-03-27 21:25:05,180 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:25:05,181 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:05.178136'}
2025-03-27 21:25:05,181 - INFO: Created alert: <Alert info at None>
2025-03-27 21:25:09,167 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:09.166173'}
2025-03-27 21:25:09,168 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:25:09,169 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:09.166173'}
2025-03-27 21:25:09,169 - INFO: Created alert: <Alert info at None>
2025-03-27 21:25:16,780 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:16.777367'}
2025-03-27 21:25:16,781 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:25:16,782 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:16.777367'}
2025-03-27 21:25:16,783 - INFO: Created alert: <Alert info at None>
2025-03-27 21:25:20,169 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:20.167542'}
2025-03-27 21:25:20,169 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:25:20,170 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:20.167542'}
2025-03-27 21:25:20,170 - INFO: Created alert: <Alert info at None>
2025-03-27 21:25:28,836 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:28.834182'}
2025-03-27 21:25:28,837 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:25:28,838 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:28.834182'}
2025-03-27 21:25:28,839 - INFO: Created alert: <Alert info at None>
2025-03-27 21:25:31,159 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:31.157803'}
2025-03-27 21:25:31,160 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:25:31,160 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:31.157803'}
2025-03-27 21:25:31,161 - INFO: Created alert: <Alert info at None>
2025-03-27 21:25:39,205 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:39.203350'}
2025-03-27 21:25:39,205 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:25:39,206 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:39.203350'}
2025-03-27 21:25:39,206 - INFO: Created alert: <Alert info at None>
2025-03-27 21:25:41,101 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:41.100544'}
2025-03-27 21:25:41,102 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:25:41,103 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:41.100544'}
2025-03-27 21:25:41,103 - INFO: Created alert: <Alert info at None>
2025-03-27 21:25:49,944 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:49.941934'}
2025-03-27 21:25:49,945 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:25:49,946 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:49.941934'}
2025-03-27 21:25:49,947 - INFO: Created alert: <Alert info at None>
2025-03-27 21:25:52,584 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:52.538745'}
2025-03-27 21:25:52,625 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:25:52,700 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:25:52.538745'}
2025-03-27 21:25:52,814 - INFO: Created alert: <Alert info at None>
2025-03-27 21:26:01,232 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:01.229936'}
2025-03-27 21:26:01,233 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:26:01,234 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:01.229936'}
2025-03-27 21:26:01,235 - INFO: Created alert: <Alert info at None>
2025-03-27 21:26:03,049 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:03.047523'}
2025-03-27 21:26:03,049 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:26:03,050 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:03.047523'}
2025-03-27 21:26:03,051 - INFO: Created alert: <Alert info at None>
2025-03-27 21:26:12,866 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:12.861964'}
2025-03-27 21:26:12,867 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:26:12,869 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:12.861964'}
2025-03-27 21:26:12,872 - INFO: Created alert: <Alert info at None>
2025-03-27 21:26:14,147 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:14.145973'}
2025-03-27 21:26:14,148 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:26:14,148 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:14.145973'}
2025-03-27 21:26:14,149 - INFO: Created alert: <Alert info at None>
2025-03-27 21:26:22,828 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:22.823713'}
2025-03-27 21:26:22,829 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:26:22,830 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:22.823713'}
2025-03-27 21:26:22,831 - INFO: Created alert: <Alert info at None>
2025-03-27 21:26:24,612 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:24.610042'}
2025-03-27 21:26:24,613 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:26:24,614 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:24.610042'}
2025-03-27 21:26:24,615 - INFO: Created alert: <Alert info at None>
2025-03-27 21:26:34,271 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:34.269179'}
2025-03-27 21:26:34,271 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:26:34,272 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:34.269179'}
2025-03-27 21:26:34,273 - INFO: Created alert: <Alert info at None>
2025-03-27 21:26:35,036 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:35.034604'}
2025-03-27 21:26:35,037 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:26:35,037 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:35.034604'}
2025-03-27 21:26:35,038 - INFO: Created alert: <Alert info at None>
2025-03-27 21:26:44,716 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:44.713643'}
2025-03-27 21:26:44,717 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:26:44,717 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:44.713643'}
2025-03-27 21:26:44,718 - INFO: Created alert: <Alert info at None>
2025-03-27 21:26:45,625 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:45.623609'}
2025-03-27 21:26:45,626 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:26:45,627 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:45.623609'}
2025-03-27 21:26:45,629 - INFO: Created alert: <Alert info at None>
2025-03-27 21:26:55,883 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:55.880669'}
2025-03-27 21:26:55,884 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:26:55,884 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:55.880669'}
2025-03-27 21:26:55,885 - INFO: Created alert: <Alert info at None>
2025-03-27 21:26:57,127 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:57.125875'}
2025-03-27 21:26:57,128 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:26:57,128 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:26:57.125875'}
2025-03-27 21:26:57,129 - INFO: Created alert: <Alert info at None>
2025-03-27 21:27:08,000 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:07.998766'}
2025-03-27 21:27:08,001 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:27:08,002 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:07.998766'}
2025-03-27 21:27:08,003 - INFO: Created alert: <Alert info at None>
2025-03-27 21:27:08,023 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:08.021140'}
2025-03-27 21:27:08,024 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:27:08,024 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:08.021140'}
2025-03-27 21:27:08,025 - INFO: Created alert: <Alert info at None>
2025-03-27 21:27:18,971 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:18.968271'}
2025-03-27 21:27:18,972 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:27:18,973 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:18.968271'}
2025-03-27 21:27:18,974 - INFO: Created alert: <Alert info at None>
2025-03-27 21:27:19,737 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:19.735760'}
2025-03-27 21:27:19,738 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:27:19,738 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:19.735760'}
2025-03-27 21:27:19,739 - INFO: Created alert: <Alert info at None>
2025-03-27 21:27:29,189 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:29.187099'}
2025-03-27 21:27:29,190 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:27:29,191 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:29.187099'}
2025-03-27 21:27:29,192 - INFO: Created alert: <Alert info at None>
2025-03-27 21:27:30,671 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:30.669524'}
2025-03-27 21:27:30,671 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:27:30,672 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:30.669524'}
2025-03-27 21:27:30,673 - INFO: Created alert: <Alert info at None>
2025-03-27 21:27:40,401 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:40.399372'}
2025-03-27 21:27:40,402 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:27:40,403 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:40.399372'}
2025-03-27 21:27:40,404 - INFO: Created alert: <Alert info at None>
2025-03-27 21:27:42,407 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:42.405045'}
2025-03-27 21:27:42,408 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:27:42,410 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:42.405045'}
2025-03-27 21:27:42,411 - INFO: Created alert: <Alert info at None>
2025-03-27 21:27:53,908 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:53.906825'}
2025-03-27 21:27:53,909 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:27:53,910 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:53.906825'}
2025-03-27 21:27:53,910 - INFO: Created alert: <Alert info at None>
2025-03-27 21:27:56,964 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:56.962295'}
2025-03-27 21:27:56,965 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:27:56,965 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:27:56.962295'}
2025-03-27 21:27:56,966 - INFO: Created alert: <Alert info at None>
2025-03-27 21:28:04,840 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:04.838465'}
2025-03-27 21:28:04,841 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:28:04,842 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:04.838465'}
2025-03-27 21:28:04,842 - INFO: Created alert: <Alert info at None>
2025-03-27 21:28:06,692 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:06.689748'}
2025-03-27 21:28:06,693 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:28:06,693 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:06.689748'}
2025-03-27 21:28:06,694 - INFO: Created alert: <Alert info at None>
2025-03-27 21:28:15,927 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:15.924798'}
2025-03-27 21:28:15,927 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:28:15,928 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:15.924798'}
2025-03-27 21:28:15,929 - INFO: Created alert: <Alert info at None>
2025-03-27 21:28:17,224 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:17.222387'}
2025-03-27 21:28:17,224 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:28:17,225 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:17.222387'}
2025-03-27 21:28:17,226 - INFO: Created alert: <Alert info at None>
2025-03-27 21:28:27,028 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:27.023174'}
2025-03-27 21:28:27,029 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:28:27,030 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:27.023174'}
2025-03-27 21:28:27,030 - INFO: Created alert: <Alert info at None>
2025-03-27 21:28:28,205 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:28.203676'}
2025-03-27 21:28:28,206 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:28:28,207 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:28.203676'}
2025-03-27 21:28:28,208 - INFO: Created alert: <Alert info at None>
2025-03-27 21:28:38,585 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:38.583062'}
2025-03-27 21:28:38,585 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:28:38,586 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:38.583062'}
2025-03-27 21:28:38,587 - INFO: Created alert: <Alert info at None>
2025-03-27 21:28:41,418 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:41.416809'}
2025-03-27 21:28:41,419 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:28:41,420 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:41.416809'}
2025-03-27 21:28:41,421 - INFO: Created alert: <Alert info at None>
2025-03-27 21:28:49,856 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:49.854665'}
2025-03-27 21:28:49,857 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:28:49,857 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:49.854665'}
2025-03-27 21:28:49,858 - INFO: Created alert: <Alert info at None>
2025-03-27 21:28:52,659 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:52.657957'}
2025-03-27 21:28:52,660 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:28:52,660 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:28:52.657957'}
2025-03-27 21:28:52,661 - INFO: Created alert: <Alert info at None>
2025-03-27 21:29:00,118 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:00.114419'}
2025-03-27 21:29:00,118 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:29:00,119 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:00.114419'}
2025-03-27 21:29:00,120 - INFO: Created alert: <Alert info at None>
2025-03-27 21:29:03,252 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:03.250191'}
2025-03-27 21:29:03,253 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:29:03,253 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:03.250191'}
2025-03-27 21:29:03,254 - INFO: Created alert: <Alert info at None>
2025-03-27 21:29:10,692 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:10.689688'}
2025-03-27 21:29:10,694 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:29:10,695 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:10.689688'}
2025-03-27 21:29:10,695 - INFO: Created alert: <Alert info at None>
2025-03-27 21:29:13,564 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:13.562537'}
2025-03-27 21:29:13,564 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:29:13,565 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:13.562537'}
2025-03-27 21:29:13,566 - INFO: Created alert: <Alert info at None>
2025-03-27 21:29:21,263 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:21.261747'}
2025-03-27 21:29:21,264 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:29:21,265 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:21.261747'}
2025-03-27 21:29:21,265 - INFO: Created alert: <Alert info at None>
2025-03-27 21:29:24,309 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:24.307835'}
2025-03-27 21:29:24,310 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:29:24,310 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:24.307835'}
2025-03-27 21:29:24,311 - INFO: Created alert: <Alert info at None>
2025-03-27 21:29:30,877 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:30.875874'}
2025-03-27 21:29:30,878 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:29:30,879 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:30.875874'}
2025-03-27 21:29:30,880 - INFO: Created alert: <Alert info at None>
2025-03-27 21:29:34,989 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:34.987756'}
2025-03-27 21:29:34,990 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:29:34,991 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:34.987756'}
2025-03-27 21:29:34,992 - INFO: Created alert: <Alert info at None>
2025-03-27 21:29:41,863 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:41.861275'}
2025-03-27 21:29:41,864 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:29:41,864 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:41.861275'}
2025-03-27 21:29:41,865 - INFO: Created alert: <Alert info at None>
2025-03-27 21:29:45,490 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:45.488861'}
2025-03-27 21:29:45,491 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:29:45,491 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:45.488861'}
2025-03-27 21:29:45,492 - INFO: Created alert: <Alert info at None>
2025-03-27 21:29:52,784 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:52.781604'}
2025-03-27 21:29:52,784 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:29:52,785 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:52.781604'}
2025-03-27 21:29:52,786 - INFO: Created alert: <Alert info at None>
2025-03-27 21:29:55,682 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:55.678093'}
2025-03-27 21:29:55,683 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:29:55,684 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:29:55.678093'}
2025-03-27 21:29:55,684 - INFO: Created alert: <Alert info at None>
2025-03-27 21:30:03,834 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:03.833038'}
2025-03-27 21:30:03,835 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:30:03,836 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:03.833038'}
2025-03-27 21:30:03,836 - INFO: Created alert: <Alert info at None>
2025-03-27 21:30:06,347 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:06.345483'}
2025-03-27 21:30:06,348 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:30:06,348 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:06.345483'}
2025-03-27 21:30:06,349 - INFO: Created alert: <Alert info at None>
2025-03-27 21:30:15,501 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:15.499097'}
2025-03-27 21:30:15,502 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:30:15,503 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:15.499097'}
2025-03-27 21:30:15,503 - INFO: Created alert: <Alert info at None>
2025-03-27 21:30:17,623 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:17.621378'}
2025-03-27 21:30:17,624 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:30:17,624 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:17.621378'}
2025-03-27 21:30:17,625 - INFO: Created alert: <Alert info at None>
2025-03-27 21:30:25,648 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:25.647620'}
2025-03-27 21:30:25,649 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:30:25,650 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:25.647620'}
2025-03-27 21:30:25,650 - INFO: Created alert: <Alert info at None>
2025-03-27 21:30:27,424 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:27.422844'}
2025-03-27 21:30:27,425 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:30:27,426 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:27.422844'}
2025-03-27 21:30:27,426 - INFO: Created alert: <Alert info at None>
2025-03-27 21:30:36,492 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:36.490809'}
2025-03-27 21:30:36,493 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:30:36,494 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:36.490809'}
2025-03-27 21:30:36,494 - INFO: Created alert: <Alert info at None>
2025-03-27 21:30:37,439 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:37.437299'}
2025-03-27 21:30:37,440 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:30:37,440 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:37.437299'}
2025-03-27 21:30:37,441 - INFO: Created alert: <Alert info at None>
2025-03-27 21:30:47,428 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:47.426119'}
2025-03-27 21:30:47,429 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:30:47,430 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:47.426119'}
2025-03-27 21:30:47,431 - INFO: Created alert: <Alert info at None>
2025-03-27 21:30:48,497 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:48.496093'}
2025-03-27 21:30:48,498 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:30:48,499 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:48.496093'}
2025-03-27 21:30:48,499 - INFO: Created alert: <Alert info at None>
2025-03-27 21:30:57,914 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:57.913229'}
2025-03-27 21:30:57,915 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:30:57,916 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:57.913229'}
2025-03-27 21:30:57,916 - INFO: Created alert: <Alert info at None>
2025-03-27 21:30:58,951 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:58.950023'}
2025-03-27 21:30:58,952 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:30:58,952 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:30:58.950023'}
2025-03-27 21:30:58,953 - INFO: Created alert: <Alert info at None>
2025-03-27 21:31:12,649 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:31:12.646770'}
2025-03-27 21:31:12,650 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:31:12,651 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:31:12.646770'}
2025-03-27 21:31:12,652 - INFO: Created alert: <Alert info at None>
2025-03-27 21:31:13,088 - INFO: Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:31:13.085387'}
2025-03-27 21:31:13,089 - INFO: Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:31:13,089 - INFO: Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:31:13.085387'}
2025-03-27 21:31:13,090 - INFO: Created alert: <Alert info at None>
2025-03-27 21:31:20,987 - INFO:  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-27 21:31:21,511 - INFO:  * Restarting with stat
2025-03-27 21:37:42,457 - INFO - [main.py:368] - Database tables created successfully
2025-03-27 21:37:42,519 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 21:37:42,519 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-03-27 21:37:42,524 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 21:37:43,705 - INFO - [main.py:368] - Database tables created successfully
2025-03-27 21:37:43,747 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-27 21:37:43,765 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-27 21:37:47,425 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:37:47.424209'}
2025-03-27 21:37:47,455 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:37:47,456 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:37:47.424209'}
2025-03-27 21:37:47,456 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:37:47,623 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:37:47.622325'}
2025-03-27 21:37:47,625 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:37:47,626 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:37:47.622325'}
2025-03-27 21:37:47,627 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:37:57,829 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:37:57.827438'}
2025-03-27 21:37:57,830 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:37:57,831 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:37:57.827438'}
2025-03-27 21:37:57,832 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:37:58,263 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:37:58.261465'}
2025-03-27 21:37:58,264 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:37:58,264 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:37:58.261465'}
2025-03-27 21:37:58,265 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:37:58,879 - INFO - [_internal.py:97] - 127.0.0.1 - - [27/Mar/2025 21:37:58] "GET / HTTP/1.1" 200 -
2025-03-27 21:38:00,026 - INFO - [_internal.py:97] - 127.0.0.1 - - [27/Mar/2025 21:38:00] "[33mGET /api/system-status HTTP/1.1[0m" 404 -
2025-03-27 21:38:00,029 - ERROR - [main.py:356] - Error fetching current reading: The current Flask app is not registered with this 'SQLAlchemy' instance. Did you forget to call 'init_app', or did you create multiple 'SQLAlchemy' instances?
Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 344, in current_reading
    latest_reading = GasReading.query.order_by(GasReading.timestamp.desc()).first()
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\query.py", line 2759, in first
    return self.limit(1)._iter().first()  # type: ignore
           ~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\query.py", line 2858, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
        params,
        ^^^^^^^
        execution_options={"_sa_orm_load_options": self.load_options},
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2239, in _execute_internal
    bind = self.get_bind(**bind_arguments)
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\flask_sqlalchemy\session.py", line 53, in get_bind
    engines = self._db.engines
              ^^^^^^^^^^^^^^^^
  File "C:\Users\eugen\projects\Gas-Detection-App\.venv\Lib\site-packages\flask_sqlalchemy\extension.py", line 690, in engines
    raise RuntimeError(
    ...<3 lines>...
    )
RuntimeError: The current Flask app is not registered with this 'SQLAlchemy' instance. Did you forget to call 'init_app', or did you create multiple 'SQLAlchemy' instances?
2025-03-27 21:38:00,036 - INFO - [_internal.py:97] - 127.0.0.1 - - [27/Mar/2025 21:38:00] "[33mGET /api/alerts HTTP/1.1[0m" 404 -
2025-03-27 21:38:00,055 - INFO - [_internal.py:97] - 127.0.0.1 - - [27/Mar/2025 21:38:00] "[35m[1mGET /api/current-reading HTTP/1.1[0m" 500 -
2025-03-27 21:38:08,381 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:08.379867'}
2025-03-27 21:38:08,382 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:38:08,383 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:08.379867'}
2025-03-27 21:38:08,383 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:38:08,870 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:08.869221'}
2025-03-27 21:38:08,871 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:38:08,872 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:08.869221'}
2025-03-27 21:38:08,872 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:38:19,866 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:19.863850'}
2025-03-27 21:38:19,868 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:38:19,868 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:19.863850'}
2025-03-27 21:38:19,869 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:38:20,368 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:20.366058'}
2025-03-27 21:38:20,369 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:38:20,370 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:20.366058'}
2025-03-27 21:38:20,371 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:38:31,233 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:31.231909'}
2025-03-27 21:38:31,234 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:38:31,235 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:31.231909'}
2025-03-27 21:38:31,235 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:38:31,470 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:31.468293'}
2025-03-27 21:38:31,471 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:38:31,472 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:31.468293'}
2025-03-27 21:38:31,473 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:38:41,238 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:41.235090'}
2025-03-27 21:38:41,239 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:38:41,240 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:41.235090'}
2025-03-27 21:38:41,241 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:38:42,026 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:42.024232'}
2025-03-27 21:38:42,027 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:38:42,028 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:42.024232'}
2025-03-27 21:38:42,028 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:38:51,552 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:51.550716'}
2025-03-27 21:38:51,553 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:38:51,553 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:51.550716'}
2025-03-27 21:38:51,554 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:38:51,889 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:51.888182'}
2025-03-27 21:38:51,890 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:38:51,891 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:38:51.888182'}
2025-03-27 21:38:51,891 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:39:02,478 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:02.475756'}
2025-03-27 21:39:02,479 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:39:02,480 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:02.475756'}
2025-03-27 21:39:02,480 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:39:02,641 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:02.638312'}
2025-03-27 21:39:02,641 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:39:02,642 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:02.638312'}
2025-03-27 21:39:02,643 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:39:14,383 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:14.381280'}
2025-03-27 21:39:14,384 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:39:14,385 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:14.381280'}
2025-03-27 21:39:14,385 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:39:15,302 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:15.299843'}
2025-03-27 21:39:15,303 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:39:15,304 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:15.299843'}
2025-03-27 21:39:15,306 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:39:27,163 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:27.159581'}
2025-03-27 21:39:27,164 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:39:27,165 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:27.159581'}
2025-03-27 21:39:27,165 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:39:28,046 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:28.044910'}
2025-03-27 21:39:28,047 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:39:28,048 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:28.044910'}
2025-03-27 21:39:28,048 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:39:38,463 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:38.462252'}
2025-03-27 21:39:38,464 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:39:38,465 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:38.462252'}
2025-03-27 21:39:38,465 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:39:39,751 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:39.747719'}
2025-03-27 21:39:39,752 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:39:39,753 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:39.747719'}
2025-03-27 21:39:39,754 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:39:42,721 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-27 21:39:43,505 - INFO - [main.py:327] - Data processing thread shutting down...
2025-03-27 21:39:43,505 - INFO - [main.py:330] - Data processing thread terminated
2025-03-27 21:39:43,507 - INFO - [main.py:396] - Application shutdown complete
2025-03-27 21:39:43,840 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 21:39:51,166 - INFO - [gas_readings.py:84] - Creating gas reading from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:51.164088'}
2025-03-27 21:39:51,167 - INFO - [gas_readings.py:94] - Created gas reading: <GasReading 0.004926626570522785 PPM at None>
2025-03-27 21:39:51,168 - INFO - [gas_readings.py:122] - Creating alert from data: {'deviceStatus': {'value': '🟢 Online', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'errorStatus': {'value': '⚠️ No GSM Response', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasAlert': {'value': 'Gas levels normal', 'last_updated': '2025-03-27T14:44:24.977Z'}, 'gasLevel': {'value': 0.004926626570522785, 'last_updated': '2025-03-27T14:52:55.788Z'}, 'timestamp': '2025-03-27T21:39:51.164088'}
2025-03-27 21:39:51,169 - INFO - [gas_readings.py:131] - Created alert: <Alert info at None>
2025-03-27 21:39:55,970 - INFO - [main.py:396] - Application shutdown complete
2025-03-27 21:42:38,217 - INFO - [main.py:365] - Database tables created successfully
2025-03-27 21:42:38,266 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 21:42:38,267 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-03-27 21:42:38,269 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 21:42:39,458 - INFO - [main.py:365] - Database tables created successfully
2025-03-27 21:42:39,504 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-27 21:42:39,524 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-27 21:42:42,186 - ERROR - [main.py:204] - Unexpected error in property retrieval: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'
2025-03-27 21:42:42,219 - ERROR - [main.py:205] - Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 167, in get_latest_property_values
    properties_url = f"https://api2.arduino.cc/iot/v1/things/{self.get_thing_id()}/properties"
                                                              ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 229, in get_thing_id
    if thing.get('name') == self.thing_name:
                            ^^^^^^^^^^^^^^^
AttributeError: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'

2025-03-27 21:42:44,727 - ERROR - [main.py:204] - Unexpected error in property retrieval: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'
2025-03-27 21:42:44,729 - ERROR - [main.py:205] - Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 167, in get_latest_property_values
    properties_url = f"https://api2.arduino.cc/iot/v1/things/{self.get_thing_id()}/properties"
                                                              ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 229, in get_thing_id
    if thing.get('name') == self.thing_name:
                            ^^^^^^^^^^^^^^^
AttributeError: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'

2025-03-27 21:42:51,336 - ERROR - [main.py:204] - Unexpected error in property retrieval: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'
2025-03-27 21:42:51,339 - ERROR - [main.py:205] - Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 167, in get_latest_property_values
    properties_url = f"https://api2.arduino.cc/iot/v1/things/{self.get_thing_id()}/properties"
                                                              ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 229, in get_thing_id
    if thing.get('name') == self.thing_name:
                            ^^^^^^^^^^^^^^^
AttributeError: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'

2025-03-27 21:42:53,621 - ERROR - [main.py:204] - Unexpected error in property retrieval: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'
2025-03-27 21:42:53,623 - ERROR - [main.py:205] - Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 167, in get_latest_property_values
    properties_url = f"https://api2.arduino.cc/iot/v1/things/{self.get_thing_id()}/properties"
                                                              ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 229, in get_thing_id
    if thing.get('name') == self.thing_name:
                            ^^^^^^^^^^^^^^^
AttributeError: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'

2025-03-27 21:42:59,756 - ERROR - [main.py:204] - Unexpected error in property retrieval: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'
2025-03-27 21:42:59,758 - ERROR - [main.py:205] - Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 167, in get_latest_property_values
    properties_url = f"https://api2.arduino.cc/iot/v1/things/{self.get_thing_id()}/properties"
                                                              ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 229, in get_thing_id
    if thing.get('name') == self.thing_name:
                            ^^^^^^^^^^^^^^^
AttributeError: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'

2025-03-27 21:43:01,525 - ERROR - [main.py:204] - Unexpected error in property retrieval: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'
2025-03-27 21:43:01,528 - ERROR - [main.py:205] - Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 167, in get_latest_property_values
    properties_url = f"https://api2.arduino.cc/iot/v1/things/{self.get_thing_id()}/properties"
                                                              ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 229, in get_thing_id
    if thing.get('name') == self.thing_name:
                            ^^^^^^^^^^^^^^^
AttributeError: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'

2025-03-27 21:43:07,900 - ERROR - [main.py:204] - Unexpected error in property retrieval: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'
2025-03-27 21:43:07,902 - ERROR - [main.py:205] - Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 167, in get_latest_property_values
    properties_url = f"https://api2.arduino.cc/iot/v1/things/{self.get_thing_id()}/properties"
                                                              ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 229, in get_thing_id
    if thing.get('name') == self.thing_name:
                            ^^^^^^^^^^^^^^^
AttributeError: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'

2025-03-27 21:43:09,518 - ERROR - [main.py:204] - Unexpected error in property retrieval: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'
2025-03-27 21:43:09,520 - ERROR - [main.py:205] - Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 167, in get_latest_property_values
    properties_url = f"https://api2.arduino.cc/iot/v1/things/{self.get_thing_id()}/properties"
                                                              ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 229, in get_thing_id
    if thing.get('name') == self.thing_name:
                            ^^^^^^^^^^^^^^^
AttributeError: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'

2025-03-27 21:43:10,740 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-27 21:43:14,523 - INFO - [main.py:324] - Data processing thread shutting down...
2025-03-27 21:43:14,523 - INFO - [main.py:327] - Data processing thread terminated
2025-03-27 21:43:14,524 - INFO - [main.py:393] - Application shutdown complete
2025-03-27 21:43:14,805 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 21:43:17,370 - INFO - [main.py:365] - Database tables created successfully
2025-03-27 21:43:17,424 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-27 21:43:17,446 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-27 21:43:17,500 - ERROR - [main.py:204] - Unexpected error in property retrieval: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'
2025-03-27 21:43:17,503 - ERROR - [main.py:205] - Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 167, in get_latest_property_values
    properties_url = f"https://api2.arduino.cc/iot/v1/things/{self.get_thing_id()}/properties"
                                                              ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 229, in get_thing_id
    if thing.get('name') == self.thing_name:
                            ^^^^^^^^^^^^^^^
AttributeError: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'

2025-03-27 21:43:20,995 - ERROR - [main.py:232] - No thing found with name None
2025-03-27 21:43:22,038 - ERROR - [main.py:201] - Property retrieval error: 400 Client Error: Bad Request for url: https://api2.arduino.cc/iot/v1/things/None/properties
2025-03-27 21:43:25,450 - ERROR - [main.py:204] - Unexpected error in property retrieval: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'
2025-03-27 21:43:25,452 - ERROR - [main.py:205] - Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 167, in get_latest_property_values
    properties_url = f"https://api2.arduino.cc/iot/v1/things/{self.get_thing_id()}/properties"
                                                              ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 229, in get_thing_id
    if thing.get('name') == self.thing_name:
                            ^^^^^^^^^^^^^^^
AttributeError: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'

2025-03-27 21:43:28,816 - INFO - [main.py:271] - Received signal 2. Initiating graceful shutdown...
2025-03-27 21:43:29,904 - ERROR - [main.py:232] - No thing found with name None
2025-03-27 21:43:31,112 - ERROR - [main.py:201] - Property retrieval error: 400 Client Error: Bad Request for url: https://api2.arduino.cc/iot/v1/things/None/properties
2025-03-27 21:43:33,444 - ERROR - [main.py:204] - Unexpected error in property retrieval: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'
2025-03-27 21:43:33,446 - ERROR - [main.py:205] - Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 167, in get_latest_property_values
    properties_url = f"https://api2.arduino.cc/iot/v1/things/{self.get_thing_id()}/properties"
                                                              ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 229, in get_thing_id
    if thing.get('name') == self.thing_name:
                            ^^^^^^^^^^^^^^^
AttributeError: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'

2025-03-27 21:43:35,609 - INFO - [main.py:271] - Received signal 2. Initiating graceful shutdown...
2025-03-27 21:43:36,115 - INFO - [main.py:324] - Data processing thread shutting down...
2025-03-27 21:43:36,115 - INFO - [main.py:327] - Data processing thread terminated
2025-03-27 21:43:42,335 - ERROR - [main.py:204] - Unexpected error in property retrieval: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'
2025-03-27 21:43:42,337 - ERROR - [main.py:205] - Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 167, in get_latest_property_values
    properties_url = f"https://api2.arduino.cc/iot/v1/things/{self.get_thing_id()}/properties"
                                                              ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 229, in get_thing_id
    if thing.get('name') == self.thing_name:
                            ^^^^^^^^^^^^^^^
AttributeError: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'

2025-03-27 21:43:44,757 - INFO - [main.py:271] - Received signal 2. Initiating graceful shutdown...
2025-03-27 21:43:45,344 - INFO - [main.py:271] - Received signal 2. Initiating graceful shutdown...
2025-03-27 21:43:45,566 - INFO - [main.py:271] - Received signal 2. Initiating graceful shutdown...
2025-03-27 21:43:45,679 - INFO - [main.py:271] - Received signal 2. Initiating graceful shutdown...
2025-03-27 21:43:45,881 - INFO - [main.py:271] - Received signal 2. Initiating graceful shutdown...
2025-03-27 21:43:46,164 - INFO - [main.py:271] - Received signal 2. Initiating graceful shutdown...
2025-03-27 21:43:46,530 - INFO - [main.py:271] - Received signal 2. Initiating graceful shutdown...
2025-03-27 21:43:46,725 - INFO - [main.py:271] - Received signal 2. Initiating graceful shutdown...
2025-03-27 21:43:46,926 - INFO - [main.py:271] - Received signal 2. Initiating graceful shutdown...
2025-03-27 21:43:47,128 - INFO - [main.py:271] - Received signal 2. Initiating graceful shutdown...
2025-03-27 21:43:47,273 - INFO - [main.py:271] - Received signal 2. Initiating graceful shutdown...
2025-03-27 21:43:51,166 - ERROR - [main.py:204] - Unexpected error in property retrieval: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'
2025-03-27 21:43:51,168 - ERROR - [main.py:205] - Traceback (most recent call last):
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 167, in get_latest_property_values
    properties_url = f"https://api2.arduino.cc/iot/v1/things/{self.get_thing_id()}/properties"
                                                              ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\eugen\projects\Gas-Detection-App\main.py", line 229, in get_thing_id
    if thing.get('name') == self.thing_name:
                            ^^^^^^^^^^^^^^^
AttributeError: 'ArduinoIoTDataRetriever' object has no attribute 'thing_name'

2025-03-27 22:08:33,189 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 22:08:33,190 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-03-27 22:08:33,193 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 22:08:34,758 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-27 22:08:34,785 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-27 22:08:36,325 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:08:37,588 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:08:44,118 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:08:45,478 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:08:51,469 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:08:54,103 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:08:59,143 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:09:01,723 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:09:06,430 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:09:08,775 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:09:13,932 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:09:16,676 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:09:21,445 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:09:25,010 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:09:30,210 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:09:32,817 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:09:38,741 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:09:40,949 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:09:47,339 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:09:49,233 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:09:56,042 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:09:57,701 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:10:04,812 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:10:05,912 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:10:13,123 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:10:13,288 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:10:21,850 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:10:21,900 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:10:29,965 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:10:30,629 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:10:38,456 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:10:38,558 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:10:47,000 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:10:47,459 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:10:55,590 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:10:55,891 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:11:03,814 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:11:04,146 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\integrations\\arduino_cloud_integration.py', reloading
2025-03-27 22:11:04,537 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 22:11:07,566 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-27 22:11:07,593 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-27 22:11:10,629 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:11:12,052 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:11:16,048 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\integrations\\arduino_cloud_integration.py', reloading
2025-03-27 22:11:16,479 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 22:11:18,186 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-27 22:11:18,205 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-27 22:11:19,543 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:11:21,083 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:11:27,210 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:11:29,432 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:11:35,197 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:11:37,640 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:48:42,980 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 22:48:42,980 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-03-27 22:48:42,985 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 22:48:44,193 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-27 22:48:44,210 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-27 22:48:45,727 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:48:46,432 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:48:52,759 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:48:53,095 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:48:59,948 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:49:00,840 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:49:07,598 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:49:07,992 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:49:14,637 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:49:15,542 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:49:22,128 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:49:22,607 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:49:29,411 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:49:29,779 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:49:36,906 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:49:37,280 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:49:44,369 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:49:44,388 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:49:51,740 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:49:52,066 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:49:58,774 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:49:59,929 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:50:05,788 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:50:07,035 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:50:13,390 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:50:14,660 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:50:20,974 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:50:21,826 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:50:28,061 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:50:29,274 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:50:35,929 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:50:36,525 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:50:43,408 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:50:43,724 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:50:50,998 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:50:51,184 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:50:58,291 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:50:58,505 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:51:05,715 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:51:06,998 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:51:13,462 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:51:14,122 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:51:20,488 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:51:21,551 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:51:27,785 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:51:29,495 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:51:35,535 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:51:36,262 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:51:42,641 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:51:43,439 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:51:49,988 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:51:50,627 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:51:58,052 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:51:58,202 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:52:05,823 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:52:06,384 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:52:13,693 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:52:14,026 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:52:21,975 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:52:21,996 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:52:30,552 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:52:30,876 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:52:38,827 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:52:39,651 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:52:46,594 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:52:46,946 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:52:54,694 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:52:55,016 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:53:02,880 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:53:03,648 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:53:10,596 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:53:11,563 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:53:18,687 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:53:19,100 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:53:26,786 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:53:26,813 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:53:34,945 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:53:35,359 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:53:42,164 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:53:43,191 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:53:48,844 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\data_simulator.py', reloading
2025-03-27 22:53:49,207 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 22:53:51,324 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:53:51,646 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-27 22:53:51,666 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-27 22:53:53,800 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:53:58,815 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:54:01,688 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:54:06,272 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:54:09,266 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:54:13,768 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:54:17,334 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:54:20,769 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:54:24,478 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:54:28,591 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:54:32,043 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:54:35,699 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:54:40,063 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:54:42,916 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:54:47,774 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:54:50,323 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:54:55,617 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:54:57,834 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:55:03,852 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:55:05,918 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:55:12,324 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:55:14,113 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:55:20,886 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:55:22,831 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:55:29,121 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:55:30,943 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:55:37,729 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:55:39,284 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:55:46,172 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:55:47,302 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:55:54,116 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:55:55,874 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:56:02,689 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:56:03,587 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:56:11,051 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:56:11,893 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:56:19,554 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:56:20,003 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:56:28,082 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:56:28,130 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:56:36,475 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:56:36,811 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:56:44,432 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:56:44,604 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:56:52,820 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:56:53,058 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:57:00,745 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:57:00,763 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:57:08,905 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:57:09,005 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:57:16,986 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:57:17,220 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:57:25,038 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:57:25,355 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:57:32,599 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:57:33,047 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:57:40,669 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:57:41,075 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:57:48,838 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:57:49,349 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:57:56,624 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:57:57,172 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:58:04,369 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:58:04,618 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:58:12,224 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:58:12,765 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:58:19,864 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:58:20,324 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:58:27,687 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:58:28,215 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:58:35,497 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:58:36,167 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:58:43,314 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:58:44,454 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:58:51,302 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:58:52,649 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:58:59,584 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:58:59,936 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:59:08,016 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:59:08,099 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:59:16,149 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:59:17,116 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:59:23,810 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:59:24,539 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:59:31,751 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:59:31,920 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:59:40,009 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:59:40,603 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:59:48,836 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:59:49,157 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:59:53,947 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-27 22:59:54,179 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 22:59:56,064 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-27 22:59:56,089 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-27 22:59:58,026 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 22:59:59,005 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:00:05,199 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:00:06,577 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:00:11,606 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\data_simulator.py', reloading
2025-03-27 23:00:11,808 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 23:00:12,765 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:00:13,840 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-27 23:00:13,866 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-27 23:00:16,005 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:00:17,078 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-27 23:00:17,277 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 23:00:18,715 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-27 23:00:18,745 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-27 23:00:19,866 - ERROR - [main.py:114] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:00:21,491 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:01:03,342 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 23:01:03,343 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-03-27 23:01:03,344 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 23:01:04,666 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-27 23:01:04,690 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-27 23:01:06,031 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:01:07,220 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:01:13,591 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:01:14,761 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:01:21,282 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:01:22,319 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:01:28,787 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:01:29,443 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:01:36,412 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:01:36,968 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:01:43,970 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:01:44,021 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:01:51,926 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:01:52,473 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:01:59,349 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:01:59,995 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:02:07,141 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:02:08,319 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:02:14,417 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:02:15,828 - ERROR - [main.py:117] - Reading retrieval error: 404 Client Error: Not Found for url: https://api2.arduino.cc/iot/v1/things/df2c6374-c3d2-4709-b5cc-3c9094e7f090/properties
2025-03-27 23:02:39,196 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 23:02:39,196 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-03-27 23:02:39,198 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 23:02:40,402 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-27 23:02:40,416 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-27 23:02:42,152 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:02:42,728 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:02:49,124 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:02:50,198 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:02:56,766 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:02:57,399 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:03:04,519 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:03:05,134 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:03:12,237 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:03:12,619 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:03:20,424 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:03:21,179 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:03:23,965 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\data_simulator.py', reloading
2025-03-27 23:03:24,174 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 23:03:25,679 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-27 23:03:25,704 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-27 23:03:26,863 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\data_simulator.py', reloading
2025-03-27 23:03:27,071 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 23:03:27,854 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:03:28,626 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-27 23:03:28,646 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-27 23:03:31,026 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:03:35,257 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:03:38,781 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:03:42,376 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:03:46,017 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:03:50,128 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:03:53,252 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:03:56,863 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:06:07,978 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 23:06:07,978 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-03-27 23:06:07,981 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 23:06:09,369 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-27 23:06:09,387 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-27 23:06:10,325 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:06:11,942 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:07:40,061 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-27 23:07:40,062 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-03-27 23:07:40,064 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-27 23:07:41,493 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-27 23:07:41,517 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-27 23:07:42,938 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:07:44,256 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:07:50,433 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:07:51,626 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:07:57,673 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:07:59,095 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:08:05,667 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:08:06,697 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:08:13,192 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:08:14,454 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:08:20,180 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-27 23:08:22,093 - ERROR - [main.py:357] - Database processing error: name 'GasReading' is not defined
2025-03-28 00:26:42,717 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 00:26:42,753 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 00:26:46,140 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:26:46,182 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:26:46,200 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:27:08,964 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:27:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:27:49,958 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:27:49,976 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:27:49,979 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:28:08,922 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:28:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:28:55,906 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:28:55,950 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:28:55,956 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:29:08,622 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:29:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:29:44,498 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-28 00:29:48,660 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 00:29:48,691 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 00:29:51,713 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:29:51,758 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:29:51,775 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:30:09,038 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:30:09] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:30:38,510 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:30:38] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:30:41,922 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:30:41] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:30:51,916 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:30:51] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:30:55,616 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:30:55,662 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:30:55,667 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:31:01,913 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:31:01] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:31:12,011 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:31:12] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:31:21,926 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:31:21] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:31:28,379 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-28 00:32:05,766 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-28 00:32:05,767 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-03-28 00:32:05,770 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 00:32:07,609 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 00:32:07,643 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 00:32:08,951 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:32:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:32:09,430 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:32:09,461 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:32:09,476 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:32:11,495 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:32:11,518 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:32:11,527 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:32:20,661 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:32:20] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:32:23,298 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:32:23] "GET / HTTP/1.1" 200 -
2025-03-28 00:32:23,624 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:32:23] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:32:33,937 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:32:33] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:32:44,938 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:32:44] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:32:54,917 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:32:54] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:33:04,920 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:33:04] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:33:14,671 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:33:14,693 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:33:14,697 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:33:14,915 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:33:14] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:33:16,930 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:33:16,956 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:33:16,962 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:33:24,908 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:33:24] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:33:33,620 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:33:33] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:33:44,925 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:33:44] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:33:54,158 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:33:54] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:34:03,938 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:34:03] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:34:14,608 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:34:14] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:34:19,120 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:34:19,339 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:34:19,342 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:34:21,844 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:34:21,860 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:34:21,863 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:34:24,909 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:34:24] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:34:34,609 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:34:34] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:34:44,913 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:34:44] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:34:54,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:34:54] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:35:08,936 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:35:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:35:25,128 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:35:25,146 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:35:25,150 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:35:27,131 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:35:27,152 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:35:27,157 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:35:55,147 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:35:55] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:35:57,246 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:35:57] "GET / HTTP/1.1" 200 -
2025-03-28 00:35:57,614 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:35:57] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:35:57,636 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:35:57] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:35:57,639 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:35:57] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:36:02,642 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:02] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:36:07,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:07] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:36:07,606 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:07] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:36:12,652 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:12] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:36:17,593 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:17] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:36:17,594 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:17] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:36:22,593 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:22] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:36:29,194 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:29] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:36:29,502 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:29] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:36:37,221 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:36:37,254 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:36:37,264 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:36:37,629 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:37] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:36:39,171 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:36:39,194 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:36:39,212 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:36:40,697 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:36:40,712 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:36:40,739 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:40] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:36:40,771 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:40] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:36:40,811 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:40] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:36:42,611 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:42] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:36:47,699 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:47] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:36:47,707 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:47] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:36:52,674 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:52] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:36:57,663 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:57] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:36:57,671 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:57] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:36:57,929 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:36:57] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:37:03,584 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:03] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:37:07,639 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:07] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:37:07,793 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:07] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:37:12,897 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:12] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:37:17,627 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:17] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:37:17,632 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:17] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:37:22,608 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:22] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:37:27,611 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:27] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:37:27,618 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:27] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:37:27,624 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:27] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:37:32,618 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:32] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:37:37,665 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:37] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:37:37,675 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:37] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:37:44,517 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:37:44,545 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:37:44,554 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:37:44,875 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:37:44,989 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:37:45,007 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:37:47,189 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:37:47,207 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:37:47,213 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:47] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:37:47,606 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:47] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:37:47,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:47] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:37:52,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:52] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:37:57,640 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:57] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:37:57,643 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:57] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:37:57,655 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:37:57] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:38:02,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:38:02] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:38:07,614 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:38:07] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:38:07,616 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:38:07] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:38:49,723 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:38:49,748 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:38:49,754 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:38:50,257 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:38:50,308 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:38:50,320 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:39:08,657 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:39:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:39:08,659 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:39:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:39:08,670 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:39:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:39:53,845 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:39:53,862 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:39:53,866 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:39:54,644 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:39:54,662 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:39:54,666 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:40:08,657 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:40:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:40:08,660 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:40:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:40:08,667 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:40:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:40:48,150 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:40:48] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:40:48,152 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:40:48] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:40:48,161 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:40:48] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:40:52,592 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:40:52] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:40:57,633 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:40:57] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:40:57,636 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:40:57] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:40:59,462 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:40:59,477 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:40:59,482 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:40:59,700 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:40:59,727 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:40:59,736 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:41:02,437 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:41:02,461 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:41:02,467 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:02] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:41:02,594 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:02] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:41:07,614 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:07] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:41:07,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:07] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:41:12,592 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:12] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:41:17,597 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:17] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:41:17,600 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:17] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:41:22,588 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:22] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:41:27,622 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:27] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:41:27,625 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:27] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:41:27,634 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:27] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:41:32,588 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:32] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:41:37,600 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:37] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:41:37,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:37] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:41:42,594 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:42] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:41:47,598 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:47] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:41:47,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:47] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:41:52,597 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:52] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:41:57,600 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:57] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:41:57,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:57] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:41:57,608 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:41:57] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:42:04,625 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:42:04,642 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:42:04,645 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:42:05,123 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:42:05,141 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:42:05,145 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:42:06,543 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:42:06,565 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:42:06,570 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:06] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:42:07,592 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:07] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:42:07,594 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:07] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:42:12,589 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:12] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:42:17,594 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:17] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:42:17,595 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:17] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:42:22,600 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:22] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:42:27,625 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:27] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:42:27,629 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:27] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:42:27,641 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:27] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:42:32,592 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:32] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:42:37,599 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:37] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:42:37,637 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:37] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:42:42,593 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:42] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:42:47,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:47] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:42:47,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:47] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:42:52,606 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:52] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:42:57,613 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:57] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:42:57,617 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:57] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:42:57,623 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:42:57] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:43:02,608 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:43:02] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:43:07,609 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:43:07] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:43:09,170 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:43:09,185 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:43:09,188 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:43:09,753 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:43:09,831 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:43:09,852 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:43:12,889 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:43:12,907 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:43:12,915 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:43:12] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:43:12,943 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:43:12] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:43:17,622 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:43:17] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:43:17,623 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:43:17] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:43:22,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:43:22] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:43:27,621 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:43:27] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:43:27,626 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:43:27] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:43:27,628 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:43:27] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:43:32,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:43:32] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:43:37,606 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:43:37] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:43:37,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:43:37] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:43:42,635 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:43:42] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:43:47,608 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:43:47] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:43:47,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:43:47] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:44:08,613 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:44:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:44:08,623 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:44:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:44:08,631 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:44:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:44:13,408 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:44:13,452 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:44:13,456 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:44:13,714 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:44:13,759 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:44:13,763 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:45:08,636 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:45:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:45:08,644 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:45:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:45:08,659 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:45:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:45:17,481 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:45:17,502 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:45:17,506 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:45:17,618 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:45:17,635 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:45:17,639 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:46:08,630 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:46:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:46:08,634 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:46:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:46:08,643 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:46:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:46:20,552 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:46:20,568 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:46:20,571 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:46:21,233 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:46:21,249 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:46:21,253 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:47:08,658 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:47:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:47:08,680 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:47:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:47:08,705 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:47:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:47:24,400 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:47:24,435 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:47:24,438 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:47:24,506 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:47:24,551 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:47:24,561 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:48:08,661 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:48:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:48:08,686 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:48:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:48:08,702 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:48:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:48:27,705 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:48:27,732 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:48:27,739 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:48:28,187 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:48:28,216 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:48:28,221 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:49:08,663 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:49:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:49:08,667 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:49:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:49:08,685 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:49:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:49:32,180 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:49:32,204 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:49:32,210 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:49:32,386 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:49:32,411 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:49:32,416 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:50:08,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:50:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:50:08,621 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:50:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:50:08,629 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:50:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:50:39,608 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-28 00:50:39,609 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-03-28 00:50:39,614 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 00:50:41,487 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 00:50:41,528 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 00:50:43,246 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:50:43,273 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:50:43,284 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:50:44,615 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:50:44,640 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:50:44,652 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:51:07,161 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:07] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:51:07,179 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:07] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:51:07,199 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:07] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:51:07,618 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:07] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:51:09,621 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:09] "GET / HTTP/1.1" 200 -
2025-03-28 00:51:09,873 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:09] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:51:09,878 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:09] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:51:09,881 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:09] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:51:14,875 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:14] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:51:19,878 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:19] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:51:19,881 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:19] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:51:24,877 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:24] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:51:29,890 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:29] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:51:29,894 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:29] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:51:35,621 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:35] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:51:40,629 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:40] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:51:40,632 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:40] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:51:40,643 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:40] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:51:47,240 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:51:47,259 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:51:47,263 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:51:47,959 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:51:48,004 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:51:48,008 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:51:49,194 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:51:49,218 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:51:49,226 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:49] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:51:50,627 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:50] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:51:50,631 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:50] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:51:55,609 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:51:55] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:52:00,628 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:52:00] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:52:00,631 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:52:00] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:52:05,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:52:05] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:52:10,606 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:52:10] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:52:10,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:52:10] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:52:10,612 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:52:10] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:52:15,613 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:52:15] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:52:20,608 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:52:20] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:52:20,616 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:52:20] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:52:25,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:52:25] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:52:40,623 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:52:40] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:52:50,723 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:52:50,757 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:52:50,760 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:52:52,982 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:52:53,004 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:52:53,012 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:53:01,189 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:01] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:53:01,201 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:01] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:53:04,874 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:04] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:53:05,134 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:05] "GET / HTTP/1.1" 200 -
2025-03-28 00:53:05,519 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:05] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:53:05,522 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:05] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:53:05,543 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:05] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:53:10,476 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:10] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:53:15,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:15] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:53:15,611 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:15] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:53:20,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:20] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:53:25,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:25] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:53:25,617 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:25] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:53:30,613 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:30] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:53:35,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:35] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:53:35,623 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:35] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:53:35,626 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:35] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:53:40,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:40] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:53:45,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:45] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:53:45,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:45] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:53:50,614 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:50] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:53:53,469 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:53:53,483 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:53:53,486 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:53:55,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:55] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:53:55,608 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:53:55] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:53:55,969 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:53:55,993 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:53:56,000 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:54:00,613 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:54:00] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:54:05,614 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:54:05] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:54:05,630 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:54:05] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:54:05,656 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:54:05] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:54:10,603 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:54:10] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:54:35,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:54:35] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:54:58,648 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:54:58,693 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:54:58,698 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:55:00,368 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:55:00,411 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:55:00,415 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:55:05,611 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:05] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:55:08,626 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:55:08,643 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:55:18,382 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:18] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:55:18,392 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:18] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:55:20,626 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:20] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:55:25,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:25] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:55:25,608 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:25] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:55:30,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:30] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:55:35,614 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:35] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:55:35,621 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:35] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:55:35,628 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:35] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:55:40,691 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:40] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:55:45,843 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:45] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:55:45,849 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:45] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:55:50,609 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:50] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:55:55,624 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:55] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:55:55,627 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:55:55] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:56:01,653 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:56:01,699 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:56:01,706 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:56:03,459 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:56:03,475 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:56:03,477 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:56:03] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:56:03,929 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:56:03,944 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:56:03,948 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:56:05,632 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:56:05] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:56:05,635 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:56:05] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:56:05,647 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:56:05] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:56:10,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:56:10] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:56:15,616 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:56:15] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:56:15,621 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:56:15] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:57:06,422 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:57:06,454 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:57:06,457 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:57:08,066 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:57:08,118 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:57:08,125 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:57:08,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:57:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:57:08,622 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:57:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:57:08,639 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:57:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:57:48,206 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:57:48] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:57:48,207 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:57:48] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:57:48,248 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:57:48] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:57:50,024 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:57:50] "GET / HTTP/1.1" 200 -
2025-03-28 00:57:50,315 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:57:50] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:57:50,344 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:57:50] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:57:50,345 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:57:50] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:57:55,314 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:57:55] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:58:00,309 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:00] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:58:00,311 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:00] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:58:05,618 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:05] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:58:10,310 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:10] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:58:11,724 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:58:11,741 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:58:11,744 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:58:12,475 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:58:12,491 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:58:12,495 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:58:14,550 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:58:14,592 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:58:14,596 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:14] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:58:15,311 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:15] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:58:20,312 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:20] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:58:20,317 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:20] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:58:20,326 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:20] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:58:25,304 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:25] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:58:30,315 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:30] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:58:30,317 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:30] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:58:35,313 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:35] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:58:40,319 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:40] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:58:40,322 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:40] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:58:45,313 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:45] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:58:50,325 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:50] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:58:50,338 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:50] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:58:50,369 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:50] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:58:55,613 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:58:55] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:59:00,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:59:00] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:59:00,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:59:00] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:59:05,608 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:59:05] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:59:10,618 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:59:10] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:59:10,619 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:59:10] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:59:16,410 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:59:16,519 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:59:16,562 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:59:16,569 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:59:16,693 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:59:16,697 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 00:59:20,060 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 00:59:20,079 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 00:59:20,083 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:59:20] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:59:20,606 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:59:20] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:59:20,612 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:59:20] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:59:20,617 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:59:20] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 00:59:25,611 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:59:25] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:59:30,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:59:30] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:59:30,619 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:59:30] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:59:35,618 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:59:35] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:59:40,614 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:59:40] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:59:40,625 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:59:40] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 00:59:45,616 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:59:45] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 00:59:50,619 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 00:59:50] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:00:08,634 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:00:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:00:08,638 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:00:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:00:21,911 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:00:21,965 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:00:21,972 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:00:22,247 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:00:22,272 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:00:22,277 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:00:29,938 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:00:29] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:00:29,947 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:00:29] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:00:29,961 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:00:29] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:00:30,742 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:00:30] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:00:35,609 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:00:35] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:00:40,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:00:40] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:00:40,613 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:00:40] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:00:45,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:00:45] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:00:50,627 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:00:50] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:00:50,629 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:00:50] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:00:50,642 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:00:50] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:00:55,614 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:00:55] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:01:00,620 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:01:00] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:01:00,623 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:01:00] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:01:05,617 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:01:05] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:01:10,616 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:01:10] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:01:10,619 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:01:10] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:01:15,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:01:15] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:01:20,612 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:01:20] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:01:20,618 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:01:20] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:01:20,629 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:01:20] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:01:27,157 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:01:27,175 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:01:27,179 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:01:27,719 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:01:27,752 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:01:27,760 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:01:30,617 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:01:30] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:01:30,627 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:01:30,651 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:01:30,657 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:01:30] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:01:30,683 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:01:30] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:01:35,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:01:35] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:02:08,651 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:02:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:02:08,655 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:02:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:02:08,679 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:02:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:02:31,812 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:02:31,829 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:02:31,832 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:02:32,171 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:02:32,189 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:02:32,194 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:03:08,630 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:03:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:03:08,632 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:03:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:03:08,639 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:03:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:03:37,492 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:03:37,542 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:03:37,547 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:03:37,901 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:03:37,953 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:03:37,959 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:04:08,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:04:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:04:08,617 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:04:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:04:08,632 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:04:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:04:43,049 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:04:43,073 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:04:43,079 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:04:43,561 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:04:43,584 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:04:43,590 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:05:08,635 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:05:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:05:08,639 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:05:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:05:08,666 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:05:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:05:48,152 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:05:48,200 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:05:48,204 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:05:48,563 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:05:48,620 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:05:48,654 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:06:08,623 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:06:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:06:08,631 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:06:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:06:08,659 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:06:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:06:53,175 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:06:53,176 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:06:53,192 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:06:53,206 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:06:53,209 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:06:53,209 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:07:03,783 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-28 01:07:04,340 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:07:07,493 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:07:07,546 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:07:07,568 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:07:08,656 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:07:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:07:08,671 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:07:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:07:08,672 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:07:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:07:19,689 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:07:19,774 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-28 01:07:19,775 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-03-28 01:07:19,777 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:07:21,476 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:07:21,527 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:07:21,564 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:07:41,628 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:07:41] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:07:41,632 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:07:41] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:07:41,647 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:07:41] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:07:43,374 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:07:43] "GET / HTTP/1.1" 200 -
2025-03-28 01:07:43,595 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:07:43] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:07:43,608 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:07:43] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:07:43,621 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:07:43] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:07:45,528 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:07:45] "GET / HTTP/1.1" 200 -
2025-03-28 01:07:45,815 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:07:45] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:07:45,827 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:07:45] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:07:45,842 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:07:45] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:07:50,808 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:07:50] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:07:55,817 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:07:55,819 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:07:55] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:07:55,822 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:07:55] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:08:00,812 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:08:00,815 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:08:00] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:08:05,819 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:08:05,822 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:08:05] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:08:05,825 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:08:05] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:08:11,609 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:08:11,611 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:08:11] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:08:16,626 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:08:16] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:08:16,626 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:08:16,629 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:08:16] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:08:16,635 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:08:16] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:08:19,690 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:08:21,478 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:08:21,622 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:08:21,628 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:08:21] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:08:26,608 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:08:26,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:08:26] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:08:26,611 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:08:26] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:08:31,616 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:08:31,620 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:08:31] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:08:36,623 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:08:36,629 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:08:36] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:08:36,631 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:08:36] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:08:41,607 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:08:41,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:08:41] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:08:46,626 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:08:46,630 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:08:46] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:08:46,632 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:08:46] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:08:46,649 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:08:46] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:08:48,197 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-28 01:08:48,583 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:09:01,558 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-28 01:09:01,559 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-03-28 01:09:01,563 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:09:03,396 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:09:03,449 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:09:05,268 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:09:05,291 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:09:05,306 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:09:05,682 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:05] "GET / HTTP/1.1" 200 -
2025-03-28 01:09:05,825 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:05] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:09:05,833 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:05] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:09:05,860 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:05] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:09:06,688 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:09:06,714 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:09:06,720 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:09:07,016 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:09:07,045 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:09:07,053 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:07] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:09:10,336 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:10] "GET / HTTP/1.1" 200 -
2025-03-28 01:09:10,513 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:10] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:09:10,577 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:10] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:09:10,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:10] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:09:15,504 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:15] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:09:20,612 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:20] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:09:20,613 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:20] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:09:25,605 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:25] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:09:26,089 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-28 01:09:26,390 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:09:37,378 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:09:37,472 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-28 01:09:37,473 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-03-28 01:09:37,477 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:09:39,285 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:09:39,331 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:09:39,364 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:09:39,560 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:39] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:09:40,623 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:40] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:09:40,639 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:40] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:09:40,668 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:40] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:09:45,533 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:45] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:09:47,903 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:47] "GET / HTTP/1.1" 200 -
2025-03-28 01:09:48,141 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:48] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:09:48,178 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:48] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:09:48,204 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:48] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:09:51,197 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:51] "GET / HTTP/1.1" 200 -
2025-03-28 01:09:51,496 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:51] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:09:51,505 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:51] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:09:51,518 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:51] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:09:56,806 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:09:56] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:10:01,630 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:01] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:10:01,632 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:01] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:10:06,611 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:06] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:10:11,620 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:10:11,622 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:11] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:10:11,625 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:11] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:10:16,680 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:10:16,684 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:16] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:10:21,646 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:21] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:10:21,650 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:10:21,656 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:21] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:10:21,695 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:21] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:10:26,620 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:10:26,624 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:26] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:10:31,618 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:10:31,621 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:31] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:10:31,623 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:31] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:10:36,619 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:10:36,623 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:36] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:10:37,381 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:10:39,286 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:10:41,621 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:10:41,623 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:41] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:10:41,627 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:41] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:10:46,609 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:10:46,611 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:46] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:10:51,627 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:10:51,631 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:51] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:10:51,633 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:51] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:10:51,649 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:51] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:10:56,609 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:10:56,611 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:10:56] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:11:01,615 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:11:01,623 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:11:01] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:11:01,624 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:11:01] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:11:06,609 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:11:06,612 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:11:06] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:11:11,621 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:11:11,623 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:11:11] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:11:11,625 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:11:11] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:11:16,615 - ERROR - [main.py:106] - ARDUINO_API_URL not set in environment variables
2025-03-28 01:11:16,617 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:11:16] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:11:17,965 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-28 01:11:18,447 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:11:28,142 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-28 01:11:28,143 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-03-28 01:11:28,147 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:11:29,918 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:11:29,948 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:11:31,619 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:11:31,642 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:11:31,651 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:11:32,526 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:11:32,553 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:11:32,567 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:11:51,631 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:11:51] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:12:08,642 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:12:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:12:08,654 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:12:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:12:36,804 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:12:36,839 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:12:36,849 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:12:37,961 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:12:38,003 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:12:38,013 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:13:08,649 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:13:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:13:08,658 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:13:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:13:08,690 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:13:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:13:41,405 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:13:41,533 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:13:41,540 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:13:42,505 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:13:42,524 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:13:42,528 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:14:08,622 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:14:08,638 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:14:08,657 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:14:13,959 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:13] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:14:13,963 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:13] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:14:16,067 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:16] "GET / HTTP/1.1" 200 -
2025-03-28 01:14:16,545 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:16] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:14:16,557 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:16] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:14:16,578 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:16] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:14:21,617 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:21] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:14:26,617 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:26] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:14:26,619 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:26] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:14:31,622 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:31] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:14:36,624 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:36] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:14:36,627 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:36] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:14:41,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:41] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:14:46,627 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:46] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:14:46,628 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:46] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:14:46,662 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:14:46,680 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:14:46,684 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:14:47,497 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:14:47,521 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:14:47,534 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:14:50,979 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:14:51,032 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:14:51,042 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:51] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:14:51,620 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:51] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:14:56,624 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:56] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:14:56,628 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:14:56] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:15:01,605 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:15:01] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:15:06,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:15:06] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:15:06,611 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:15:06] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:15:11,659 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:15:11] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:15:16,626 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:15:16] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:15:16,633 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:15:16] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:15:16,642 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:15:16] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:15:46,616 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:15:46] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:15:50,569 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:15:50,590 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:15:50,610 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:15:52,111 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:15:52,152 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:15:52,155 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:16:08,627 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:16:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:16:08,633 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:16:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:16:16,614 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:16:16] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:16:54,953 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:16:54,971 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:16:54,975 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:16:56,172 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:16:56,189 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:16:56,192 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:17:08,619 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:17:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:17:08,627 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:17:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:17:08,643 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:17:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:17:58,438 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:17:58,452 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:17:58,454 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:17:59,386 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:17:59,399 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:17:59,402 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:18:08,728 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:18:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:18:08,741 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:18:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:18:08,758 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:18:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:19:01,449 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:19:01,461 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:19:01,463 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:19:01,989 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:19:02,001 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:19:02,003 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:19:08,614 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:19:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:19:08,618 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:19:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:19:08,626 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:19:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:20:04,797 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:20:04,811 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:20:04,814 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:20:04,846 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:20:04,865 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:20:04,867 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:20:08,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:20:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:20:08,613 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:20:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:20:08,618 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:20:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:21:08,015 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:21:08,028 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:21:08,030 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:21:08,272 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:21:08,284 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:21:08,286 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:21:08,609 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:21:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:21:08,614 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:21:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:21:08,620 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:21:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:22:08,616 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:22:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:22:08,633 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:22:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:22:11,755 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:22:11,926 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:22:11,929 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:22:12,169 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:22:12,228 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:22:12,255 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:22:12,824 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:22:12,874 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:22:12,877 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:22:12] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:23:08,612 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:23:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:23:08,632 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:23:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:23:08,635 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:23:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:23:15,580 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:23:15,598 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:23:15,604 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:23:15,828 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:23:15,848 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:23:15,852 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:23:50,127 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:23:50] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:23:50,130 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:23:50] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:23:50,141 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:23:50] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:23:51,525 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:23:51] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:23:56,609 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:23:56] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:23:56,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:23:56] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:24:01,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:01] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:24:06,603 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:06] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:24:06,605 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:06] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:24:11,603 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:11] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:24:16,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:16] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:24:16,620 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:16] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:24:18,557 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:24:18,570 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:24:18,573 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:24:18,847 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:24:18,863 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:24:18,865 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:24:19,516 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:24:19,529 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:24:19,532 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:19] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:24:21,605 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:21] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:24:26,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:26] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:24:26,611 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:26] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:24:31,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:31] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:24:36,605 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:36] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:24:36,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:36] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:24:41,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:41] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:24:46,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:46] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:24:46,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:46] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:24:46,619 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:46] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:24:51,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:24:51] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:25:08,611 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:25:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:25:08,612 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:25:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:25:21,992 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:25:22,005 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:25:22,007 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:25:22,255 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:25:22,270 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:25:22,273 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:25:46,340 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:25:46] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:25:46,354 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:25:46] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:25:46,368 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:25:46] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:25:51,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:25:51] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:25:56,603 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:25:56] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:25:56,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:25:56] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:26:01,605 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:26:01] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:26:06,609 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:26:06] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:26:06,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:26:06] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:26:11,601 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:26:11] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:26:16,606 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:26:16] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:26:16,609 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:26:16] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:26:16,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:26:16] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:26:21,603 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:26:21] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:26:24,508 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:26:24,547 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:26:24,549 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:26:25,632 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:26:25,648 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:26:25,650 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:26:26,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:26:26] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:26:26,605 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:26:26] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:26:31,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:26:31] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:26:36,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:26:36] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:26:36,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:26:36] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:26:41,603 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:26:41] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:26:46,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:26:46] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:26:46,606 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:26:46] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:26:46,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:26:46] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:26:55,317 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-28 01:26:55,812 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:26:59,478 - INFO - [main.py:377] - Starting background data collection thread
2025-03-28 01:26:59,682 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:26:59,724 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:27:02,798 - INFO - [main.py:266] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:27:02,814 - INFO - [main.py:254] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:27:02,819 - INFO - [main.py:392] - Data collected: 0.0 PPM, Status: Safe
2025-03-28 01:27:08,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:27:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:27:08,621 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:27:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:27:27,649 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:27:27,661 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:27:27,665 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:28:08,609 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:28:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:28:08,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:28:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:28:08,621 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:28:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:28:33,972 - INFO - [main.py:377] - Starting background data collection thread
2025-03-28 01:28:34,041 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-28 01:28:34,042 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-03-28 01:28:34,044 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:28:35,192 - INFO - [main.py:377] - Starting background data collection thread
2025-03-28 01:28:35,227 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:28:35,244 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:28:36,877 - INFO - [main.py:266] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:28:36,919 - INFO - [main.py:254] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:28:36,924 - INFO - [main.py:392] - Data collected: 0.0 PPM, Status: Safe
2025-03-28 01:28:37,513 - INFO - [main.py:266] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:28:37,528 - INFO - [main.py:254] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:28:37,532 - INFO - [main.py:392] - Data collected: 0.0 PPM, Status: Safe
2025-03-28 01:29:09,372 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:29:09] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:29:09,392 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:29:09] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:29:09,415 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:29:09] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:30:08,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:30:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:30:08,625 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:30:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:30:11,510 - INFO - [main.py:266] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:30:11,522 - INFO - [main.py:254] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:30:11,525 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:30:11] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:30:33,260 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:30:33] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:30:33,265 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:30:33] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:30:33,279 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:30:33] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:30:35,030 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:30:35] "GET / HTTP/1.1" 200 -
2025-03-28 01:30:35,279 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:30:35] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:30:35,282 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:30:35] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:30:35,292 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:30:35] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:30:40,269 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:30:40] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:30:45,603 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:30:45] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:30:45,605 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:30:45] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:30:50,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:30:50] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:30:55,621 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:30:55] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:30:55,628 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:30:55] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:31:00,270 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:00] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:31:05,270 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:05] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:31:05,273 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:05] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:31:05,278 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:05] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:31:10,301 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:10] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:31:15,608 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:15] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:31:19,142 - INFO - [main.py:266] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:31:19,155 - INFO - [main.py:254] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:31:19,157 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:19] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:31:20,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:20] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:31:25,603 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:25] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:31:25,606 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:25] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:31:30,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:30] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:31:35,606 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:35] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:31:35,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:35] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:31:35,612 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:35] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:31:40,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:40] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:31:45,603 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:45] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:31:45,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:45] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:31:50,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:50] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:31:55,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:55] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:31:55,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:31:55] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:32:00,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:32:00] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:32:05,605 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:32:05] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:32:05,609 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:32:05] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:32:05,609 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:32:05] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:32:10,605 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:32:10] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:32:17,012 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\routes\\api.py', reloading
2025-03-28 01:32:17,158 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:32:18,443 - INFO - [main.py:377] - Starting background data collection thread
2025-03-28 01:32:18,480 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:32:18,502 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:32:21,348 - INFO - [main.py:266] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:32:21,362 - INFO - [main.py:254] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:32:21,368 - INFO - [main.py:392] - Data collected: 0.0 PPM, Status: Safe
2025-03-28 01:32:33,972 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\routes\\api.py', reloading
2025-03-28 01:32:34,139 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:32:36,044 - INFO - [main.py:377] - Starting background data collection thread
2025-03-28 01:32:36,112 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:32:36,151 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:32:36,437 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:32:36] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:32:39,529 - INFO - [main.py:266] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:32:39,544 - INFO - [main.py:254] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:32:39,547 - INFO - [main.py:392] - Data collected: 0.0 PPM, Status: Safe
2025-03-28 01:32:51,800 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\utils\\sync_arduino_data.py', reloading
2025-03-28 01:32:52,067 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:32:53,693 - INFO - [main.py:377] - Starting background data collection thread
2025-03-28 01:32:53,768 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:32:53,824 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:32:57,738 - INFO - [main.py:266] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:32:57,759 - INFO - [main.py:254] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:32:57,770 - INFO - [main.py:392] - Data collected: 0.0 PPM, Status: Safe
2025-03-28 01:33:03,379 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-28 01:33:03,568 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:33:05,139 - INFO - [main.py:377] - Starting background data collection thread
2025-03-28 01:33:05,210 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:33:05,247 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:33:08,628 - ERROR - [main.py:308] - Error retrieving current reading: type object 'datetime.datetime' has no attribute 'UTC'
2025-03-28 01:33:08,632 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:33:08] "[35m[1mGET /api/current-reading HTTP/1.1[0m" 500 -
2025-03-28 01:33:08,647 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:33:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:33:08,662 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:33:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:33:08,706 - INFO - [main.py:266] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:33:08,724 - INFO - [main.py:254] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:33:08,727 - INFO - [main.py:392] - Data collected: 0.0 PPM, Status: Safe
2025-03-28 01:33:13,743 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-28 01:33:13,917 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:33:15,445 - INFO - [main.py:377] - Starting background data collection thread
2025-03-28 01:33:15,490 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:33:15,520 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:33:18,363 - INFO - [main.py:266] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:33:18,379 - INFO - [main.py:254] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:33:18,385 - INFO - [main.py:392] - Data collected: 0.0 PPM, Status: Safe
2025-03-28 01:33:28,913 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-28 01:33:29,113 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:33:30,850 - INFO - [main.py:377] - Starting background data collection thread
2025-03-28 01:33:30,899 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:33:30,924 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:33:33,696 - INFO - [main.py:266] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:33:33,712 - INFO - [main.py:254] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:33:33,719 - INFO - [main.py:392] - Data collected: 0.0 PPM, Status: Safe
2025-03-28 01:34:08,609 - ERROR - [main.py:322] - Error retrieving alerts: type object 'datetime.datetime' has no attribute 'UTC'
2025-03-28 01:34:08,612 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:34:08] "[35m[1mGET /api/alerts HTTP/1.1[0m" 500 -
2025-03-28 01:34:08,612 - ERROR - [main.py:308] - Error retrieving current reading: type object 'datetime.datetime' has no attribute 'UTC'
2025-03-28 01:34:08,614 - ERROR - [main.py:284] - Error retrieving gas readings: type object 'datetime.datetime' has no attribute 'UTC'
2025-03-28 01:34:08,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:34:08] "[35m[1mGET /api/current-reading HTTP/1.1[0m" 500 -
2025-03-28 01:34:08,617 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:34:08] "[35m[1mGET /api/gas_readings HTTP/1.1[0m" 500 -
2025-03-28 01:34:40,609 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-28 01:34:40,787 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:34:42,273 - INFO - [main.py:377] - Starting background data collection thread
2025-03-28 01:34:42,309 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:34:42,327 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:34:44,763 - INFO - [main.py:266] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:34:44,778 - INFO - [main.py:254] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:34:44,788 - INFO - [main.py:392] - Data collected: 0.0 PPM, Status: Safe
2025-03-28 01:35:08,619 - ERROR - [main.py:308] - Error retrieving current reading: type object 'datetime.datetime' has no attribute 'UTC'
2025-03-28 01:35:08,622 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:35:08] "[35m[1mGET /api/current-reading HTTP/1.1[0m" 500 -
2025-03-28 01:35:08,631 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:35:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:35:08,643 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:35:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:35:20,258 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\routes\\api.py', reloading
2025-03-28 01:35:20,410 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:35:21,733 - INFO - [main.py:377] - Starting background data collection thread
2025-03-28 01:35:21,784 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:35:21,817 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:35:24,888 - INFO - [main.py:266] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:35:24,906 - INFO - [main.py:254] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:35:24,911 - INFO - [main.py:392] - Data collected: 0.0 PPM, Status: Safe
2025-03-28 01:35:33,227 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-28 01:35:33,369 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:35:52,954 - INFO - [_internal.py:97] - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.8.104:5000
2025-03-28 01:35:52,954 - INFO - [_internal.py:97] - [33mPress CTRL+C to quit[0m
2025-03-28 01:35:52,956 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:35:54,303 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:35:54,319 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:35:56,055 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:35:56,078 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:35:56,086 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:35:57,004 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:35:57,021 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:35:57,031 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:36:08,611 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:36:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:36:08,618 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:36:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:36:08,624 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:36:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:36:41,389 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:36:41] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:36:41,390 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:36:41] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:36:41,405 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:36:41] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:36:44,070 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:36:44] "GET / HTTP/1.1" 200 -
2025-03-28 01:36:44,187 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:36:44] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:36:44,197 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:36:44] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:36:44,209 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:36:44] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:36:49,185 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:36:49] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:36:54,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:36:54] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:36:54,608 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:36:54] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:36:59,511 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:36:59,529 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:36:59,532 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:36:59,605 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:36:59] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:37:00,444 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:37:00,456 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:37:00,458 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:37:04,608 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:04] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:37:04,609 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:04] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:37:09,605 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:09] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:37:14,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:14] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:37:14,609 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:14] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:37:14,613 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:14] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:37:19,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:19] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:37:24,603 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:24] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:37:24,603 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:24] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:37:29,603 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:29] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:37:34,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:34] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:37:34,603 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:34] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:37:39,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:39] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:37:44,605 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:44] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:37:44,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:44] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:37:44,613 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:44] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:37:49,603 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:49] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:37:54,605 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:54] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:37:54,606 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:54] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:37:59,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:37:59] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:38:02,669 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:38:02,810 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:38:02,812 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:38:03,646 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:38:03,665 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:38:03,667 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:38:04,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:38:04] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:38:04,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:38:04] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:38:09,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:38:09] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:38:14,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:38:14] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:38:14,606 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:38:14] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:38:14,611 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:38:14] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:38:19,601 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:38:19] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:38:24,602 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:38:24] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:38:24,604 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:38:24] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:38:29,603 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:38:29] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:38:34,606 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:38:34] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:38:34,607 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:38:34] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:38:39,605 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:38:39] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:38:44,609 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:38:44] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:38:44,612 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:38:44] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:38:44,616 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:38:44] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:38:49,605 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:38:49] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:39:05,517 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:39:05,530 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:39:05,532 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:39:06,600 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:39:06,612 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:39:06,614 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:39:08,609 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:39:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:39:08,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:39:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:40:08,665 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:40:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:40:08,742 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:40:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:40:10,417 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:40:10,495 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:40:10,498 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:40:11,011 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:40:11,024 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:40:11,026 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:40:11,529 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:40:11,546 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:40:11,549 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:40:11] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:41:08,609 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:41:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:41:08,614 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:41:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:41:08,620 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:41:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:41:13,140 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:41:13,152 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:41:13,154 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:41:13,461 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:41:13,473 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:41:13,475 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:42:08,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:42:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:42:08,617 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:42:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:42:08,625 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:42:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:42:16,977 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:42:16,991 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:42:16,993 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:42:17,117 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:42:17,130 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:42:17,132 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:43:08,611 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:43:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:43:08,614 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:43:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:43:08,621 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:43:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:43:19,956 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:43:19,969 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:43:19,971 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:43:20,176 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:43:20,197 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:43:20,201 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:44:08,606 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:44:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:44:08,612 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:44:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:44:08,620 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:44:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:44:22,876 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:44:22,888 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:44:22,890 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:44:23,240 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:44:23,254 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:44:23,256 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:45:08,605 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:45:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:45:08,610 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:45:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:45:08,624 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:45:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:45:25,466 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:45:25,478 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:45:25,480 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:45:26,088 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:45:26,099 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:45:26,101 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:46:08,611 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:46:08] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:46:08,615 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:46:08] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:46:08,621 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:46:08] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:46:27,747 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:46:27,767 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:46:27,770 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:46:28,613 - INFO - [main.py:217] - Successfully retrieved data from Arduino Cloud
2025-03-28 01:46:28,632 - INFO - [main.py:205] - Gas reading stored: 0.0 PPM, Status: Safe
2025-03-28 01:46:28,634 - INFO - [main.py:298] - Successfully collected data in background thread
2025-03-28 01:47:06,720 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-28 01:47:07,067 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:47:10,688 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:47:10,720 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:47:10,822 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:47:10] "GET /api/current-reading HTTP/1.1" 200 -
2025-03-28 01:47:10,828 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:47:10] "GET /api/alerts HTTP/1.1" 200 -
2025-03-28 01:47:10,851 - INFO - [_internal.py:97] - 127.0.0.1 - - [28/Mar/2025 01:47:10] "GET /api/gas_readings HTTP/1.1" 200 -
2025-03-28 01:47:12,985 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-28 01:47:13,379 - INFO - [_internal.py:97] -  * Restarting with stat
2025-03-28 01:47:15,100 - WARNING - [_internal.py:97] -  * Debugger is active!
2025-03-28 01:47:15,126 - INFO - [_internal.py:97] -  * Debugger PIN: 106-521-103
2025-03-28 01:47:17,342 - INFO - [_internal.py:97] -  * Detected change in 'C:\\Users\\eugen\\projects\\Gas-Detection-App\\main.py', reloading
2025-03-28 01:47:17,574 - INFO - [_internal.py:97] -  * Restarting with stat
